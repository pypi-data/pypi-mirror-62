"""
Main interface for pinpoint service type definitions.

Usage::

    from mypy_boto3.pinpoint.type_defs import ClientCreateAppCreateApplicationRequestTypeDef

    data: ClientCreateAppCreateApplicationRequestTypeDef = {...}
"""
from datetime import datetime
import sys
from typing import Dict, List

if sys.version_info >= (3, 8):
    from typing import Literal
else:
    from typing_extensions import Literal
if sys.version_info >= (3, 8):
    from typing import TypedDict
else:
    from typing_extensions import TypedDict


__all__ = (
    "ClientCreateAppCreateApplicationRequestTypeDef",
    "ClientCreateAppResponseApplicationResponseTypeDef",
    "ClientCreateAppResponseTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef",
    "ClientCreateCampaignResponseCampaignResponseDefaultStateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseHookTypeDef",
    "ClientCreateCampaignResponseCampaignResponseLimitsTypeDef",
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationTypeDef",
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterTypeDef",
    "ClientCreateCampaignResponseCampaignResponseScheduleQuietTimeTypeDef",
    "ClientCreateCampaignResponseCampaignResponseScheduleTypeDef",
    "ClientCreateCampaignResponseCampaignResponseStateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationTypeDef",
    "ClientCreateCampaignResponseCampaignResponseTypeDef",
    "ClientCreateCampaignResponseTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleQuietTimeTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationTypeDef",
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTypeDef",
    "ClientCreateCampaignWriteCampaignRequestHookTypeDef",
    "ClientCreateCampaignWriteCampaignRequestLimitsTypeDef",
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationADMMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationAPNSMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationBaiduMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationDefaultMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationEmailMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationGCMMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationSMSMessageTypeDef",
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationTypeDef",
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsTypeDef",
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterTypeDef",
    "ClientCreateCampaignWriteCampaignRequestScheduleQuietTimeTypeDef",
    "ClientCreateCampaignWriteCampaignRequestScheduleTypeDef",
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationEmailTemplateTypeDef",
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationPushTemplateTypeDef",
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationSMSTemplateTypeDef",
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationVoiceTemplateTypeDef",
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationTypeDef",
    "ClientCreateCampaignWriteCampaignRequestTypeDef",
    "ClientCreateEmailTemplateEmailTemplateRequestTypeDef",
    "ClientCreateEmailTemplateResponseCreateTemplateMessageBodyTypeDef",
    "ClientCreateEmailTemplateResponseTypeDef",
    "ClientCreateExportJobExportJobRequestTypeDef",
    "ClientCreateExportJobResponseExportJobResponseDefinitionTypeDef",
    "ClientCreateExportJobResponseExportJobResponseTypeDef",
    "ClientCreateExportJobResponseTypeDef",
    "ClientCreateImportJobImportJobRequestTypeDef",
    "ClientCreateImportJobResponseImportJobResponseDefinitionTypeDef",
    "ClientCreateImportJobResponseImportJobResponseTypeDef",
    "ClientCreateImportJobResponseTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesEMAILTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesHoldoutTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesWaitTypeDef",
    "ClientCreateJourneyResponseJourneyResponseActivitiesTypeDef",
    "ClientCreateJourneyResponseJourneyResponseLimitsTypeDef",
    "ClientCreateJourneyResponseJourneyResponseQuietTimeTypeDef",
    "ClientCreateJourneyResponseJourneyResponseScheduleTypeDef",
    "ClientCreateJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseStartConditionTypeDef",
    "ClientCreateJourneyResponseJourneyResponseTypeDef",
    "ClientCreateJourneyResponseTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesEMAILMessageConfigTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesEMAILTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesHoldoutTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesRandomSplitBranchesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesRandomSplitTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesWaitWaitTimeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesWaitTypeDef",
    "ClientCreateJourneyWriteJourneyRequestActivitiesTypeDef",
    "ClientCreateJourneyWriteJourneyRequestLimitsTypeDef",
    "ClientCreateJourneyWriteJourneyRequestQuietTimeTypeDef",
    "ClientCreateJourneyWriteJourneyRequestScheduleTypeDef",
    "ClientCreateJourneyWriteJourneyRequestStartConditionSegmentStartConditionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestStartConditionTypeDef",
    "ClientCreateJourneyWriteJourneyRequestTypeDef",
    "ClientCreatePushTemplatePushNotificationTemplateRequestADMTypeDef",
    "ClientCreatePushTemplatePushNotificationTemplateRequestAPNSTypeDef",
    "ClientCreatePushTemplatePushNotificationTemplateRequestBaiduTypeDef",
    "ClientCreatePushTemplatePushNotificationTemplateRequestDefaultTypeDef",
    "ClientCreatePushTemplatePushNotificationTemplateRequestGCMTypeDef",
    "ClientCreatePushTemplatePushNotificationTemplateRequestTypeDef",
    "ClientCreatePushTemplateResponseCreateTemplateMessageBodyTypeDef",
    "ClientCreatePushTemplateResponseTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsAttributesTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsBehaviorTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsLocationTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsMetricsTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef",
    "ClientCreateSegmentResponseSegmentResponseDimensionsTypeDef",
    "ClientCreateSegmentResponseSegmentResponseImportDefinitionTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsTypeDef",
    "ClientCreateSegmentResponseSegmentResponseTypeDef",
    "ClientCreateSegmentResponseTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsAttributesTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsBehaviorRecencyTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsBehaviorTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicAppVersionTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicChannelTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicDeviceTypeTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicMakeTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicModelTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicPlatformTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsLocationCountryTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsLocationGPSPointTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsLocationTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsMetricsTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsUserAttributesTypeDef",
    "ClientCreateSegmentWriteSegmentRequestDimensionsTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsAttributesTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsMetricsTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsSourceSegmentsTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsTypeDef",
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsTypeDef",
    "ClientCreateSegmentWriteSegmentRequestTypeDef",
    "ClientCreateSmsTemplateResponseCreateTemplateMessageBodyTypeDef",
    "ClientCreateSmsTemplateResponseTypeDef",
    "ClientCreateSmsTemplateSMSTemplateRequestTypeDef",
    "ClientCreateVoiceTemplateResponseCreateTemplateMessageBodyTypeDef",
    "ClientCreateVoiceTemplateResponseTypeDef",
    "ClientCreateVoiceTemplateVoiceTemplateRequestTypeDef",
    "ClientDeleteAdmChannelResponseADMChannelResponseTypeDef",
    "ClientDeleteAdmChannelResponseTypeDef",
    "ClientDeleteApnsChannelResponseAPNSChannelResponseTypeDef",
    "ClientDeleteApnsChannelResponseTypeDef",
    "ClientDeleteApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef",
    "ClientDeleteApnsSandboxChannelResponseTypeDef",
    "ClientDeleteApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef",
    "ClientDeleteApnsVoipChannelResponseTypeDef",
    "ClientDeleteApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef",
    "ClientDeleteApnsVoipSandboxChannelResponseTypeDef",
    "ClientDeleteAppResponseApplicationResponseTypeDef",
    "ClientDeleteAppResponseTypeDef",
    "ClientDeleteBaiduChannelResponseBaiduChannelResponseTypeDef",
    "ClientDeleteBaiduChannelResponseTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseDefaultStateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseHookTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseLimitsTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseScheduleQuietTimeTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseScheduleTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseStateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationTypeDef",
    "ClientDeleteCampaignResponseCampaignResponseTypeDef",
    "ClientDeleteCampaignResponseTypeDef",
    "ClientDeleteEmailChannelResponseEmailChannelResponseTypeDef",
    "ClientDeleteEmailChannelResponseTypeDef",
    "ClientDeleteEmailTemplateResponseMessageBodyTypeDef",
    "ClientDeleteEmailTemplateResponseTypeDef",
    "ClientDeleteEndpointResponseEndpointResponseDemographicTypeDef",
    "ClientDeleteEndpointResponseEndpointResponseLocationTypeDef",
    "ClientDeleteEndpointResponseEndpointResponseUserTypeDef",
    "ClientDeleteEndpointResponseEndpointResponseTypeDef",
    "ClientDeleteEndpointResponseTypeDef",
    "ClientDeleteEventStreamResponseEventStreamTypeDef",
    "ClientDeleteEventStreamResponseTypeDef",
    "ClientDeleteGcmChannelResponseGCMChannelResponseTypeDef",
    "ClientDeleteGcmChannelResponseTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesEMAILTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesHoldoutTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesWaitTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseActivitiesTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseLimitsTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseQuietTimeTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseScheduleTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseStartConditionTypeDef",
    "ClientDeleteJourneyResponseJourneyResponseTypeDef",
    "ClientDeleteJourneyResponseTypeDef",
    "ClientDeletePushTemplateResponseMessageBodyTypeDef",
    "ClientDeletePushTemplateResponseTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsAttributesTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsBehaviorTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsLocationTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsMetricsTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseDimensionsTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseImportDefinitionTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsTypeDef",
    "ClientDeleteSegmentResponseSegmentResponseTypeDef",
    "ClientDeleteSegmentResponseTypeDef",
    "ClientDeleteSmsChannelResponseSMSChannelResponseTypeDef",
    "ClientDeleteSmsChannelResponseTypeDef",
    "ClientDeleteSmsTemplateResponseMessageBodyTypeDef",
    "ClientDeleteSmsTemplateResponseTypeDef",
    "ClientDeleteUserEndpointsResponseEndpointsResponseItemDemographicTypeDef",
    "ClientDeleteUserEndpointsResponseEndpointsResponseItemLocationTypeDef",
    "ClientDeleteUserEndpointsResponseEndpointsResponseItemUserTypeDef",
    "ClientDeleteUserEndpointsResponseEndpointsResponseItemTypeDef",
    "ClientDeleteUserEndpointsResponseEndpointsResponseTypeDef",
    "ClientDeleteUserEndpointsResponseTypeDef",
    "ClientDeleteVoiceChannelResponseVoiceChannelResponseTypeDef",
    "ClientDeleteVoiceChannelResponseTypeDef",
    "ClientDeleteVoiceTemplateResponseMessageBodyTypeDef",
    "ClientDeleteVoiceTemplateResponseTypeDef",
    "ClientGetAdmChannelResponseADMChannelResponseTypeDef",
    "ClientGetAdmChannelResponseTypeDef",
    "ClientGetApnsChannelResponseAPNSChannelResponseTypeDef",
    "ClientGetApnsChannelResponseTypeDef",
    "ClientGetApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef",
    "ClientGetApnsSandboxChannelResponseTypeDef",
    "ClientGetApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef",
    "ClientGetApnsVoipChannelResponseTypeDef",
    "ClientGetApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef",
    "ClientGetApnsVoipSandboxChannelResponseTypeDef",
    "ClientGetAppResponseApplicationResponseTypeDef",
    "ClientGetAppResponseTypeDef",
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef",
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsValuesTypeDef",
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsTypeDef",
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultTypeDef",
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseTypeDef",
    "ClientGetApplicationDateRangeKpiResponseTypeDef",
    "ClientGetApplicationSettingsResponseApplicationSettingsResourceCampaignHookTypeDef",
    "ClientGetApplicationSettingsResponseApplicationSettingsResourceLimitsTypeDef",
    "ClientGetApplicationSettingsResponseApplicationSettingsResourceQuietTimeTypeDef",
    "ClientGetApplicationSettingsResponseApplicationSettingsResourceTypeDef",
    "ClientGetApplicationSettingsResponseTypeDef",
    "ClientGetAppsResponseApplicationsResponseItemTypeDef",
    "ClientGetAppsResponseApplicationsResponseTypeDef",
    "ClientGetAppsResponseTypeDef",
    "ClientGetBaiduChannelResponseBaiduChannelResponseTypeDef",
    "ClientGetBaiduChannelResponseTypeDef",
    "ClientGetCampaignActivitiesResponseActivitiesResponseItemTypeDef",
    "ClientGetCampaignActivitiesResponseActivitiesResponseTypeDef",
    "ClientGetCampaignActivitiesResponseTypeDef",
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef",
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsValuesTypeDef",
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsTypeDef",
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultTypeDef",
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseTypeDef",
    "ClientGetCampaignDateRangeKpiResponseTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef",
    "ClientGetCampaignResponseCampaignResponseDefaultStateTypeDef",
    "ClientGetCampaignResponseCampaignResponseHookTypeDef",
    "ClientGetCampaignResponseCampaignResponseLimitsTypeDef",
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationTypeDef",
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterTypeDef",
    "ClientGetCampaignResponseCampaignResponseScheduleQuietTimeTypeDef",
    "ClientGetCampaignResponseCampaignResponseScheduleTypeDef",
    "ClientGetCampaignResponseCampaignResponseStateTypeDef",
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationTypeDef",
    "ClientGetCampaignResponseCampaignResponseTypeDef",
    "ClientGetCampaignResponseTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseDefaultStateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseHookTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseLimitsTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseScheduleQuietTimeTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseScheduleTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseStateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationTypeDef",
    "ClientGetCampaignVersionResponseCampaignResponseTypeDef",
    "ClientGetCampaignVersionResponseTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleQuietTimeTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsStateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemDefaultStateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemHookTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemLimitsTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationADMMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationAPNSMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationBaiduMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationDefaultMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationEmailMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationGCMMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationSMSMessageTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleQuietTimeTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemStateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationEmailTemplateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationPushTemplateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationSMSTemplateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationVoiceTemplateTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTypeDef",
    "ClientGetCampaignVersionsResponseCampaignsResponseTypeDef",
    "ClientGetCampaignVersionsResponseTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleQuietTimeTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsStateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemDefaultStateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemHookTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemLimitsTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationADMMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationAPNSMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationBaiduMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationDefaultMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationEmailMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationGCMMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationSMSMessageTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleQuietTimeTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemStateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationEmailTemplateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationPushTemplateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationSMSTemplateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationVoiceTemplateTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseItemTypeDef",
    "ClientGetCampaignsResponseCampaignsResponseTypeDef",
    "ClientGetCampaignsResponseTypeDef",
    "ClientGetChannelsResponseChannelsResponseChannelsTypeDef",
    "ClientGetChannelsResponseChannelsResponseTypeDef",
    "ClientGetChannelsResponseTypeDef",
    "ClientGetEmailChannelResponseEmailChannelResponseTypeDef",
    "ClientGetEmailChannelResponseTypeDef",
    "ClientGetEmailTemplateResponseEmailTemplateResponseTypeDef",
    "ClientGetEmailTemplateResponseTypeDef",
    "ClientGetEndpointResponseEndpointResponseDemographicTypeDef",
    "ClientGetEndpointResponseEndpointResponseLocationTypeDef",
    "ClientGetEndpointResponseEndpointResponseUserTypeDef",
    "ClientGetEndpointResponseEndpointResponseTypeDef",
    "ClientGetEndpointResponseTypeDef",
    "ClientGetEventStreamResponseEventStreamTypeDef",
    "ClientGetEventStreamResponseTypeDef",
    "ClientGetExportJobResponseExportJobResponseDefinitionTypeDef",
    "ClientGetExportJobResponseExportJobResponseTypeDef",
    "ClientGetExportJobResponseTypeDef",
    "ClientGetExportJobsResponseExportJobsResponseItemDefinitionTypeDef",
    "ClientGetExportJobsResponseExportJobsResponseItemTypeDef",
    "ClientGetExportJobsResponseExportJobsResponseTypeDef",
    "ClientGetExportJobsResponseTypeDef",
    "ClientGetGcmChannelResponseGCMChannelResponseTypeDef",
    "ClientGetGcmChannelResponseTypeDef",
    "ClientGetImportJobResponseImportJobResponseDefinitionTypeDef",
    "ClientGetImportJobResponseImportJobResponseTypeDef",
    "ClientGetImportJobResponseTypeDef",
    "ClientGetImportJobsResponseImportJobsResponseItemDefinitionTypeDef",
    "ClientGetImportJobsResponseImportJobsResponseItemTypeDef",
    "ClientGetImportJobsResponseImportJobsResponseTypeDef",
    "ClientGetImportJobsResponseTypeDef",
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef",
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsValuesTypeDef",
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsTypeDef",
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultTypeDef",
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseTypeDef",
    "ClientGetJourneyDateRangeKpiResponseTypeDef",
    "ClientGetJourneyExecutionActivityMetricsResponseJourneyExecutionActivityMetricsResponseTypeDef",
    "ClientGetJourneyExecutionActivityMetricsResponseTypeDef",
    "ClientGetJourneyExecutionMetricsResponseJourneyExecutionMetricsResponseTypeDef",
    "ClientGetJourneyExecutionMetricsResponseTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesEMAILTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesHoldoutTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesWaitTypeDef",
    "ClientGetJourneyResponseJourneyResponseActivitiesTypeDef",
    "ClientGetJourneyResponseJourneyResponseLimitsTypeDef",
    "ClientGetJourneyResponseJourneyResponseQuietTimeTypeDef",
    "ClientGetJourneyResponseJourneyResponseScheduleTypeDef",
    "ClientGetJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    "ClientGetJourneyResponseJourneyResponseStartConditionTypeDef",
    "ClientGetJourneyResponseJourneyResponseTypeDef",
    "ClientGetJourneyResponseTypeDef",
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseADMTypeDef",
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseAPNSTypeDef",
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseBaiduTypeDef",
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseDefaultTypeDef",
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseGCMTypeDef",
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseTypeDef",
    "ClientGetPushTemplateResponseTypeDef",
    "ClientGetSegmentExportJobsResponseExportJobsResponseItemDefinitionTypeDef",
    "ClientGetSegmentExportJobsResponseExportJobsResponseItemTypeDef",
    "ClientGetSegmentExportJobsResponseExportJobsResponseTypeDef",
    "ClientGetSegmentExportJobsResponseTypeDef",
    "ClientGetSegmentImportJobsResponseImportJobsResponseItemDefinitionTypeDef",
    "ClientGetSegmentImportJobsResponseImportJobsResponseItemTypeDef",
    "ClientGetSegmentImportJobsResponseImportJobsResponseTypeDef",
    "ClientGetSegmentImportJobsResponseTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsAttributesTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsBehaviorTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsLocationTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsMetricsTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef",
    "ClientGetSegmentResponseSegmentResponseDimensionsTypeDef",
    "ClientGetSegmentResponseSegmentResponseImportDefinitionTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsTypeDef",
    "ClientGetSegmentResponseSegmentResponseTypeDef",
    "ClientGetSegmentResponseTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsAttributesTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsBehaviorTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicModelTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationCountryTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsMetricsTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsUserAttributesTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseImportDefinitionTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsTypeDef",
    "ClientGetSegmentVersionResponseSegmentResponseTypeDef",
    "ClientGetSegmentVersionResponseTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsAttributesTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsBehaviorRecencyTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsBehaviorTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicAppVersionTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicChannelTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicMakeTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicModelTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicPlatformTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationCountryTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationGPSPointTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsMetricsTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsUserAttributesTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemImportDefinitionTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsAttributesTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsMetricsTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsSourceSegmentsTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseItemTypeDef",
    "ClientGetSegmentVersionsResponseSegmentsResponseTypeDef",
    "ClientGetSegmentVersionsResponseTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsAttributesTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsBehaviorRecencyTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsBehaviorTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicAppVersionTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicChannelTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicMakeTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicModelTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicPlatformTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationCountryTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationGPSPointTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsMetricsTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsUserAttributesTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemImportDefinitionTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsAttributesTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsMetricsTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsSourceSegmentsTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseItemTypeDef",
    "ClientGetSegmentsResponseSegmentsResponseTypeDef",
    "ClientGetSegmentsResponseTypeDef",
    "ClientGetSmsChannelResponseSMSChannelResponseTypeDef",
    "ClientGetSmsChannelResponseTypeDef",
    "ClientGetSmsTemplateResponseSMSTemplateResponseTypeDef",
    "ClientGetSmsTemplateResponseTypeDef",
    "ClientGetUserEndpointsResponseEndpointsResponseItemDemographicTypeDef",
    "ClientGetUserEndpointsResponseEndpointsResponseItemLocationTypeDef",
    "ClientGetUserEndpointsResponseEndpointsResponseItemUserTypeDef",
    "ClientGetUserEndpointsResponseEndpointsResponseItemTypeDef",
    "ClientGetUserEndpointsResponseEndpointsResponseTypeDef",
    "ClientGetUserEndpointsResponseTypeDef",
    "ClientGetVoiceChannelResponseVoiceChannelResponseTypeDef",
    "ClientGetVoiceChannelResponseTypeDef",
    "ClientGetVoiceTemplateResponseVoiceTemplateResponseTypeDef",
    "ClientGetVoiceTemplateResponseTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesEMAILMessageConfigTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesEMAILTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesHoldoutTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesRandomSplitBranchesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesRandomSplitTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesWaitWaitTimeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesWaitTypeDef",
    "ClientListJourneysResponseJourneysResponseItemActivitiesTypeDef",
    "ClientListJourneysResponseJourneysResponseItemLimitsTypeDef",
    "ClientListJourneysResponseJourneysResponseItemQuietTimeTypeDef",
    "ClientListJourneysResponseJourneysResponseItemScheduleTypeDef",
    "ClientListJourneysResponseJourneysResponseItemStartConditionSegmentStartConditionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemStartConditionTypeDef",
    "ClientListJourneysResponseJourneysResponseItemTypeDef",
    "ClientListJourneysResponseJourneysResponseTypeDef",
    "ClientListJourneysResponseTypeDef",
    "ClientListTagsForResourceResponseTagsModelTypeDef",
    "ClientListTagsForResourceResponseTypeDef",
    "ClientListTemplateVersionsResponseTemplateVersionsResponseItemTypeDef",
    "ClientListTemplateVersionsResponseTemplateVersionsResponseTypeDef",
    "ClientListTemplateVersionsResponseTypeDef",
    "ClientListTemplatesResponseTemplatesResponseItemTypeDef",
    "ClientListTemplatesResponseTemplatesResponseTypeDef",
    "ClientListTemplatesResponseTypeDef",
    "ClientPhoneNumberValidateNumberValidateRequestTypeDef",
    "ClientPhoneNumberValidateResponseNumberValidateResponseTypeDef",
    "ClientPhoneNumberValidateResponseTypeDef",
    "ClientPutEventStreamResponseEventStreamTypeDef",
    "ClientPutEventStreamResponseTypeDef",
    "ClientPutEventStreamWriteEventStreamTypeDef",
    "ClientPutEventsEventsRequestBatchItemEndpointDemographicTypeDef",
    "ClientPutEventsEventsRequestBatchItemEndpointLocationTypeDef",
    "ClientPutEventsEventsRequestBatchItemEndpointUserTypeDef",
    "ClientPutEventsEventsRequestBatchItemEndpointTypeDef",
    "ClientPutEventsEventsRequestBatchItemEventsSessionTypeDef",
    "ClientPutEventsEventsRequestBatchItemEventsTypeDef",
    "ClientPutEventsEventsRequestBatchItemTypeDef",
    "ClientPutEventsEventsRequestTypeDef",
    "ClientPutEventsResponseEventsResponseResultsEndpointItemResponseTypeDef",
    "ClientPutEventsResponseEventsResponseResultsEventsItemResponseTypeDef",
    "ClientPutEventsResponseEventsResponseResultsTypeDef",
    "ClientPutEventsResponseEventsResponseTypeDef",
    "ClientPutEventsResponseTypeDef",
    "ClientRemoveAttributesResponseAttributesResourceTypeDef",
    "ClientRemoveAttributesResponseTypeDef",
    "ClientRemoveAttributesUpdateAttributesRequestTypeDef",
    "ClientSendMessagesMessageRequestAddressesTypeDef",
    "ClientSendMessagesMessageRequestEndpointsTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationADMMessageTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationAPNSMessageTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationBaiduMessageTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationDefaultMessageTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationDefaultPushNotificationMessageTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageRawEmailTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailHtmlPartTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailSubjectTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailTextPartTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationGCMMessageTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationSMSMessageTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationVoiceMessageTypeDef",
    "ClientSendMessagesMessageRequestMessageConfigurationTypeDef",
    "ClientSendMessagesMessageRequestTemplateConfigurationEmailTemplateTypeDef",
    "ClientSendMessagesMessageRequestTemplateConfigurationPushTemplateTypeDef",
    "ClientSendMessagesMessageRequestTemplateConfigurationSMSTemplateTypeDef",
    "ClientSendMessagesMessageRequestTemplateConfigurationVoiceTemplateTypeDef",
    "ClientSendMessagesMessageRequestTemplateConfigurationTypeDef",
    "ClientSendMessagesMessageRequestTypeDef",
    "ClientSendMessagesResponseMessageResponseEndpointResultTypeDef",
    "ClientSendMessagesResponseMessageResponseResultTypeDef",
    "ClientSendMessagesResponseMessageResponseTypeDef",
    "ClientSendMessagesResponseTypeDef",
    "ClientSendUsersMessagesResponseSendUsersMessageResponseResultTypeDef",
    "ClientSendUsersMessagesResponseSendUsersMessageResponseTypeDef",
    "ClientSendUsersMessagesResponseTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationADMMessageTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationAPNSMessageTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationBaiduMessageTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationDefaultMessageTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationDefaultPushNotificationMessageTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageRawEmailTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailHtmlPartTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailSubjectTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailTextPartTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationGCMMessageTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationSMSMessageTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationVoiceMessageTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationEmailTemplateTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationPushTemplateTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationSMSTemplateTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationVoiceTemplateTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestUsersTypeDef",
    "ClientSendUsersMessagesSendUsersMessageRequestTypeDef",
    "ClientTagResourceTagsModelTypeDef",
    "ClientUpdateAdmChannelADMChannelRequestTypeDef",
    "ClientUpdateAdmChannelResponseADMChannelResponseTypeDef",
    "ClientUpdateAdmChannelResponseTypeDef",
    "ClientUpdateApnsChannelAPNSChannelRequestTypeDef",
    "ClientUpdateApnsChannelResponseAPNSChannelResponseTypeDef",
    "ClientUpdateApnsChannelResponseTypeDef",
    "ClientUpdateApnsSandboxChannelAPNSSandboxChannelRequestTypeDef",
    "ClientUpdateApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef",
    "ClientUpdateApnsSandboxChannelResponseTypeDef",
    "ClientUpdateApnsVoipChannelAPNSVoipChannelRequestTypeDef",
    "ClientUpdateApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef",
    "ClientUpdateApnsVoipChannelResponseTypeDef",
    "ClientUpdateApnsVoipSandboxChannelAPNSVoipSandboxChannelRequestTypeDef",
    "ClientUpdateApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef",
    "ClientUpdateApnsVoipSandboxChannelResponseTypeDef",
    "ClientUpdateApplicationSettingsResponseApplicationSettingsResourceCampaignHookTypeDef",
    "ClientUpdateApplicationSettingsResponseApplicationSettingsResourceLimitsTypeDef",
    "ClientUpdateApplicationSettingsResponseApplicationSettingsResourceQuietTimeTypeDef",
    "ClientUpdateApplicationSettingsResponseApplicationSettingsResourceTypeDef",
    "ClientUpdateApplicationSettingsResponseTypeDef",
    "ClientUpdateApplicationSettingsWriteApplicationSettingsRequestCampaignHookTypeDef",
    "ClientUpdateApplicationSettingsWriteApplicationSettingsRequestLimitsTypeDef",
    "ClientUpdateApplicationSettingsWriteApplicationSettingsRequestQuietTimeTypeDef",
    "ClientUpdateApplicationSettingsWriteApplicationSettingsRequestTypeDef",
    "ClientUpdateBaiduChannelBaiduChannelRequestTypeDef",
    "ClientUpdateBaiduChannelResponseBaiduChannelResponseTypeDef",
    "ClientUpdateBaiduChannelResponseTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseDefaultStateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseHookTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseLimitsTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseScheduleQuietTimeTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseScheduleTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseStateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationTypeDef",
    "ClientUpdateCampaignResponseCampaignResponseTypeDef",
    "ClientUpdateCampaignResponseTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleQuietTimeTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestHookTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestLimitsTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationADMMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationAPNSMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationBaiduMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationDefaultMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationEmailMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationGCMMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationSMSMessageTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsAttributesTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsEventTypeTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsMetricsTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestScheduleQuietTimeTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestScheduleTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationEmailTemplateTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationPushTemplateTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationSMSTemplateTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationVoiceTemplateTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationTypeDef",
    "ClientUpdateCampaignWriteCampaignRequestTypeDef",
    "ClientUpdateEmailChannelEmailChannelRequestTypeDef",
    "ClientUpdateEmailChannelResponseEmailChannelResponseTypeDef",
    "ClientUpdateEmailChannelResponseTypeDef",
    "ClientUpdateEmailTemplateEmailTemplateRequestTypeDef",
    "ClientUpdateEmailTemplateResponseMessageBodyTypeDef",
    "ClientUpdateEmailTemplateResponseTypeDef",
    "ClientUpdateEndpointEndpointRequestDemographicTypeDef",
    "ClientUpdateEndpointEndpointRequestLocationTypeDef",
    "ClientUpdateEndpointEndpointRequestUserTypeDef",
    "ClientUpdateEndpointEndpointRequestTypeDef",
    "ClientUpdateEndpointResponseMessageBodyTypeDef",
    "ClientUpdateEndpointResponseTypeDef",
    "ClientUpdateEndpointsBatchEndpointBatchRequestItemDemographicTypeDef",
    "ClientUpdateEndpointsBatchEndpointBatchRequestItemLocationTypeDef",
    "ClientUpdateEndpointsBatchEndpointBatchRequestItemUserTypeDef",
    "ClientUpdateEndpointsBatchEndpointBatchRequestItemTypeDef",
    "ClientUpdateEndpointsBatchEndpointBatchRequestTypeDef",
    "ClientUpdateEndpointsBatchResponseMessageBodyTypeDef",
    "ClientUpdateEndpointsBatchResponseTypeDef",
    "ClientUpdateGcmChannelGCMChannelRequestTypeDef",
    "ClientUpdateGcmChannelResponseGCMChannelResponseTypeDef",
    "ClientUpdateGcmChannelResponseTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesEMAILTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesHoldoutTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesWaitTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseActivitiesTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseLimitsTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseQuietTimeTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseScheduleTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseStartConditionTypeDef",
    "ClientUpdateJourneyResponseJourneyResponseTypeDef",
    "ClientUpdateJourneyResponseTypeDef",
    "ClientUpdateJourneyStateJourneyStateRequestTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesEMAILTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesHoldoutTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesRandomSplitTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesWaitTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseLimitsTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseQuietTimeTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseScheduleTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseStartConditionTypeDef",
    "ClientUpdateJourneyStateResponseJourneyResponseTypeDef",
    "ClientUpdateJourneyStateResponseTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesEMAILMessageConfigTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesEMAILTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesHoldoutTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesRandomSplitBranchesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesRandomSplitTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesWaitWaitTimeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesWaitTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestActivitiesTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestLimitsTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestQuietTimeTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestScheduleTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestStartConditionSegmentStartConditionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestStartConditionTypeDef",
    "ClientUpdateJourneyWriteJourneyRequestTypeDef",
    "ClientUpdatePushTemplatePushNotificationTemplateRequestADMTypeDef",
    "ClientUpdatePushTemplatePushNotificationTemplateRequestAPNSTypeDef",
    "ClientUpdatePushTemplatePushNotificationTemplateRequestBaiduTypeDef",
    "ClientUpdatePushTemplatePushNotificationTemplateRequestDefaultTypeDef",
    "ClientUpdatePushTemplatePushNotificationTemplateRequestGCMTypeDef",
    "ClientUpdatePushTemplatePushNotificationTemplateRequestTypeDef",
    "ClientUpdatePushTemplateResponseMessageBodyTypeDef",
    "ClientUpdatePushTemplateResponseTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsAttributesTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsBehaviorTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsLocationTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsMetricsTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseDimensionsTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseImportDefinitionTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsTypeDef",
    "ClientUpdateSegmentResponseSegmentResponseTypeDef",
    "ClientUpdateSegmentResponseTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsAttributesTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsBehaviorTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicChannelTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicMakeTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicModelTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicPlatformTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsLocationCountryTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsLocationGPSPointTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsLocationTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsMetricsTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsUserAttributesTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestDimensionsTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsAttributesTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsMetricsTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsSourceSegmentsTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsTypeDef",
    "ClientUpdateSegmentWriteSegmentRequestTypeDef",
    "ClientUpdateSmsChannelResponseSMSChannelResponseTypeDef",
    "ClientUpdateSmsChannelResponseTypeDef",
    "ClientUpdateSmsChannelSMSChannelRequestTypeDef",
    "ClientUpdateSmsTemplateResponseMessageBodyTypeDef",
    "ClientUpdateSmsTemplateResponseTypeDef",
    "ClientUpdateSmsTemplateSMSTemplateRequestTypeDef",
    "ClientUpdateTemplateActiveVersionResponseMessageBodyTypeDef",
    "ClientUpdateTemplateActiveVersionResponseTypeDef",
    "ClientUpdateTemplateActiveVersionTemplateActiveVersionRequestTypeDef",
    "ClientUpdateVoiceChannelResponseVoiceChannelResponseTypeDef",
    "ClientUpdateVoiceChannelResponseTypeDef",
    "ClientUpdateVoiceChannelVoiceChannelRequestTypeDef",
    "ClientUpdateVoiceTemplateResponseMessageBodyTypeDef",
    "ClientUpdateVoiceTemplateResponseTypeDef",
    "ClientUpdateVoiceTemplateVoiceTemplateRequestTypeDef",
)

_RequiredClientCreateAppCreateApplicationRequestTypeDef = TypedDict(
    "_RequiredClientCreateAppCreateApplicationRequestTypeDef", {"Name": str}
)
_OptionalClientCreateAppCreateApplicationRequestTypeDef = TypedDict(
    "_OptionalClientCreateAppCreateApplicationRequestTypeDef", {"tags": Dict[str, str]}, total=False
)


class ClientCreateAppCreateApplicationRequestTypeDef(
    _RequiredClientCreateAppCreateApplicationRequestTypeDef,
    _OptionalClientCreateAppCreateApplicationRequestTypeDef,
):
    pass


ClientCreateAppResponseApplicationResponseTypeDef = TypedDict(
    "ClientCreateAppResponseApplicationResponseTypeDef",
    {"Arn": str, "Id": str, "Name": str, "tags": Dict[str, str]},
    total=False,
)

ClientCreateAppResponseTypeDef = TypedDict(
    "ClientCreateAppResponseTypeDef",
    {"ApplicationResponse": ClientCreateAppResponseApplicationResponseTypeDef},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef",
    {
        "Id": str,
        "MessageConfiguration": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef,
        "Schedule": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef,
        "SizePercent": int,
        "State": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef,
        "TemplateConfiguration": ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseDefaultStateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseDefaultStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseHookTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseLimitsTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseMessageConfigurationTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientCreateCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientCreateCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientCreateCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientCreateCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientCreateCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientCreateCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientCreateCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseScheduleEventFilterTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientCreateCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseScheduleQuietTimeTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseScheduleTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientCreateCampaignResponseCampaignResponseScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientCreateCampaignResponseCampaignResponseScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseStateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignResponseCampaignResponseTemplateConfigurationTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientCreateCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientCreateCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientCreateCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientCreateCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientCreateCampaignResponseCampaignResponseTypeDef = TypedDict(
    "ClientCreateCampaignResponseCampaignResponseTypeDef",
    {
        "AdditionalTreatments": List[
            ClientCreateCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef
        ],
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "DefaultState": ClientCreateCampaignResponseCampaignResponseDefaultStateTypeDef,
        "Description": str,
        "HoldoutPercent": int,
        "Hook": ClientCreateCampaignResponseCampaignResponseHookTypeDef,
        "Id": str,
        "IsPaused": bool,
        "LastModifiedDate": str,
        "Limits": ClientCreateCampaignResponseCampaignResponseLimitsTypeDef,
        "MessageConfiguration": ClientCreateCampaignResponseCampaignResponseMessageConfigurationTypeDef,
        "Name": str,
        "Schedule": ClientCreateCampaignResponseCampaignResponseScheduleTypeDef,
        "SegmentId": str,
        "SegmentVersion": int,
        "State": ClientCreateCampaignResponseCampaignResponseStateTypeDef,
        "tags": Dict[str, str],
        "TemplateConfiguration": ClientCreateCampaignResponseCampaignResponseTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
        "Version": int,
    },
    total=False,
)

ClientCreateCampaignResponseTypeDef = TypedDict(
    "ClientCreateCampaignResponseTypeDef",
    {"CampaignResponse": ClientCreateCampaignResponseCampaignResponseTypeDef},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleQuietTimeTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTypeDef",
    {
        "MessageConfiguration": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationTypeDef,
        "Schedule": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleTypeDef,
        "SizePercent": int,
        "TemplateConfiguration": ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestHookTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestLimitsTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestMessageConfigurationTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientCreateCampaignWriteCampaignRequestMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientCreateCampaignWriteCampaignRequestMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientCreateCampaignWriteCampaignRequestMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientCreateCampaignWriteCampaignRequestMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientCreateCampaignWriteCampaignRequestMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientCreateCampaignWriteCampaignRequestMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientCreateCampaignWriteCampaignRequestMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str, ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsMetricsTypeDef
        ],
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestScheduleEventFilterTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientCreateCampaignWriteCampaignRequestScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestScheduleQuietTimeTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestScheduleTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientCreateCampaignWriteCampaignRequestScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientCreateCampaignWriteCampaignRequestScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientCreateCampaignWriteCampaignRequestTemplateConfigurationTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientCreateCampaignWriteCampaignRequestTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientCreateCampaignWriteCampaignRequestTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientCreateCampaignWriteCampaignRequestTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientCreateCampaignWriteCampaignRequestTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientCreateCampaignWriteCampaignRequestTypeDef = TypedDict(
    "ClientCreateCampaignWriteCampaignRequestTypeDef",
    {
        "AdditionalTreatments": List[
            ClientCreateCampaignWriteCampaignRequestAdditionalTreatmentsTypeDef
        ],
        "Description": str,
        "HoldoutPercent": int,
        "Hook": ClientCreateCampaignWriteCampaignRequestHookTypeDef,
        "IsPaused": bool,
        "Limits": ClientCreateCampaignWriteCampaignRequestLimitsTypeDef,
        "MessageConfiguration": ClientCreateCampaignWriteCampaignRequestMessageConfigurationTypeDef,
        "Name": str,
        "Schedule": ClientCreateCampaignWriteCampaignRequestScheduleTypeDef,
        "SegmentId": str,
        "SegmentVersion": int,
        "tags": Dict[str, str],
        "TemplateConfiguration": ClientCreateCampaignWriteCampaignRequestTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientCreateEmailTemplateEmailTemplateRequestTypeDef = TypedDict(
    "ClientCreateEmailTemplateEmailTemplateRequestTypeDef",
    {
        "DefaultSubstitutions": str,
        "HtmlPart": str,
        "Subject": str,
        "tags": Dict[str, str],
        "TemplateDescription": str,
        "TextPart": str,
    },
    total=False,
)

ClientCreateEmailTemplateResponseCreateTemplateMessageBodyTypeDef = TypedDict(
    "ClientCreateEmailTemplateResponseCreateTemplateMessageBodyTypeDef",
    {"Arn": str, "Message": str, "RequestID": str},
    total=False,
)

ClientCreateEmailTemplateResponseTypeDef = TypedDict(
    "ClientCreateEmailTemplateResponseTypeDef",
    {
        "CreateTemplateMessageBody": ClientCreateEmailTemplateResponseCreateTemplateMessageBodyTypeDef
    },
    total=False,
)

_RequiredClientCreateExportJobExportJobRequestTypeDef = TypedDict(
    "_RequiredClientCreateExportJobExportJobRequestTypeDef", {"RoleArn": str}
)
_OptionalClientCreateExportJobExportJobRequestTypeDef = TypedDict(
    "_OptionalClientCreateExportJobExportJobRequestTypeDef",
    {"S3UrlPrefix": str, "SegmentId": str, "SegmentVersion": int},
    total=False,
)


class ClientCreateExportJobExportJobRequestTypeDef(
    _RequiredClientCreateExportJobExportJobRequestTypeDef,
    _OptionalClientCreateExportJobExportJobRequestTypeDef,
):
    pass


ClientCreateExportJobResponseExportJobResponseDefinitionTypeDef = TypedDict(
    "ClientCreateExportJobResponseExportJobResponseDefinitionTypeDef",
    {"RoleArn": str, "S3UrlPrefix": str, "SegmentId": str, "SegmentVersion": int},
    total=False,
)

ClientCreateExportJobResponseExportJobResponseTypeDef = TypedDict(
    "ClientCreateExportJobResponseExportJobResponseTypeDef",
    {
        "ApplicationId": str,
        "CompletedPieces": int,
        "CompletionDate": str,
        "CreationDate": str,
        "Definition": ClientCreateExportJobResponseExportJobResponseDefinitionTypeDef,
        "FailedPieces": int,
        "Failures": List[str],
        "Id": str,
        "JobStatus": Literal[
            "CREATED",
            "PREPARING_FOR_INITIALIZATION",
            "INITIALIZING",
            "PROCESSING",
            "PENDING_JOB",
            "COMPLETING",
            "COMPLETED",
            "FAILING",
            "FAILED",
        ],
        "TotalFailures": int,
        "TotalPieces": int,
        "TotalProcessed": int,
        "Type": str,
    },
    total=False,
)

ClientCreateExportJobResponseTypeDef = TypedDict(
    "ClientCreateExportJobResponseTypeDef",
    {"ExportJobResponse": ClientCreateExportJobResponseExportJobResponseTypeDef},
    total=False,
)

ClientCreateImportJobImportJobRequestTypeDef = TypedDict(
    "ClientCreateImportJobImportJobRequestTypeDef",
    {
        "DefineSegment": bool,
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RegisterEndpoints": bool,
        "RoleArn": str,
        "S3Url": str,
        "SegmentId": str,
        "SegmentName": str,
    },
    total=False,
)

ClientCreateImportJobResponseImportJobResponseDefinitionTypeDef = TypedDict(
    "ClientCreateImportJobResponseImportJobResponseDefinitionTypeDef",
    {
        "DefineSegment": bool,
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RegisterEndpoints": bool,
        "RoleArn": str,
        "S3Url": str,
        "SegmentId": str,
        "SegmentName": str,
    },
    total=False,
)

ClientCreateImportJobResponseImportJobResponseTypeDef = TypedDict(
    "ClientCreateImportJobResponseImportJobResponseTypeDef",
    {
        "ApplicationId": str,
        "CompletedPieces": int,
        "CompletionDate": str,
        "CreationDate": str,
        "Definition": ClientCreateImportJobResponseImportJobResponseDefinitionTypeDef,
        "FailedPieces": int,
        "Failures": List[str],
        "Id": str,
        "JobStatus": Literal[
            "CREATED",
            "PREPARING_FOR_INITIALIZATION",
            "INITIALIZING",
            "PROCESSING",
            "PENDING_JOB",
            "COMPLETING",
            "COMPLETED",
            "FAILING",
            "FAILED",
        ],
        "TotalFailures": int,
        "TotalPieces": int,
        "TotalProcessed": int,
        "Type": str,
    },
    total=False,
)

ClientCreateImportJobResponseTypeDef = TypedDict(
    "ClientCreateImportJobResponseTypeDef",
    {"ImportJobResponse": ClientCreateImportJobResponseImportJobResponseTypeDef},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    {
        "Dimensions": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef,
        "Location": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    {
        "EventCondition": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef,
        "SegmentCondition": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef,
        "SegmentDimensions": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    {
        "Conditions": List[
            ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef
        ],
        "Operator": Literal["ALL", "ANY"],
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    {
        "Condition": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef,
        "EvaluationWaitTime": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef,
        "FalseActivity": str,
        "TrueActivity": str,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    {"FromAddress": str},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesEMAILTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesEMAILTypeDef",
    {
        "MessageConfig": ClientCreateJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef,
        "NextActivity": str,
        "TemplateName": str,
        "TemplateVersion": str,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesHoldoutTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesHoldoutTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    {
        "Dimensions": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef,
        "Location": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    {
        "EventCondition": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef,
        "SegmentCondition": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef,
        "SegmentDimensions": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    {
        "Condition": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef,
        "NextActivity": str,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef",
    {
        "Branches": List[
            ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef
        ],
        "DefaultActivity": str,
        "EvaluationWaitTime": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef",
    {
        "Branches": List[
            ClientCreateJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef
        ]
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesWaitTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesWaitTypeDef",
    {
        "NextActivity": str,
        "WaitTime": ClientCreateJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseActivitiesTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseActivitiesTypeDef",
    {
        "ConditionalSplit": ClientCreateJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef,
        "Description": str,
        "EMAIL": ClientCreateJourneyResponseJourneyResponseActivitiesEMAILTypeDef,
        "Holdout": ClientCreateJourneyResponseJourneyResponseActivitiesHoldoutTypeDef,
        "MultiCondition": ClientCreateJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef,
        "RandomSplit": ClientCreateJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef,
        "Wait": ClientCreateJourneyResponseJourneyResponseActivitiesWaitTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseLimitsTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseLimitsTypeDef",
    {"DailyCap": int, "EndpointReentryCap": int, "MessagesPerSecond": int},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseQuietTimeTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseScheduleTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseScheduleTypeDef",
    {"EndTime": datetime, "StartTime": datetime, "Timezone": str},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientCreateJourneyResponseJourneyResponseStartConditionTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseStartConditionTypeDef",
    {
        "Description": str,
        "SegmentStartCondition": ClientCreateJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef,
    },
    total=False,
)

ClientCreateJourneyResponseJourneyResponseTypeDef = TypedDict(
    "ClientCreateJourneyResponseJourneyResponseTypeDef",
    {
        "Activities": Dict[str, ClientCreateJourneyResponseJourneyResponseActivitiesTypeDef],
        "ApplicationId": str,
        "CreationDate": str,
        "Id": str,
        "LastModifiedDate": str,
        "Limits": ClientCreateJourneyResponseJourneyResponseLimitsTypeDef,
        "LocalTime": bool,
        "Name": str,
        "QuietTime": ClientCreateJourneyResponseJourneyResponseQuietTimeTypeDef,
        "RefreshFrequency": str,
        "Schedule": ClientCreateJourneyResponseJourneyResponseScheduleTypeDef,
        "StartActivity": str,
        "StartCondition": ClientCreateJourneyResponseJourneyResponseStartConditionTypeDef,
        "State": Literal["DRAFT", "ACTIVE", "COMPLETED", "CANCELLED", "CLOSED"],
        "tags": Dict[str, str],
    },
    total=False,
)

ClientCreateJourneyResponseTypeDef = TypedDict(
    "ClientCreateJourneyResponseTypeDef",
    {"JourneyResponse": ClientCreateJourneyResponseJourneyResponseTypeDef},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    {
        "Dimensions": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef,
        "Location": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsTypeDef",
    {
        "EventCondition": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionTypeDef,
        "SegmentCondition": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef,
        "SegmentDimensions": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionTypeDef",
    {
        "Conditions": List[
            ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsTypeDef
        ],
        "Operator": Literal["ALL", "ANY"],
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitEvaluationWaitTimeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitTypeDef",
    {
        "Condition": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionTypeDef,
        "EvaluationWaitTime": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitEvaluationWaitTimeTypeDef,
        "FalseActivity": str,
        "TrueActivity": str,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesEMAILMessageConfigTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesEMAILMessageConfigTypeDef",
    {"FromAddress": str},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesEMAILTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesEMAILTypeDef",
    {
        "MessageConfig": ClientCreateJourneyWriteJourneyRequestActivitiesEMAILMessageConfigTypeDef,
        "NextActivity": str,
        "TemplateName": str,
        "TemplateVersion": str,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesHoldoutTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesHoldoutTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    {
        "Dimensions": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef,
        "Location": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionTypeDef",
    {
        "EventCondition": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionTypeDef,
        "SegmentCondition": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef,
        "SegmentDimensions": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesTypeDef",
    {
        "Condition": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionTypeDef,
        "NextActivity": str,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionEvaluationWaitTimeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionTypeDef",
    {
        "Branches": List[
            ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesTypeDef
        ],
        "DefaultActivity": str,
        "EvaluationWaitTime": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionEvaluationWaitTimeTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesRandomSplitBranchesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesRandomSplitBranchesTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesRandomSplitTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesRandomSplitTypeDef",
    {"Branches": List[ClientCreateJourneyWriteJourneyRequestActivitiesRandomSplitBranchesTypeDef]},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesWaitWaitTimeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesWaitWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesWaitTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesWaitTypeDef",
    {
        "NextActivity": str,
        "WaitTime": ClientCreateJourneyWriteJourneyRequestActivitiesWaitWaitTimeTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestActivitiesTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestActivitiesTypeDef",
    {
        "ConditionalSplit": ClientCreateJourneyWriteJourneyRequestActivitiesConditionalSplitTypeDef,
        "Description": str,
        "EMAIL": ClientCreateJourneyWriteJourneyRequestActivitiesEMAILTypeDef,
        "Holdout": ClientCreateJourneyWriteJourneyRequestActivitiesHoldoutTypeDef,
        "MultiCondition": ClientCreateJourneyWriteJourneyRequestActivitiesMultiConditionTypeDef,
        "RandomSplit": ClientCreateJourneyWriteJourneyRequestActivitiesRandomSplitTypeDef,
        "Wait": ClientCreateJourneyWriteJourneyRequestActivitiesWaitTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestLimitsTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestLimitsTypeDef",
    {"DailyCap": int, "EndpointReentryCap": int, "MessagesPerSecond": int},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestQuietTimeTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestScheduleTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestScheduleTypeDef",
    {"EndTime": datetime, "StartTime": datetime, "Timezone": str},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestStartConditionSegmentStartConditionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestStartConditionSegmentStartConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientCreateJourneyWriteJourneyRequestStartConditionTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestStartConditionTypeDef",
    {
        "Description": str,
        "SegmentStartCondition": ClientCreateJourneyWriteJourneyRequestStartConditionSegmentStartConditionTypeDef,
    },
    total=False,
)

ClientCreateJourneyWriteJourneyRequestTypeDef = TypedDict(
    "ClientCreateJourneyWriteJourneyRequestTypeDef",
    {
        "Activities": Dict[str, ClientCreateJourneyWriteJourneyRequestActivitiesTypeDef],
        "CreationDate": str,
        "LastModifiedDate": str,
        "Limits": ClientCreateJourneyWriteJourneyRequestLimitsTypeDef,
        "LocalTime": bool,
        "Name": str,
        "QuietTime": ClientCreateJourneyWriteJourneyRequestQuietTimeTypeDef,
        "RefreshFrequency": str,
        "Schedule": ClientCreateJourneyWriteJourneyRequestScheduleTypeDef,
        "StartActivity": str,
        "StartCondition": ClientCreateJourneyWriteJourneyRequestStartConditionTypeDef,
        "State": Literal["DRAFT", "ACTIVE", "COMPLETED", "CANCELLED", "CLOSED"],
    },
    total=False,
)

ClientCreatePushTemplatePushNotificationTemplateRequestADMTypeDef = TypedDict(
    "ClientCreatePushTemplatePushNotificationTemplateRequestADMTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreatePushTemplatePushNotificationTemplateRequestAPNSTypeDef = TypedDict(
    "ClientCreatePushTemplatePushNotificationTemplateRequestAPNSTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "MediaUrl": str,
        "RawContent": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreatePushTemplatePushNotificationTemplateRequestBaiduTypeDef = TypedDict(
    "ClientCreatePushTemplatePushNotificationTemplateRequestBaiduTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreatePushTemplatePushNotificationTemplateRequestDefaultTypeDef = TypedDict(
    "ClientCreatePushTemplatePushNotificationTemplateRequestDefaultTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreatePushTemplatePushNotificationTemplateRequestGCMTypeDef = TypedDict(
    "ClientCreatePushTemplatePushNotificationTemplateRequestGCMTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientCreatePushTemplatePushNotificationTemplateRequestTypeDef = TypedDict(
    "ClientCreatePushTemplatePushNotificationTemplateRequestTypeDef",
    {
        "ADM": ClientCreatePushTemplatePushNotificationTemplateRequestADMTypeDef,
        "APNS": ClientCreatePushTemplatePushNotificationTemplateRequestAPNSTypeDef,
        "Baidu": ClientCreatePushTemplatePushNotificationTemplateRequestBaiduTypeDef,
        "Default": ClientCreatePushTemplatePushNotificationTemplateRequestDefaultTypeDef,
        "DefaultSubstitutions": str,
        "GCM": ClientCreatePushTemplatePushNotificationTemplateRequestGCMTypeDef,
        "tags": Dict[str, str],
        "TemplateDescription": str,
    },
    total=False,
)

ClientCreatePushTemplateResponseCreateTemplateMessageBodyTypeDef = TypedDict(
    "ClientCreatePushTemplateResponseCreateTemplateMessageBodyTypeDef",
    {"Arn": str, "Message": str, "RequestID": str},
    total=False,
)

ClientCreatePushTemplateResponseTypeDef = TypedDict(
    "ClientCreatePushTemplateResponseTypeDef",
    {"CreateTemplateMessageBody": ClientCreatePushTemplateResponseCreateTemplateMessageBodyTypeDef},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsBehaviorTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsBehaviorTypeDef",
    {"Recency": ClientCreateSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsDemographicTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientCreateSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientCreateSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientCreateSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientCreateSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef,
        "Model": ClientCreateSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef,
        "Platform": ClientCreateSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientCreateSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsLocationTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsLocationTypeDef",
    {
        "Country": ClientCreateSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientCreateSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseDimensionsTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseDimensionsTypeDef",
    {
        "Attributes": Dict[
            str, ClientCreateSegmentResponseSegmentResponseDimensionsAttributesTypeDef
        ],
        "Behavior": ClientCreateSegmentResponseSegmentResponseDimensionsBehaviorTypeDef,
        "Demographic": ClientCreateSegmentResponseSegmentResponseDimensionsDemographicTypeDef,
        "Location": ClientCreateSegmentResponseSegmentResponseDimensionsLocationTypeDef,
        "Metrics": Dict[str, ClientCreateSegmentResponseSegmentResponseDimensionsMetricsTypeDef],
        "UserAttributes": Dict[
            str, ClientCreateSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef
        ],
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseImportDefinitionTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseImportDefinitionTypeDef",
    {
        "ChannelCounts": Dict[str, int],
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RoleArn": str,
        "S3Url": str,
        "Size": int,
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    {
        "Recency": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef,
        "Model": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef,
        "Platform": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    {
        "Country": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef,
        "Demographic": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef,
        "Location": ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    {"Id": str, "Version": int},
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    {
        "Dimensions": List[
            ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef
        ],
        "SourceSegments": List[
            ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef
        ],
        "SourceType": Literal["ALL", "ANY", "NONE"],
        "Type": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseSegmentGroupsTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseSegmentGroupsTypeDef",
    {
        "Groups": List[ClientCreateSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef],
        "Include": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientCreateSegmentResponseSegmentResponseTypeDef = TypedDict(
    "ClientCreateSegmentResponseSegmentResponseTypeDef",
    {
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "Dimensions": ClientCreateSegmentResponseSegmentResponseDimensionsTypeDef,
        "Id": str,
        "ImportDefinition": ClientCreateSegmentResponseSegmentResponseImportDefinitionTypeDef,
        "LastModifiedDate": str,
        "Name": str,
        "SegmentGroups": ClientCreateSegmentResponseSegmentResponseSegmentGroupsTypeDef,
        "SegmentType": Literal["DIMENSIONAL", "IMPORT"],
        "tags": Dict[str, str],
        "Version": int,
    },
    total=False,
)

ClientCreateSegmentResponseTypeDef = TypedDict(
    "ClientCreateSegmentResponseTypeDef",
    {"SegmentResponse": ClientCreateSegmentResponseSegmentResponseTypeDef},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsBehaviorTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsBehaviorTypeDef",
    {"Recency": ClientCreateSegmentWriteSegmentRequestDimensionsBehaviorRecencyTypeDef},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsDemographicModelTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsDemographicTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientCreateSegmentWriteSegmentRequestDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientCreateSegmentWriteSegmentRequestDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientCreateSegmentWriteSegmentRequestDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientCreateSegmentWriteSegmentRequestDimensionsDemographicMakeTypeDef,
        "Model": ClientCreateSegmentWriteSegmentRequestDimensionsDemographicModelTypeDef,
        "Platform": ClientCreateSegmentWriteSegmentRequestDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsLocationCountryTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientCreateSegmentWriteSegmentRequestDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsLocationTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsLocationTypeDef",
    {
        "Country": ClientCreateSegmentWriteSegmentRequestDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientCreateSegmentWriteSegmentRequestDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsUserAttributesTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestDimensionsTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestDimensionsTypeDef",
    {
        "Attributes": Dict[str, ClientCreateSegmentWriteSegmentRequestDimensionsAttributesTypeDef],
        "Behavior": ClientCreateSegmentWriteSegmentRequestDimensionsBehaviorTypeDef,
        "Demographic": ClientCreateSegmentWriteSegmentRequestDimensionsDemographicTypeDef,
        "Location": ClientCreateSegmentWriteSegmentRequestDimensionsLocationTypeDef,
        "Metrics": Dict[str, ClientCreateSegmentWriteSegmentRequestDimensionsMetricsTypeDef],
        "UserAttributes": Dict[
            str, ClientCreateSegmentWriteSegmentRequestDimensionsUserAttributesTypeDef
        ],
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsAttributesTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    {
        "Recency": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicModelTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicMakeTypeDef,
        "Model": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicModelTypeDef,
        "Platform": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationCountryTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationTypeDef",
    {
        "Country": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsMetricsTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsUserAttributesTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorTypeDef,
        "Demographic": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicTypeDef,
        "Location": ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationTypeDef,
        "Metrics": Dict[
            str, ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsMetricsTypeDef
        ],
        "UserAttributes": Dict[
            str,
            ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsSourceSegmentsTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsSourceSegmentsTypeDef",
    {"Id": str, "Version": int},
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsTypeDef",
    {
        "Dimensions": List[
            ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsTypeDef
        ],
        "SourceSegments": List[
            ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsSourceSegmentsTypeDef
        ],
        "SourceType": Literal["ALL", "ANY", "NONE"],
        "Type": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestSegmentGroupsTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestSegmentGroupsTypeDef",
    {
        "Groups": List[ClientCreateSegmentWriteSegmentRequestSegmentGroupsGroupsTypeDef],
        "Include": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientCreateSegmentWriteSegmentRequestTypeDef = TypedDict(
    "ClientCreateSegmentWriteSegmentRequestTypeDef",
    {
        "Dimensions": ClientCreateSegmentWriteSegmentRequestDimensionsTypeDef,
        "Name": str,
        "SegmentGroups": ClientCreateSegmentWriteSegmentRequestSegmentGroupsTypeDef,
        "tags": Dict[str, str],
    },
    total=False,
)

ClientCreateSmsTemplateResponseCreateTemplateMessageBodyTypeDef = TypedDict(
    "ClientCreateSmsTemplateResponseCreateTemplateMessageBodyTypeDef",
    {"Arn": str, "Message": str, "RequestID": str},
    total=False,
)

ClientCreateSmsTemplateResponseTypeDef = TypedDict(
    "ClientCreateSmsTemplateResponseTypeDef",
    {"CreateTemplateMessageBody": ClientCreateSmsTemplateResponseCreateTemplateMessageBodyTypeDef},
    total=False,
)

ClientCreateSmsTemplateSMSTemplateRequestTypeDef = TypedDict(
    "ClientCreateSmsTemplateSMSTemplateRequestTypeDef",
    {"Body": str, "DefaultSubstitutions": str, "tags": Dict[str, str], "TemplateDescription": str},
    total=False,
)

ClientCreateVoiceTemplateResponseCreateTemplateMessageBodyTypeDef = TypedDict(
    "ClientCreateVoiceTemplateResponseCreateTemplateMessageBodyTypeDef",
    {"Arn": str, "Message": str, "RequestID": str},
    total=False,
)

ClientCreateVoiceTemplateResponseTypeDef = TypedDict(
    "ClientCreateVoiceTemplateResponseTypeDef",
    {
        "CreateTemplateMessageBody": ClientCreateVoiceTemplateResponseCreateTemplateMessageBodyTypeDef
    },
    total=False,
)

ClientCreateVoiceTemplateVoiceTemplateRequestTypeDef = TypedDict(
    "ClientCreateVoiceTemplateVoiceTemplateRequestTypeDef",
    {
        "Body": str,
        "DefaultSubstitutions": str,
        "LanguageCode": str,
        "tags": Dict[str, str],
        "TemplateDescription": str,
        "VoiceId": str,
    },
    total=False,
)

ClientDeleteAdmChannelResponseADMChannelResponseTypeDef = TypedDict(
    "ClientDeleteAdmChannelResponseADMChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteAdmChannelResponseTypeDef = TypedDict(
    "ClientDeleteAdmChannelResponseTypeDef",
    {"ADMChannelResponse": ClientDeleteAdmChannelResponseADMChannelResponseTypeDef},
    total=False,
)

ClientDeleteApnsChannelResponseAPNSChannelResponseTypeDef = TypedDict(
    "ClientDeleteApnsChannelResponseAPNSChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteApnsChannelResponseTypeDef = TypedDict(
    "ClientDeleteApnsChannelResponseTypeDef",
    {"APNSChannelResponse": ClientDeleteApnsChannelResponseAPNSChannelResponseTypeDef},
    total=False,
)

ClientDeleteApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef = TypedDict(
    "ClientDeleteApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteApnsSandboxChannelResponseTypeDef = TypedDict(
    "ClientDeleteApnsSandboxChannelResponseTypeDef",
    {
        "APNSSandboxChannelResponse": ClientDeleteApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef
    },
    total=False,
)

ClientDeleteApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef = TypedDict(
    "ClientDeleteApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteApnsVoipChannelResponseTypeDef = TypedDict(
    "ClientDeleteApnsVoipChannelResponseTypeDef",
    {"APNSVoipChannelResponse": ClientDeleteApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef},
    total=False,
)

ClientDeleteApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef = TypedDict(
    "ClientDeleteApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteApnsVoipSandboxChannelResponseTypeDef = TypedDict(
    "ClientDeleteApnsVoipSandboxChannelResponseTypeDef",
    {
        "APNSVoipSandboxChannelResponse": ClientDeleteApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef
    },
    total=False,
)

ClientDeleteAppResponseApplicationResponseTypeDef = TypedDict(
    "ClientDeleteAppResponseApplicationResponseTypeDef",
    {"Arn": str, "Id": str, "Name": str, "tags": Dict[str, str]},
    total=False,
)

ClientDeleteAppResponseTypeDef = TypedDict(
    "ClientDeleteAppResponseTypeDef",
    {"ApplicationResponse": ClientDeleteAppResponseApplicationResponseTypeDef},
    total=False,
)

ClientDeleteBaiduChannelResponseBaiduChannelResponseTypeDef = TypedDict(
    "ClientDeleteBaiduChannelResponseBaiduChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Credential": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteBaiduChannelResponseTypeDef = TypedDict(
    "ClientDeleteBaiduChannelResponseTypeDef",
    {"BaiduChannelResponse": ClientDeleteBaiduChannelResponseBaiduChannelResponseTypeDef},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef",
    {
        "Id": str,
        "MessageConfiguration": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef,
        "Schedule": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef,
        "SizePercent": int,
        "State": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef,
        "TemplateConfiguration": ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseDefaultStateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseDefaultStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseHookTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseLimitsTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseMessageConfigurationTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientDeleteCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientDeleteCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientDeleteCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientDeleteCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientDeleteCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientDeleteCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientDeleteCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseScheduleQuietTimeTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseScheduleTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientDeleteCampaignResponseCampaignResponseScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientDeleteCampaignResponseCampaignResponseScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseStateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientDeleteCampaignResponseCampaignResponseTypeDef = TypedDict(
    "ClientDeleteCampaignResponseCampaignResponseTypeDef",
    {
        "AdditionalTreatments": List[
            ClientDeleteCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef
        ],
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "DefaultState": ClientDeleteCampaignResponseCampaignResponseDefaultStateTypeDef,
        "Description": str,
        "HoldoutPercent": int,
        "Hook": ClientDeleteCampaignResponseCampaignResponseHookTypeDef,
        "Id": str,
        "IsPaused": bool,
        "LastModifiedDate": str,
        "Limits": ClientDeleteCampaignResponseCampaignResponseLimitsTypeDef,
        "MessageConfiguration": ClientDeleteCampaignResponseCampaignResponseMessageConfigurationTypeDef,
        "Name": str,
        "Schedule": ClientDeleteCampaignResponseCampaignResponseScheduleTypeDef,
        "SegmentId": str,
        "SegmentVersion": int,
        "State": ClientDeleteCampaignResponseCampaignResponseStateTypeDef,
        "tags": Dict[str, str],
        "TemplateConfiguration": ClientDeleteCampaignResponseCampaignResponseTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteCampaignResponseTypeDef = TypedDict(
    "ClientDeleteCampaignResponseTypeDef",
    {"CampaignResponse": ClientDeleteCampaignResponseCampaignResponseTypeDef},
    total=False,
)

ClientDeleteEmailChannelResponseEmailChannelResponseTypeDef = TypedDict(
    "ClientDeleteEmailChannelResponseEmailChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "ConfigurationSet": str,
        "CreationDate": str,
        "Enabled": bool,
        "FromAddress": str,
        "HasCredential": bool,
        "Id": str,
        "Identity": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "MessagesPerSecond": int,
        "Platform": str,
        "RoleArn": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteEmailChannelResponseTypeDef = TypedDict(
    "ClientDeleteEmailChannelResponseTypeDef",
    {"EmailChannelResponse": ClientDeleteEmailChannelResponseEmailChannelResponseTypeDef},
    total=False,
)

ClientDeleteEmailTemplateResponseMessageBodyTypeDef = TypedDict(
    "ClientDeleteEmailTemplateResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientDeleteEmailTemplateResponseTypeDef = TypedDict(
    "ClientDeleteEmailTemplateResponseTypeDef",
    {"MessageBody": ClientDeleteEmailTemplateResponseMessageBodyTypeDef},
    total=False,
)

ClientDeleteEndpointResponseEndpointResponseDemographicTypeDef = TypedDict(
    "ClientDeleteEndpointResponseEndpointResponseDemographicTypeDef",
    {
        "AppVersion": str,
        "Locale": str,
        "Make": str,
        "Model": str,
        "ModelVersion": str,
        "Platform": str,
        "PlatformVersion": str,
        "Timezone": str,
    },
    total=False,
)

ClientDeleteEndpointResponseEndpointResponseLocationTypeDef = TypedDict(
    "ClientDeleteEndpointResponseEndpointResponseLocationTypeDef",
    {
        "City": str,
        "Country": str,
        "Latitude": float,
        "Longitude": float,
        "PostalCode": str,
        "Region": str,
    },
    total=False,
)

ClientDeleteEndpointResponseEndpointResponseUserTypeDef = TypedDict(
    "ClientDeleteEndpointResponseEndpointResponseUserTypeDef",
    {"UserAttributes": Dict[str, List[str]], "UserId": str},
    total=False,
)

ClientDeleteEndpointResponseEndpointResponseTypeDef = TypedDict(
    "ClientDeleteEndpointResponseEndpointResponseTypeDef",
    {
        "Address": str,
        "ApplicationId": str,
        "Attributes": Dict[str, List[str]],
        "ChannelType": Literal[
            "GCM",
            "APNS",
            "APNS_SANDBOX",
            "APNS_VOIP",
            "APNS_VOIP_SANDBOX",
            "ADM",
            "SMS",
            "VOICE",
            "EMAIL",
            "BAIDU",
            "CUSTOM",
        ],
        "CohortId": str,
        "CreationDate": str,
        "Demographic": ClientDeleteEndpointResponseEndpointResponseDemographicTypeDef,
        "EffectiveDate": str,
        "EndpointStatus": str,
        "Id": str,
        "Location": ClientDeleteEndpointResponseEndpointResponseLocationTypeDef,
        "Metrics": Dict[str, float],
        "OptOut": str,
        "RequestId": str,
        "User": ClientDeleteEndpointResponseEndpointResponseUserTypeDef,
    },
    total=False,
)

ClientDeleteEndpointResponseTypeDef = TypedDict(
    "ClientDeleteEndpointResponseTypeDef",
    {"EndpointResponse": ClientDeleteEndpointResponseEndpointResponseTypeDef},
    total=False,
)

ClientDeleteEventStreamResponseEventStreamTypeDef = TypedDict(
    "ClientDeleteEventStreamResponseEventStreamTypeDef",
    {
        "ApplicationId": str,
        "DestinationStreamArn": str,
        "ExternalId": str,
        "LastModifiedDate": str,
        "LastUpdatedBy": str,
        "RoleArn": str,
    },
    total=False,
)

ClientDeleteEventStreamResponseTypeDef = TypedDict(
    "ClientDeleteEventStreamResponseTypeDef",
    {"EventStream": ClientDeleteEventStreamResponseEventStreamTypeDef},
    total=False,
)

ClientDeleteGcmChannelResponseGCMChannelResponseTypeDef = TypedDict(
    "ClientDeleteGcmChannelResponseGCMChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Credential": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteGcmChannelResponseTypeDef = TypedDict(
    "ClientDeleteGcmChannelResponseTypeDef",
    {"GCMChannelResponse": ClientDeleteGcmChannelResponseGCMChannelResponseTypeDef},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    {
        "Dimensions": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef,
        "Location": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    {
        "EventCondition": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef,
        "SegmentCondition": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef,
        "SegmentDimensions": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    {
        "Conditions": List[
            ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef
        ],
        "Operator": Literal["ALL", "ANY"],
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    {
        "Condition": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef,
        "EvaluationWaitTime": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef,
        "FalseActivity": str,
        "TrueActivity": str,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    {"FromAddress": str},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesEMAILTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesEMAILTypeDef",
    {
        "MessageConfig": ClientDeleteJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef,
        "NextActivity": str,
        "TemplateName": str,
        "TemplateVersion": str,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesHoldoutTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesHoldoutTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    {
        "Dimensions": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef,
        "Location": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    {
        "EventCondition": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef,
        "SegmentCondition": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef,
        "SegmentDimensions": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    {
        "Condition": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef,
        "NextActivity": str,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef",
    {
        "Branches": List[
            ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef
        ],
        "DefaultActivity": str,
        "EvaluationWaitTime": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef",
    {
        "Branches": List[
            ClientDeleteJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef
        ]
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesWaitTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesWaitTypeDef",
    {
        "NextActivity": str,
        "WaitTime": ClientDeleteJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseActivitiesTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseActivitiesTypeDef",
    {
        "ConditionalSplit": ClientDeleteJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef,
        "Description": str,
        "EMAIL": ClientDeleteJourneyResponseJourneyResponseActivitiesEMAILTypeDef,
        "Holdout": ClientDeleteJourneyResponseJourneyResponseActivitiesHoldoutTypeDef,
        "MultiCondition": ClientDeleteJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef,
        "RandomSplit": ClientDeleteJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef,
        "Wait": ClientDeleteJourneyResponseJourneyResponseActivitiesWaitTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseLimitsTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseLimitsTypeDef",
    {"DailyCap": int, "EndpointReentryCap": int, "MessagesPerSecond": int},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseQuietTimeTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseScheduleTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseScheduleTypeDef",
    {"EndTime": datetime, "StartTime": datetime, "Timezone": str},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseStartConditionTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseStartConditionTypeDef",
    {
        "Description": str,
        "SegmentStartCondition": ClientDeleteJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef,
    },
    total=False,
)

ClientDeleteJourneyResponseJourneyResponseTypeDef = TypedDict(
    "ClientDeleteJourneyResponseJourneyResponseTypeDef",
    {
        "Activities": Dict[str, ClientDeleteJourneyResponseJourneyResponseActivitiesTypeDef],
        "ApplicationId": str,
        "CreationDate": str,
        "Id": str,
        "LastModifiedDate": str,
        "Limits": ClientDeleteJourneyResponseJourneyResponseLimitsTypeDef,
        "LocalTime": bool,
        "Name": str,
        "QuietTime": ClientDeleteJourneyResponseJourneyResponseQuietTimeTypeDef,
        "RefreshFrequency": str,
        "Schedule": ClientDeleteJourneyResponseJourneyResponseScheduleTypeDef,
        "StartActivity": str,
        "StartCondition": ClientDeleteJourneyResponseJourneyResponseStartConditionTypeDef,
        "State": Literal["DRAFT", "ACTIVE", "COMPLETED", "CANCELLED", "CLOSED"],
        "tags": Dict[str, str],
    },
    total=False,
)

ClientDeleteJourneyResponseTypeDef = TypedDict(
    "ClientDeleteJourneyResponseTypeDef",
    {"JourneyResponse": ClientDeleteJourneyResponseJourneyResponseTypeDef},
    total=False,
)

ClientDeletePushTemplateResponseMessageBodyTypeDef = TypedDict(
    "ClientDeletePushTemplateResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientDeletePushTemplateResponseTypeDef = TypedDict(
    "ClientDeletePushTemplateResponseTypeDef",
    {"MessageBody": ClientDeletePushTemplateResponseMessageBodyTypeDef},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsAttributesTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsBehaviorTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsBehaviorTypeDef",
    {"Recency": ClientDeleteSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef,
        "Model": ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef,
        "Platform": ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientDeleteSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsLocationTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsLocationTypeDef",
    {
        "Country": ClientDeleteSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientDeleteSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsMetricsTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseDimensionsTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseDimensionsTypeDef",
    {
        "Attributes": Dict[
            str, ClientDeleteSegmentResponseSegmentResponseDimensionsAttributesTypeDef
        ],
        "Behavior": ClientDeleteSegmentResponseSegmentResponseDimensionsBehaviorTypeDef,
        "Demographic": ClientDeleteSegmentResponseSegmentResponseDimensionsDemographicTypeDef,
        "Location": ClientDeleteSegmentResponseSegmentResponseDimensionsLocationTypeDef,
        "Metrics": Dict[str, ClientDeleteSegmentResponseSegmentResponseDimensionsMetricsTypeDef],
        "UserAttributes": Dict[
            str, ClientDeleteSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef
        ],
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseImportDefinitionTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseImportDefinitionTypeDef",
    {
        "ChannelCounts": Dict[str, int],
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RoleArn": str,
        "S3Url": str,
        "Size": int,
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    {
        "Recency": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef,
        "Model": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef,
        "Platform": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    {
        "Country": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef,
        "Demographic": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef,
        "Location": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    {"Id": str, "Version": int},
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    {
        "Dimensions": List[
            ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef
        ],
        "SourceSegments": List[
            ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef
        ],
        "SourceType": Literal["ALL", "ANY", "NONE"],
        "Type": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseSegmentGroupsTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseSegmentGroupsTypeDef",
    {
        "Groups": List[ClientDeleteSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef],
        "Include": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientDeleteSegmentResponseSegmentResponseTypeDef = TypedDict(
    "ClientDeleteSegmentResponseSegmentResponseTypeDef",
    {
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "Dimensions": ClientDeleteSegmentResponseSegmentResponseDimensionsTypeDef,
        "Id": str,
        "ImportDefinition": ClientDeleteSegmentResponseSegmentResponseImportDefinitionTypeDef,
        "LastModifiedDate": str,
        "Name": str,
        "SegmentGroups": ClientDeleteSegmentResponseSegmentResponseSegmentGroupsTypeDef,
        "SegmentType": Literal["DIMENSIONAL", "IMPORT"],
        "tags": Dict[str, str],
        "Version": int,
    },
    total=False,
)

ClientDeleteSegmentResponseTypeDef = TypedDict(
    "ClientDeleteSegmentResponseTypeDef",
    {"SegmentResponse": ClientDeleteSegmentResponseSegmentResponseTypeDef},
    total=False,
)

ClientDeleteSmsChannelResponseSMSChannelResponseTypeDef = TypedDict(
    "ClientDeleteSmsChannelResponseSMSChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "PromotionalMessagesPerSecond": int,
        "SenderId": str,
        "ShortCode": str,
        "TransactionalMessagesPerSecond": int,
        "Version": int,
    },
    total=False,
)

ClientDeleteSmsChannelResponseTypeDef = TypedDict(
    "ClientDeleteSmsChannelResponseTypeDef",
    {"SMSChannelResponse": ClientDeleteSmsChannelResponseSMSChannelResponseTypeDef},
    total=False,
)

ClientDeleteSmsTemplateResponseMessageBodyTypeDef = TypedDict(
    "ClientDeleteSmsTemplateResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientDeleteSmsTemplateResponseTypeDef = TypedDict(
    "ClientDeleteSmsTemplateResponseTypeDef",
    {"MessageBody": ClientDeleteSmsTemplateResponseMessageBodyTypeDef},
    total=False,
)

ClientDeleteUserEndpointsResponseEndpointsResponseItemDemographicTypeDef = TypedDict(
    "ClientDeleteUserEndpointsResponseEndpointsResponseItemDemographicTypeDef",
    {
        "AppVersion": str,
        "Locale": str,
        "Make": str,
        "Model": str,
        "ModelVersion": str,
        "Platform": str,
        "PlatformVersion": str,
        "Timezone": str,
    },
    total=False,
)

ClientDeleteUserEndpointsResponseEndpointsResponseItemLocationTypeDef = TypedDict(
    "ClientDeleteUserEndpointsResponseEndpointsResponseItemLocationTypeDef",
    {
        "City": str,
        "Country": str,
        "Latitude": float,
        "Longitude": float,
        "PostalCode": str,
        "Region": str,
    },
    total=False,
)

ClientDeleteUserEndpointsResponseEndpointsResponseItemUserTypeDef = TypedDict(
    "ClientDeleteUserEndpointsResponseEndpointsResponseItemUserTypeDef",
    {"UserAttributes": Dict[str, List[str]], "UserId": str},
    total=False,
)

ClientDeleteUserEndpointsResponseEndpointsResponseItemTypeDef = TypedDict(
    "ClientDeleteUserEndpointsResponseEndpointsResponseItemTypeDef",
    {
        "Address": str,
        "ApplicationId": str,
        "Attributes": Dict[str, List[str]],
        "ChannelType": Literal[
            "GCM",
            "APNS",
            "APNS_SANDBOX",
            "APNS_VOIP",
            "APNS_VOIP_SANDBOX",
            "ADM",
            "SMS",
            "VOICE",
            "EMAIL",
            "BAIDU",
            "CUSTOM",
        ],
        "CohortId": str,
        "CreationDate": str,
        "Demographic": ClientDeleteUserEndpointsResponseEndpointsResponseItemDemographicTypeDef,
        "EffectiveDate": str,
        "EndpointStatus": str,
        "Id": str,
        "Location": ClientDeleteUserEndpointsResponseEndpointsResponseItemLocationTypeDef,
        "Metrics": Dict[str, float],
        "OptOut": str,
        "RequestId": str,
        "User": ClientDeleteUserEndpointsResponseEndpointsResponseItemUserTypeDef,
    },
    total=False,
)

ClientDeleteUserEndpointsResponseEndpointsResponseTypeDef = TypedDict(
    "ClientDeleteUserEndpointsResponseEndpointsResponseTypeDef",
    {"Item": List[ClientDeleteUserEndpointsResponseEndpointsResponseItemTypeDef]},
    total=False,
)

ClientDeleteUserEndpointsResponseTypeDef = TypedDict(
    "ClientDeleteUserEndpointsResponseTypeDef",
    {"EndpointsResponse": ClientDeleteUserEndpointsResponseEndpointsResponseTypeDef},
    total=False,
)

ClientDeleteVoiceChannelResponseVoiceChannelResponseTypeDef = TypedDict(
    "ClientDeleteVoiceChannelResponseVoiceChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientDeleteVoiceChannelResponseTypeDef = TypedDict(
    "ClientDeleteVoiceChannelResponseTypeDef",
    {"VoiceChannelResponse": ClientDeleteVoiceChannelResponseVoiceChannelResponseTypeDef},
    total=False,
)

ClientDeleteVoiceTemplateResponseMessageBodyTypeDef = TypedDict(
    "ClientDeleteVoiceTemplateResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientDeleteVoiceTemplateResponseTypeDef = TypedDict(
    "ClientDeleteVoiceTemplateResponseTypeDef",
    {"MessageBody": ClientDeleteVoiceTemplateResponseMessageBodyTypeDef},
    total=False,
)

ClientGetAdmChannelResponseADMChannelResponseTypeDef = TypedDict(
    "ClientGetAdmChannelResponseADMChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientGetAdmChannelResponseTypeDef = TypedDict(
    "ClientGetAdmChannelResponseTypeDef",
    {"ADMChannelResponse": ClientGetAdmChannelResponseADMChannelResponseTypeDef},
    total=False,
)

ClientGetApnsChannelResponseAPNSChannelResponseTypeDef = TypedDict(
    "ClientGetApnsChannelResponseAPNSChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientGetApnsChannelResponseTypeDef = TypedDict(
    "ClientGetApnsChannelResponseTypeDef",
    {"APNSChannelResponse": ClientGetApnsChannelResponseAPNSChannelResponseTypeDef},
    total=False,
)

ClientGetApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef = TypedDict(
    "ClientGetApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientGetApnsSandboxChannelResponseTypeDef = TypedDict(
    "ClientGetApnsSandboxChannelResponseTypeDef",
    {
        "APNSSandboxChannelResponse": ClientGetApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef
    },
    total=False,
)

ClientGetApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef = TypedDict(
    "ClientGetApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientGetApnsVoipChannelResponseTypeDef = TypedDict(
    "ClientGetApnsVoipChannelResponseTypeDef",
    {"APNSVoipChannelResponse": ClientGetApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef},
    total=False,
)

ClientGetApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef = TypedDict(
    "ClientGetApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientGetApnsVoipSandboxChannelResponseTypeDef = TypedDict(
    "ClientGetApnsVoipSandboxChannelResponseTypeDef",
    {
        "APNSVoipSandboxChannelResponse": ClientGetApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef
    },
    total=False,
)

ClientGetAppResponseApplicationResponseTypeDef = TypedDict(
    "ClientGetAppResponseApplicationResponseTypeDef",
    {"Arn": str, "Id": str, "Name": str, "tags": Dict[str, str]},
    total=False,
)

ClientGetAppResponseTypeDef = TypedDict(
    "ClientGetAppResponseTypeDef",
    {"ApplicationResponse": ClientGetAppResponseApplicationResponseTypeDef},
    total=False,
)

ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef = TypedDict(
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef",
    {"Key": str, "Type": str, "Value": str},
    total=False,
)

ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsValuesTypeDef = TypedDict(
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsValuesTypeDef",
    {"Key": str, "Type": str, "Value": str},
    total=False,
)

ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsTypeDef = TypedDict(
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsTypeDef",
    {
        "GroupedBys": List[
            ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef
        ],
        "Values": List[
            ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsValuesTypeDef
        ],
    },
    total=False,
)

ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultTypeDef = TypedDict(
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultTypeDef",
    {
        "Rows": List[
            ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultRowsTypeDef
        ]
    },
    total=False,
)

ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseTypeDef = TypedDict(
    "ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseTypeDef",
    {
        "ApplicationId": str,
        "EndTime": datetime,
        "KpiName": str,
        "KpiResult": ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseKpiResultTypeDef,
        "NextToken": str,
        "StartTime": datetime,
    },
    total=False,
)

ClientGetApplicationDateRangeKpiResponseTypeDef = TypedDict(
    "ClientGetApplicationDateRangeKpiResponseTypeDef",
    {
        "ApplicationDateRangeKpiResponse": ClientGetApplicationDateRangeKpiResponseApplicationDateRangeKpiResponseTypeDef
    },
    total=False,
)

ClientGetApplicationSettingsResponseApplicationSettingsResourceCampaignHookTypeDef = TypedDict(
    "ClientGetApplicationSettingsResponseApplicationSettingsResourceCampaignHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientGetApplicationSettingsResponseApplicationSettingsResourceLimitsTypeDef = TypedDict(
    "ClientGetApplicationSettingsResponseApplicationSettingsResourceLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientGetApplicationSettingsResponseApplicationSettingsResourceQuietTimeTypeDef = TypedDict(
    "ClientGetApplicationSettingsResponseApplicationSettingsResourceQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetApplicationSettingsResponseApplicationSettingsResourceTypeDef = TypedDict(
    "ClientGetApplicationSettingsResponseApplicationSettingsResourceTypeDef",
    {
        "ApplicationId": str,
        "CampaignHook": ClientGetApplicationSettingsResponseApplicationSettingsResourceCampaignHookTypeDef,
        "LastModifiedDate": str,
        "Limits": ClientGetApplicationSettingsResponseApplicationSettingsResourceLimitsTypeDef,
        "QuietTime": ClientGetApplicationSettingsResponseApplicationSettingsResourceQuietTimeTypeDef,
    },
    total=False,
)

ClientGetApplicationSettingsResponseTypeDef = TypedDict(
    "ClientGetApplicationSettingsResponseTypeDef",
    {
        "ApplicationSettingsResource": ClientGetApplicationSettingsResponseApplicationSettingsResourceTypeDef
    },
    total=False,
)

ClientGetAppsResponseApplicationsResponseItemTypeDef = TypedDict(
    "ClientGetAppsResponseApplicationsResponseItemTypeDef",
    {"Arn": str, "Id": str, "Name": str, "tags": Dict[str, str]},
    total=False,
)

ClientGetAppsResponseApplicationsResponseTypeDef = TypedDict(
    "ClientGetAppsResponseApplicationsResponseTypeDef",
    {"Item": List[ClientGetAppsResponseApplicationsResponseItemTypeDef], "NextToken": str},
    total=False,
)

ClientGetAppsResponseTypeDef = TypedDict(
    "ClientGetAppsResponseTypeDef",
    {"ApplicationsResponse": ClientGetAppsResponseApplicationsResponseTypeDef},
    total=False,
)

ClientGetBaiduChannelResponseBaiduChannelResponseTypeDef = TypedDict(
    "ClientGetBaiduChannelResponseBaiduChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Credential": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientGetBaiduChannelResponseTypeDef = TypedDict(
    "ClientGetBaiduChannelResponseTypeDef",
    {"BaiduChannelResponse": ClientGetBaiduChannelResponseBaiduChannelResponseTypeDef},
    total=False,
)

ClientGetCampaignActivitiesResponseActivitiesResponseItemTypeDef = TypedDict(
    "ClientGetCampaignActivitiesResponseActivitiesResponseItemTypeDef",
    {
        "ApplicationId": str,
        "CampaignId": str,
        "End": str,
        "Id": str,
        "Result": str,
        "ScheduledStart": str,
        "Start": str,
        "State": str,
        "SuccessfulEndpointCount": int,
        "TimezonesCompletedCount": int,
        "TimezonesTotalCount": int,
        "TotalEndpointCount": int,
        "TreatmentId": str,
    },
    total=False,
)

ClientGetCampaignActivitiesResponseActivitiesResponseTypeDef = TypedDict(
    "ClientGetCampaignActivitiesResponseActivitiesResponseTypeDef",
    {
        "Item": List[ClientGetCampaignActivitiesResponseActivitiesResponseItemTypeDef],
        "NextToken": str,
    },
    total=False,
)

ClientGetCampaignActivitiesResponseTypeDef = TypedDict(
    "ClientGetCampaignActivitiesResponseTypeDef",
    {"ActivitiesResponse": ClientGetCampaignActivitiesResponseActivitiesResponseTypeDef},
    total=False,
)

ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef = TypedDict(
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef",
    {"Key": str, "Type": str, "Value": str},
    total=False,
)

ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsValuesTypeDef = TypedDict(
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsValuesTypeDef",
    {"Key": str, "Type": str, "Value": str},
    total=False,
)

ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsTypeDef = TypedDict(
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsTypeDef",
    {
        "GroupedBys": List[
            ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef
        ],
        "Values": List[
            ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsValuesTypeDef
        ],
    },
    total=False,
)

ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultTypeDef = TypedDict(
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultTypeDef",
    {
        "Rows": List[
            ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultRowsTypeDef
        ]
    },
    total=False,
)

ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseTypeDef = TypedDict(
    "ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseTypeDef",
    {
        "ApplicationId": str,
        "CampaignId": str,
        "EndTime": datetime,
        "KpiName": str,
        "KpiResult": ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseKpiResultTypeDef,
        "NextToken": str,
        "StartTime": datetime,
    },
    total=False,
)

ClientGetCampaignDateRangeKpiResponseTypeDef = TypedDict(
    "ClientGetCampaignDateRangeKpiResponseTypeDef",
    {
        "CampaignDateRangeKpiResponse": ClientGetCampaignDateRangeKpiResponseCampaignDateRangeKpiResponseTypeDef
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef",
    {
        "Id": str,
        "MessageConfiguration": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef,
        "Schedule": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef,
        "SizePercent": int,
        "State": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef,
        "TemplateConfiguration": ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseDefaultStateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseDefaultStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseHookTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseLimitsTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientGetCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseMessageConfigurationTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientGetCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientGetCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientGetCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientGetCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientGetCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientGetCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientGetCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseScheduleEventFilterTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientGetCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseScheduleQuietTimeTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseScheduleTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientGetCampaignResponseCampaignResponseScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientGetCampaignResponseCampaignResponseScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseStateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignResponseCampaignResponseTemplateConfigurationTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientGetCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientGetCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientGetCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientGetCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientGetCampaignResponseCampaignResponseTypeDef = TypedDict(
    "ClientGetCampaignResponseCampaignResponseTypeDef",
    {
        "AdditionalTreatments": List[
            ClientGetCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef
        ],
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "DefaultState": ClientGetCampaignResponseCampaignResponseDefaultStateTypeDef,
        "Description": str,
        "HoldoutPercent": int,
        "Hook": ClientGetCampaignResponseCampaignResponseHookTypeDef,
        "Id": str,
        "IsPaused": bool,
        "LastModifiedDate": str,
        "Limits": ClientGetCampaignResponseCampaignResponseLimitsTypeDef,
        "MessageConfiguration": ClientGetCampaignResponseCampaignResponseMessageConfigurationTypeDef,
        "Name": str,
        "Schedule": ClientGetCampaignResponseCampaignResponseScheduleTypeDef,
        "SegmentId": str,
        "SegmentVersion": int,
        "State": ClientGetCampaignResponseCampaignResponseStateTypeDef,
        "tags": Dict[str, str],
        "TemplateConfiguration": ClientGetCampaignResponseCampaignResponseTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
        "Version": int,
    },
    total=False,
)

ClientGetCampaignResponseTypeDef = TypedDict(
    "ClientGetCampaignResponseTypeDef",
    {"CampaignResponse": ClientGetCampaignResponseCampaignResponseTypeDef},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsStateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTypeDef",
    {
        "Id": str,
        "MessageConfiguration": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef,
        "Schedule": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef,
        "SizePercent": int,
        "State": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsStateTypeDef,
        "TemplateConfiguration": ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseDefaultStateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseDefaultStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseHookTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseLimitsTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseScheduleQuietTimeTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseScheduleTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientGetCampaignVersionResponseCampaignResponseScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientGetCampaignVersionResponseCampaignResponseScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseStateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientGetCampaignVersionResponseCampaignResponseTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseCampaignResponseTypeDef",
    {
        "AdditionalTreatments": List[
            ClientGetCampaignVersionResponseCampaignResponseAdditionalTreatmentsTypeDef
        ],
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "DefaultState": ClientGetCampaignVersionResponseCampaignResponseDefaultStateTypeDef,
        "Description": str,
        "HoldoutPercent": int,
        "Hook": ClientGetCampaignVersionResponseCampaignResponseHookTypeDef,
        "Id": str,
        "IsPaused": bool,
        "LastModifiedDate": str,
        "Limits": ClientGetCampaignVersionResponseCampaignResponseLimitsTypeDef,
        "MessageConfiguration": ClientGetCampaignVersionResponseCampaignResponseMessageConfigurationTypeDef,
        "Name": str,
        "Schedule": ClientGetCampaignVersionResponseCampaignResponseScheduleTypeDef,
        "SegmentId": str,
        "SegmentVersion": int,
        "State": ClientGetCampaignVersionResponseCampaignResponseStateTypeDef,
        "tags": Dict[str, str],
        "TemplateConfiguration": ClientGetCampaignVersionResponseCampaignResponseTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
        "Version": int,
    },
    total=False,
)

ClientGetCampaignVersionResponseTypeDef = TypedDict(
    "ClientGetCampaignVersionResponseTypeDef",
    {"CampaignResponse": ClientGetCampaignVersionResponseCampaignResponseTypeDef},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleQuietTimeTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsStateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTypeDef",
    {
        "Id": str,
        "MessageConfiguration": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationTypeDef,
        "Schedule": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsScheduleTypeDef,
        "SizePercent": int,
        "State": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsStateTypeDef,
        "TemplateConfiguration": ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemDefaultStateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemDefaultStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemHookTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemLimitsTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleQuietTimeTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemStateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseItemTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseItemTypeDef",
    {
        "AdditionalTreatments": List[
            ClientGetCampaignVersionsResponseCampaignsResponseItemAdditionalTreatmentsTypeDef
        ],
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "DefaultState": ClientGetCampaignVersionsResponseCampaignsResponseItemDefaultStateTypeDef,
        "Description": str,
        "HoldoutPercent": int,
        "Hook": ClientGetCampaignVersionsResponseCampaignsResponseItemHookTypeDef,
        "Id": str,
        "IsPaused": bool,
        "LastModifiedDate": str,
        "Limits": ClientGetCampaignVersionsResponseCampaignsResponseItemLimitsTypeDef,
        "MessageConfiguration": ClientGetCampaignVersionsResponseCampaignsResponseItemMessageConfigurationTypeDef,
        "Name": str,
        "Schedule": ClientGetCampaignVersionsResponseCampaignsResponseItemScheduleTypeDef,
        "SegmentId": str,
        "SegmentVersion": int,
        "State": ClientGetCampaignVersionsResponseCampaignsResponseItemStateTypeDef,
        "tags": Dict[str, str],
        "TemplateConfiguration": ClientGetCampaignVersionsResponseCampaignsResponseItemTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
        "Version": int,
    },
    total=False,
)

ClientGetCampaignVersionsResponseCampaignsResponseTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseCampaignsResponseTypeDef",
    {"Item": List[ClientGetCampaignVersionsResponseCampaignsResponseItemTypeDef], "NextToken": str},
    total=False,
)

ClientGetCampaignVersionsResponseTypeDef = TypedDict(
    "ClientGetCampaignVersionsResponseTypeDef",
    {"CampaignsResponse": ClientGetCampaignVersionsResponseCampaignsResponseTypeDef},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleQuietTimeTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsStateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTypeDef",
    {
        "Id": str,
        "MessageConfiguration": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsMessageConfigurationTypeDef,
        "Schedule": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsScheduleTypeDef,
        "SizePercent": int,
        "State": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsStateTypeDef,
        "TemplateConfiguration": ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemDefaultStateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemDefaultStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemHookTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemLimitsTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemScheduleQuietTimeTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemScheduleTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientGetCampaignsResponseCampaignsResponseItemScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientGetCampaignsResponseCampaignsResponseItemScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemStateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseItemTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseItemTypeDef",
    {
        "AdditionalTreatments": List[
            ClientGetCampaignsResponseCampaignsResponseItemAdditionalTreatmentsTypeDef
        ],
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "DefaultState": ClientGetCampaignsResponseCampaignsResponseItemDefaultStateTypeDef,
        "Description": str,
        "HoldoutPercent": int,
        "Hook": ClientGetCampaignsResponseCampaignsResponseItemHookTypeDef,
        "Id": str,
        "IsPaused": bool,
        "LastModifiedDate": str,
        "Limits": ClientGetCampaignsResponseCampaignsResponseItemLimitsTypeDef,
        "MessageConfiguration": ClientGetCampaignsResponseCampaignsResponseItemMessageConfigurationTypeDef,
        "Name": str,
        "Schedule": ClientGetCampaignsResponseCampaignsResponseItemScheduleTypeDef,
        "SegmentId": str,
        "SegmentVersion": int,
        "State": ClientGetCampaignsResponseCampaignsResponseItemStateTypeDef,
        "tags": Dict[str, str],
        "TemplateConfiguration": ClientGetCampaignsResponseCampaignsResponseItemTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
        "Version": int,
    },
    total=False,
)

ClientGetCampaignsResponseCampaignsResponseTypeDef = TypedDict(
    "ClientGetCampaignsResponseCampaignsResponseTypeDef",
    {"Item": List[ClientGetCampaignsResponseCampaignsResponseItemTypeDef], "NextToken": str},
    total=False,
)

ClientGetCampaignsResponseTypeDef = TypedDict(
    "ClientGetCampaignsResponseTypeDef",
    {"CampaignsResponse": ClientGetCampaignsResponseCampaignsResponseTypeDef},
    total=False,
)

ClientGetChannelsResponseChannelsResponseChannelsTypeDef = TypedDict(
    "ClientGetChannelsResponseChannelsResponseChannelsTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Version": int,
    },
    total=False,
)

ClientGetChannelsResponseChannelsResponseTypeDef = TypedDict(
    "ClientGetChannelsResponseChannelsResponseTypeDef",
    {"Channels": Dict[str, ClientGetChannelsResponseChannelsResponseChannelsTypeDef]},
    total=False,
)

ClientGetChannelsResponseTypeDef = TypedDict(
    "ClientGetChannelsResponseTypeDef",
    {"ChannelsResponse": ClientGetChannelsResponseChannelsResponseTypeDef},
    total=False,
)

ClientGetEmailChannelResponseEmailChannelResponseTypeDef = TypedDict(
    "ClientGetEmailChannelResponseEmailChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "ConfigurationSet": str,
        "CreationDate": str,
        "Enabled": bool,
        "FromAddress": str,
        "HasCredential": bool,
        "Id": str,
        "Identity": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "MessagesPerSecond": int,
        "Platform": str,
        "RoleArn": str,
        "Version": int,
    },
    total=False,
)

ClientGetEmailChannelResponseTypeDef = TypedDict(
    "ClientGetEmailChannelResponseTypeDef",
    {"EmailChannelResponse": ClientGetEmailChannelResponseEmailChannelResponseTypeDef},
    total=False,
)

ClientGetEmailTemplateResponseEmailTemplateResponseTypeDef = TypedDict(
    "ClientGetEmailTemplateResponseEmailTemplateResponseTypeDef",
    {
        "Arn": str,
        "CreationDate": str,
        "DefaultSubstitutions": str,
        "HtmlPart": str,
        "LastModifiedDate": str,
        "Subject": str,
        "tags": Dict[str, str],
        "TemplateDescription": str,
        "TemplateName": str,
        "TemplateType": Literal["EMAIL", "SMS", "VOICE", "PUSH"],
        "TextPart": str,
        "Version": str,
    },
    total=False,
)

ClientGetEmailTemplateResponseTypeDef = TypedDict(
    "ClientGetEmailTemplateResponseTypeDef",
    {"EmailTemplateResponse": ClientGetEmailTemplateResponseEmailTemplateResponseTypeDef},
    total=False,
)

ClientGetEndpointResponseEndpointResponseDemographicTypeDef = TypedDict(
    "ClientGetEndpointResponseEndpointResponseDemographicTypeDef",
    {
        "AppVersion": str,
        "Locale": str,
        "Make": str,
        "Model": str,
        "ModelVersion": str,
        "Platform": str,
        "PlatformVersion": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetEndpointResponseEndpointResponseLocationTypeDef = TypedDict(
    "ClientGetEndpointResponseEndpointResponseLocationTypeDef",
    {
        "City": str,
        "Country": str,
        "Latitude": float,
        "Longitude": float,
        "PostalCode": str,
        "Region": str,
    },
    total=False,
)

ClientGetEndpointResponseEndpointResponseUserTypeDef = TypedDict(
    "ClientGetEndpointResponseEndpointResponseUserTypeDef",
    {"UserAttributes": Dict[str, List[str]], "UserId": str},
    total=False,
)

ClientGetEndpointResponseEndpointResponseTypeDef = TypedDict(
    "ClientGetEndpointResponseEndpointResponseTypeDef",
    {
        "Address": str,
        "ApplicationId": str,
        "Attributes": Dict[str, List[str]],
        "ChannelType": Literal[
            "GCM",
            "APNS",
            "APNS_SANDBOX",
            "APNS_VOIP",
            "APNS_VOIP_SANDBOX",
            "ADM",
            "SMS",
            "VOICE",
            "EMAIL",
            "BAIDU",
            "CUSTOM",
        ],
        "CohortId": str,
        "CreationDate": str,
        "Demographic": ClientGetEndpointResponseEndpointResponseDemographicTypeDef,
        "EffectiveDate": str,
        "EndpointStatus": str,
        "Id": str,
        "Location": ClientGetEndpointResponseEndpointResponseLocationTypeDef,
        "Metrics": Dict[str, float],
        "OptOut": str,
        "RequestId": str,
        "User": ClientGetEndpointResponseEndpointResponseUserTypeDef,
    },
    total=False,
)

ClientGetEndpointResponseTypeDef = TypedDict(
    "ClientGetEndpointResponseTypeDef",
    {"EndpointResponse": ClientGetEndpointResponseEndpointResponseTypeDef},
    total=False,
)

ClientGetEventStreamResponseEventStreamTypeDef = TypedDict(
    "ClientGetEventStreamResponseEventStreamTypeDef",
    {
        "ApplicationId": str,
        "DestinationStreamArn": str,
        "ExternalId": str,
        "LastModifiedDate": str,
        "LastUpdatedBy": str,
        "RoleArn": str,
    },
    total=False,
)

ClientGetEventStreamResponseTypeDef = TypedDict(
    "ClientGetEventStreamResponseTypeDef",
    {"EventStream": ClientGetEventStreamResponseEventStreamTypeDef},
    total=False,
)

ClientGetExportJobResponseExportJobResponseDefinitionTypeDef = TypedDict(
    "ClientGetExportJobResponseExportJobResponseDefinitionTypeDef",
    {"RoleArn": str, "S3UrlPrefix": str, "SegmentId": str, "SegmentVersion": int},
    total=False,
)

ClientGetExportJobResponseExportJobResponseTypeDef = TypedDict(
    "ClientGetExportJobResponseExportJobResponseTypeDef",
    {
        "ApplicationId": str,
        "CompletedPieces": int,
        "CompletionDate": str,
        "CreationDate": str,
        "Definition": ClientGetExportJobResponseExportJobResponseDefinitionTypeDef,
        "FailedPieces": int,
        "Failures": List[str],
        "Id": str,
        "JobStatus": Literal[
            "CREATED",
            "PREPARING_FOR_INITIALIZATION",
            "INITIALIZING",
            "PROCESSING",
            "PENDING_JOB",
            "COMPLETING",
            "COMPLETED",
            "FAILING",
            "FAILED",
        ],
        "TotalFailures": int,
        "TotalPieces": int,
        "TotalProcessed": int,
        "Type": str,
    },
    total=False,
)

ClientGetExportJobResponseTypeDef = TypedDict(
    "ClientGetExportJobResponseTypeDef",
    {"ExportJobResponse": ClientGetExportJobResponseExportJobResponseTypeDef},
    total=False,
)

ClientGetExportJobsResponseExportJobsResponseItemDefinitionTypeDef = TypedDict(
    "ClientGetExportJobsResponseExportJobsResponseItemDefinitionTypeDef",
    {"RoleArn": str, "S3UrlPrefix": str, "SegmentId": str, "SegmentVersion": int},
    total=False,
)

ClientGetExportJobsResponseExportJobsResponseItemTypeDef = TypedDict(
    "ClientGetExportJobsResponseExportJobsResponseItemTypeDef",
    {
        "ApplicationId": str,
        "CompletedPieces": int,
        "CompletionDate": str,
        "CreationDate": str,
        "Definition": ClientGetExportJobsResponseExportJobsResponseItemDefinitionTypeDef,
        "FailedPieces": int,
        "Failures": List[str],
        "Id": str,
        "JobStatus": Literal[
            "CREATED",
            "PREPARING_FOR_INITIALIZATION",
            "INITIALIZING",
            "PROCESSING",
            "PENDING_JOB",
            "COMPLETING",
            "COMPLETED",
            "FAILING",
            "FAILED",
        ],
        "TotalFailures": int,
        "TotalPieces": int,
        "TotalProcessed": int,
        "Type": str,
    },
    total=False,
)

ClientGetExportJobsResponseExportJobsResponseTypeDef = TypedDict(
    "ClientGetExportJobsResponseExportJobsResponseTypeDef",
    {"Item": List[ClientGetExportJobsResponseExportJobsResponseItemTypeDef], "NextToken": str},
    total=False,
)

ClientGetExportJobsResponseTypeDef = TypedDict(
    "ClientGetExportJobsResponseTypeDef",
    {"ExportJobsResponse": ClientGetExportJobsResponseExportJobsResponseTypeDef},
    total=False,
)

ClientGetGcmChannelResponseGCMChannelResponseTypeDef = TypedDict(
    "ClientGetGcmChannelResponseGCMChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Credential": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientGetGcmChannelResponseTypeDef = TypedDict(
    "ClientGetGcmChannelResponseTypeDef",
    {"GCMChannelResponse": ClientGetGcmChannelResponseGCMChannelResponseTypeDef},
    total=False,
)

ClientGetImportJobResponseImportJobResponseDefinitionTypeDef = TypedDict(
    "ClientGetImportJobResponseImportJobResponseDefinitionTypeDef",
    {
        "DefineSegment": bool,
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RegisterEndpoints": bool,
        "RoleArn": str,
        "S3Url": str,
        "SegmentId": str,
        "SegmentName": str,
    },
    total=False,
)

ClientGetImportJobResponseImportJobResponseTypeDef = TypedDict(
    "ClientGetImportJobResponseImportJobResponseTypeDef",
    {
        "ApplicationId": str,
        "CompletedPieces": int,
        "CompletionDate": str,
        "CreationDate": str,
        "Definition": ClientGetImportJobResponseImportJobResponseDefinitionTypeDef,
        "FailedPieces": int,
        "Failures": List[str],
        "Id": str,
        "JobStatus": Literal[
            "CREATED",
            "PREPARING_FOR_INITIALIZATION",
            "INITIALIZING",
            "PROCESSING",
            "PENDING_JOB",
            "COMPLETING",
            "COMPLETED",
            "FAILING",
            "FAILED",
        ],
        "TotalFailures": int,
        "TotalPieces": int,
        "TotalProcessed": int,
        "Type": str,
    },
    total=False,
)

ClientGetImportJobResponseTypeDef = TypedDict(
    "ClientGetImportJobResponseTypeDef",
    {"ImportJobResponse": ClientGetImportJobResponseImportJobResponseTypeDef},
    total=False,
)

ClientGetImportJobsResponseImportJobsResponseItemDefinitionTypeDef = TypedDict(
    "ClientGetImportJobsResponseImportJobsResponseItemDefinitionTypeDef",
    {
        "DefineSegment": bool,
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RegisterEndpoints": bool,
        "RoleArn": str,
        "S3Url": str,
        "SegmentId": str,
        "SegmentName": str,
    },
    total=False,
)

ClientGetImportJobsResponseImportJobsResponseItemTypeDef = TypedDict(
    "ClientGetImportJobsResponseImportJobsResponseItemTypeDef",
    {
        "ApplicationId": str,
        "CompletedPieces": int,
        "CompletionDate": str,
        "CreationDate": str,
        "Definition": ClientGetImportJobsResponseImportJobsResponseItemDefinitionTypeDef,
        "FailedPieces": int,
        "Failures": List[str],
        "Id": str,
        "JobStatus": Literal[
            "CREATED",
            "PREPARING_FOR_INITIALIZATION",
            "INITIALIZING",
            "PROCESSING",
            "PENDING_JOB",
            "COMPLETING",
            "COMPLETED",
            "FAILING",
            "FAILED",
        ],
        "TotalFailures": int,
        "TotalPieces": int,
        "TotalProcessed": int,
        "Type": str,
    },
    total=False,
)

ClientGetImportJobsResponseImportJobsResponseTypeDef = TypedDict(
    "ClientGetImportJobsResponseImportJobsResponseTypeDef",
    {"Item": List[ClientGetImportJobsResponseImportJobsResponseItemTypeDef], "NextToken": str},
    total=False,
)

ClientGetImportJobsResponseTypeDef = TypedDict(
    "ClientGetImportJobsResponseTypeDef",
    {"ImportJobsResponse": ClientGetImportJobsResponseImportJobsResponseTypeDef},
    total=False,
)

ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef = TypedDict(
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef",
    {"Key": str, "Type": str, "Value": str},
    total=False,
)

ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsValuesTypeDef = TypedDict(
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsValuesTypeDef",
    {"Key": str, "Type": str, "Value": str},
    total=False,
)

ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsTypeDef = TypedDict(
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsTypeDef",
    {
        "GroupedBys": List[
            ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsGroupedBysTypeDef
        ],
        "Values": List[
            ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsValuesTypeDef
        ],
    },
    total=False,
)

ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultTypeDef = TypedDict(
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultTypeDef",
    {
        "Rows": List[
            ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultRowsTypeDef
        ]
    },
    total=False,
)

ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseTypeDef = TypedDict(
    "ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseTypeDef",
    {
        "ApplicationId": str,
        "EndTime": datetime,
        "JourneyId": str,
        "KpiName": str,
        "KpiResult": ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseKpiResultTypeDef,
        "NextToken": str,
        "StartTime": datetime,
    },
    total=False,
)

ClientGetJourneyDateRangeKpiResponseTypeDef = TypedDict(
    "ClientGetJourneyDateRangeKpiResponseTypeDef",
    {
        "JourneyDateRangeKpiResponse": ClientGetJourneyDateRangeKpiResponseJourneyDateRangeKpiResponseTypeDef
    },
    total=False,
)

ClientGetJourneyExecutionActivityMetricsResponseJourneyExecutionActivityMetricsResponseTypeDef = TypedDict(
    "ClientGetJourneyExecutionActivityMetricsResponseJourneyExecutionActivityMetricsResponseTypeDef",
    {
        "ActivityType": str,
        "ApplicationId": str,
        "JourneyActivityId": str,
        "JourneyId": str,
        "LastEvaluatedTime": str,
        "Metrics": Dict[str, str],
    },
    total=False,
)

ClientGetJourneyExecutionActivityMetricsResponseTypeDef = TypedDict(
    "ClientGetJourneyExecutionActivityMetricsResponseTypeDef",
    {
        "JourneyExecutionActivityMetricsResponse": ClientGetJourneyExecutionActivityMetricsResponseJourneyExecutionActivityMetricsResponseTypeDef
    },
    total=False,
)

ClientGetJourneyExecutionMetricsResponseJourneyExecutionMetricsResponseTypeDef = TypedDict(
    "ClientGetJourneyExecutionMetricsResponseJourneyExecutionMetricsResponseTypeDef",
    {"ApplicationId": str, "JourneyId": str, "LastEvaluatedTime": str, "Metrics": Dict[str, str]},
    total=False,
)

ClientGetJourneyExecutionMetricsResponseTypeDef = TypedDict(
    "ClientGetJourneyExecutionMetricsResponseTypeDef",
    {
        "JourneyExecutionMetricsResponse": ClientGetJourneyExecutionMetricsResponseJourneyExecutionMetricsResponseTypeDef
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    {
        "Dimensions": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef,
        "Location": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    {
        "EventCondition": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef,
        "SegmentCondition": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef,
        "SegmentDimensions": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    {
        "Conditions": List[
            ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef
        ],
        "Operator": Literal["ALL", "ANY"],
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    {
        "Condition": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef,
        "EvaluationWaitTime": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef,
        "FalseActivity": str,
        "TrueActivity": str,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    {"FromAddress": str},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesEMAILTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesEMAILTypeDef",
    {
        "MessageConfig": ClientGetJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef,
        "NextActivity": str,
        "TemplateName": str,
        "TemplateVersion": str,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesHoldoutTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesHoldoutTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    {
        "Dimensions": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef,
        "Location": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    {
        "EventCondition": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef,
        "SegmentCondition": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef,
        "SegmentDimensions": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    {
        "Condition": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef,
        "NextActivity": str,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef",
    {
        "Branches": List[
            ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef
        ],
        "DefaultActivity": str,
        "EvaluationWaitTime": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef",
    {"Branches": List[ClientGetJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef]},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesWaitTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesWaitTypeDef",
    {
        "NextActivity": str,
        "WaitTime": ClientGetJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseActivitiesTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseActivitiesTypeDef",
    {
        "ConditionalSplit": ClientGetJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef,
        "Description": str,
        "EMAIL": ClientGetJourneyResponseJourneyResponseActivitiesEMAILTypeDef,
        "Holdout": ClientGetJourneyResponseJourneyResponseActivitiesHoldoutTypeDef,
        "MultiCondition": ClientGetJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef,
        "RandomSplit": ClientGetJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef,
        "Wait": ClientGetJourneyResponseJourneyResponseActivitiesWaitTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseLimitsTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseLimitsTypeDef",
    {"DailyCap": int, "EndpointReentryCap": int, "MessagesPerSecond": int},
    total=False,
)

ClientGetJourneyResponseJourneyResponseQuietTimeTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientGetJourneyResponseJourneyResponseScheduleTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseScheduleTypeDef",
    {"EndTime": datetime, "StartTime": datetime, "Timezone": str},
    total=False,
)

ClientGetJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientGetJourneyResponseJourneyResponseStartConditionTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseStartConditionTypeDef",
    {
        "Description": str,
        "SegmentStartCondition": ClientGetJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef,
    },
    total=False,
)

ClientGetJourneyResponseJourneyResponseTypeDef = TypedDict(
    "ClientGetJourneyResponseJourneyResponseTypeDef",
    {
        "Activities": Dict[str, ClientGetJourneyResponseJourneyResponseActivitiesTypeDef],
        "ApplicationId": str,
        "CreationDate": str,
        "Id": str,
        "LastModifiedDate": str,
        "Limits": ClientGetJourneyResponseJourneyResponseLimitsTypeDef,
        "LocalTime": bool,
        "Name": str,
        "QuietTime": ClientGetJourneyResponseJourneyResponseQuietTimeTypeDef,
        "RefreshFrequency": str,
        "Schedule": ClientGetJourneyResponseJourneyResponseScheduleTypeDef,
        "StartActivity": str,
        "StartCondition": ClientGetJourneyResponseJourneyResponseStartConditionTypeDef,
        "State": Literal["DRAFT", "ACTIVE", "COMPLETED", "CANCELLED", "CLOSED"],
        "tags": Dict[str, str],
    },
    total=False,
)

ClientGetJourneyResponseTypeDef = TypedDict(
    "ClientGetJourneyResponseTypeDef",
    {"JourneyResponse": ClientGetJourneyResponseJourneyResponseTypeDef},
    total=False,
)

ClientGetPushTemplateResponsePushNotificationTemplateResponseADMTypeDef = TypedDict(
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseADMTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetPushTemplateResponsePushNotificationTemplateResponseAPNSTypeDef = TypedDict(
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseAPNSTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "MediaUrl": str,
        "RawContent": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetPushTemplateResponsePushNotificationTemplateResponseBaiduTypeDef = TypedDict(
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseBaiduTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetPushTemplateResponsePushNotificationTemplateResponseDefaultTypeDef = TypedDict(
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseDefaultTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetPushTemplateResponsePushNotificationTemplateResponseGCMTypeDef = TypedDict(
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseGCMTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientGetPushTemplateResponsePushNotificationTemplateResponseTypeDef = TypedDict(
    "ClientGetPushTemplateResponsePushNotificationTemplateResponseTypeDef",
    {
        "ADM": ClientGetPushTemplateResponsePushNotificationTemplateResponseADMTypeDef,
        "APNS": ClientGetPushTemplateResponsePushNotificationTemplateResponseAPNSTypeDef,
        "Arn": str,
        "Baidu": ClientGetPushTemplateResponsePushNotificationTemplateResponseBaiduTypeDef,
        "CreationDate": str,
        "Default": ClientGetPushTemplateResponsePushNotificationTemplateResponseDefaultTypeDef,
        "DefaultSubstitutions": str,
        "GCM": ClientGetPushTemplateResponsePushNotificationTemplateResponseGCMTypeDef,
        "LastModifiedDate": str,
        "tags": Dict[str, str],
        "TemplateDescription": str,
        "TemplateName": str,
        "TemplateType": Literal["EMAIL", "SMS", "VOICE", "PUSH"],
        "Version": str,
    },
    total=False,
)

ClientGetPushTemplateResponseTypeDef = TypedDict(
    "ClientGetPushTemplateResponseTypeDef",
    {
        "PushNotificationTemplateResponse": ClientGetPushTemplateResponsePushNotificationTemplateResponseTypeDef
    },
    total=False,
)

ClientGetSegmentExportJobsResponseExportJobsResponseItemDefinitionTypeDef = TypedDict(
    "ClientGetSegmentExportJobsResponseExportJobsResponseItemDefinitionTypeDef",
    {"RoleArn": str, "S3UrlPrefix": str, "SegmentId": str, "SegmentVersion": int},
    total=False,
)

ClientGetSegmentExportJobsResponseExportJobsResponseItemTypeDef = TypedDict(
    "ClientGetSegmentExportJobsResponseExportJobsResponseItemTypeDef",
    {
        "ApplicationId": str,
        "CompletedPieces": int,
        "CompletionDate": str,
        "CreationDate": str,
        "Definition": ClientGetSegmentExportJobsResponseExportJobsResponseItemDefinitionTypeDef,
        "FailedPieces": int,
        "Failures": List[str],
        "Id": str,
        "JobStatus": Literal[
            "CREATED",
            "PREPARING_FOR_INITIALIZATION",
            "INITIALIZING",
            "PROCESSING",
            "PENDING_JOB",
            "COMPLETING",
            "COMPLETED",
            "FAILING",
            "FAILED",
        ],
        "TotalFailures": int,
        "TotalPieces": int,
        "TotalProcessed": int,
        "Type": str,
    },
    total=False,
)

ClientGetSegmentExportJobsResponseExportJobsResponseTypeDef = TypedDict(
    "ClientGetSegmentExportJobsResponseExportJobsResponseTypeDef",
    {
        "Item": List[ClientGetSegmentExportJobsResponseExportJobsResponseItemTypeDef],
        "NextToken": str,
    },
    total=False,
)

ClientGetSegmentExportJobsResponseTypeDef = TypedDict(
    "ClientGetSegmentExportJobsResponseTypeDef",
    {"ExportJobsResponse": ClientGetSegmentExportJobsResponseExportJobsResponseTypeDef},
    total=False,
)

ClientGetSegmentImportJobsResponseImportJobsResponseItemDefinitionTypeDef = TypedDict(
    "ClientGetSegmentImportJobsResponseImportJobsResponseItemDefinitionTypeDef",
    {
        "DefineSegment": bool,
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RegisterEndpoints": bool,
        "RoleArn": str,
        "S3Url": str,
        "SegmentId": str,
        "SegmentName": str,
    },
    total=False,
)

ClientGetSegmentImportJobsResponseImportJobsResponseItemTypeDef = TypedDict(
    "ClientGetSegmentImportJobsResponseImportJobsResponseItemTypeDef",
    {
        "ApplicationId": str,
        "CompletedPieces": int,
        "CompletionDate": str,
        "CreationDate": str,
        "Definition": ClientGetSegmentImportJobsResponseImportJobsResponseItemDefinitionTypeDef,
        "FailedPieces": int,
        "Failures": List[str],
        "Id": str,
        "JobStatus": Literal[
            "CREATED",
            "PREPARING_FOR_INITIALIZATION",
            "INITIALIZING",
            "PROCESSING",
            "PENDING_JOB",
            "COMPLETING",
            "COMPLETED",
            "FAILING",
            "FAILED",
        ],
        "TotalFailures": int,
        "TotalPieces": int,
        "TotalProcessed": int,
        "Type": str,
    },
    total=False,
)

ClientGetSegmentImportJobsResponseImportJobsResponseTypeDef = TypedDict(
    "ClientGetSegmentImportJobsResponseImportJobsResponseTypeDef",
    {
        "Item": List[ClientGetSegmentImportJobsResponseImportJobsResponseItemTypeDef],
        "NextToken": str,
    },
    total=False,
)

ClientGetSegmentImportJobsResponseTypeDef = TypedDict(
    "ClientGetSegmentImportJobsResponseTypeDef",
    {"ImportJobsResponse": ClientGetSegmentImportJobsResponseImportJobsResponseTypeDef},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsAttributesTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsBehaviorTypeDef",
    {"Recency": ClientGetSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsDemographicTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef,
        "Model": ClientGetSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef,
        "Platform": ClientGetSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsLocationTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsLocationTypeDef",
    {
        "Country": ClientGetSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsMetricsTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseDimensionsTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseDimensionsTypeDef",
    {
        "Attributes": Dict[str, ClientGetSegmentResponseSegmentResponseDimensionsAttributesTypeDef],
        "Behavior": ClientGetSegmentResponseSegmentResponseDimensionsBehaviorTypeDef,
        "Demographic": ClientGetSegmentResponseSegmentResponseDimensionsDemographicTypeDef,
        "Location": ClientGetSegmentResponseSegmentResponseDimensionsLocationTypeDef,
        "Metrics": Dict[str, ClientGetSegmentResponseSegmentResponseDimensionsMetricsTypeDef],
        "UserAttributes": Dict[
            str, ClientGetSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef
        ],
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseImportDefinitionTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseImportDefinitionTypeDef",
    {
        "ChannelCounts": Dict[str, int],
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RoleArn": str,
        "S3Url": str,
        "Size": int,
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    {
        "Recency": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef,
        "Model": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef,
        "Platform": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    {
        "Country": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef,
        "Demographic": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef,
        "Location": ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef,
        "Metrics": Dict[
            str, ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef
        ],
        "UserAttributes": Dict[
            str,
            ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    {"Id": str, "Version": int},
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    {
        "Dimensions": List[
            ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef
        ],
        "SourceSegments": List[
            ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef
        ],
        "SourceType": Literal["ALL", "ANY", "NONE"],
        "Type": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseSegmentGroupsTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseSegmentGroupsTypeDef",
    {
        "Groups": List[ClientGetSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef],
        "Include": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientGetSegmentResponseSegmentResponseTypeDef = TypedDict(
    "ClientGetSegmentResponseSegmentResponseTypeDef",
    {
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "Dimensions": ClientGetSegmentResponseSegmentResponseDimensionsTypeDef,
        "Id": str,
        "ImportDefinition": ClientGetSegmentResponseSegmentResponseImportDefinitionTypeDef,
        "LastModifiedDate": str,
        "Name": str,
        "SegmentGroups": ClientGetSegmentResponseSegmentResponseSegmentGroupsTypeDef,
        "SegmentType": Literal["DIMENSIONAL", "IMPORT"],
        "tags": Dict[str, str],
        "Version": int,
    },
    total=False,
)

ClientGetSegmentResponseTypeDef = TypedDict(
    "ClientGetSegmentResponseTypeDef",
    {"SegmentResponse": ClientGetSegmentResponseSegmentResponseTypeDef},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsAttributesTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsBehaviorTypeDef",
    {"Recency": ClientGetSegmentVersionResponseSegmentResponseDimensionsBehaviorRecencyTypeDef},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicMakeTypeDef,
        "Model": ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicModelTypeDef,
        "Platform": ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationTypeDef",
    {
        "Country": ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsMetricsTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseDimensionsTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseDimensionsTypeDef",
    {
        "Attributes": Dict[
            str, ClientGetSegmentVersionResponseSegmentResponseDimensionsAttributesTypeDef
        ],
        "Behavior": ClientGetSegmentVersionResponseSegmentResponseDimensionsBehaviorTypeDef,
        "Demographic": ClientGetSegmentVersionResponseSegmentResponseDimensionsDemographicTypeDef,
        "Location": ClientGetSegmentVersionResponseSegmentResponseDimensionsLocationTypeDef,
        "Metrics": Dict[
            str, ClientGetSegmentVersionResponseSegmentResponseDimensionsMetricsTypeDef
        ],
        "UserAttributes": Dict[
            str, ClientGetSegmentVersionResponseSegmentResponseDimensionsUserAttributesTypeDef
        ],
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseImportDefinitionTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseImportDefinitionTypeDef",
    {
        "ChannelCounts": Dict[str, int],
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RoleArn": str,
        "S3Url": str,
        "Size": int,
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    {
        "Recency": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef,
        "Model": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef,
        "Platform": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    {
        "Country": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef,
        "Demographic": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef,
        "Location": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    {"Id": str, "Version": int},
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    {
        "Dimensions": List[
            ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef
        ],
        "SourceSegments": List[
            ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef
        ],
        "SourceType": Literal["ALL", "ANY", "NONE"],
        "Type": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsTypeDef",
    {
        "Groups": List[ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsGroupsTypeDef],
        "Include": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientGetSegmentVersionResponseSegmentResponseTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseSegmentResponseTypeDef",
    {
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "Dimensions": ClientGetSegmentVersionResponseSegmentResponseDimensionsTypeDef,
        "Id": str,
        "ImportDefinition": ClientGetSegmentVersionResponseSegmentResponseImportDefinitionTypeDef,
        "LastModifiedDate": str,
        "Name": str,
        "SegmentGroups": ClientGetSegmentVersionResponseSegmentResponseSegmentGroupsTypeDef,
        "SegmentType": Literal["DIMENSIONAL", "IMPORT"],
        "tags": Dict[str, str],
        "Version": int,
    },
    total=False,
)

ClientGetSegmentVersionResponseTypeDef = TypedDict(
    "ClientGetSegmentVersionResponseTypeDef",
    {"SegmentResponse": ClientGetSegmentVersionResponseSegmentResponseTypeDef},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsAttributesTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsBehaviorTypeDef",
    {
        "Recency": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicMakeTypeDef,
        "Model": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicModelTypeDef,
        "Platform": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationTypeDef",
    {
        "Country": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsMetricsTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsTypeDef",
    {
        "Attributes": Dict[
            str, ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsAttributesTypeDef
        ],
        "Behavior": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsBehaviorTypeDef,
        "Demographic": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsDemographicTypeDef,
        "Location": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsLocationTypeDef,
        "Metrics": Dict[
            str, ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsMetricsTypeDef
        ],
        "UserAttributes": Dict[
            str, ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsUserAttributesTypeDef
        ],
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemImportDefinitionTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemImportDefinitionTypeDef",
    {
        "ChannelCounts": Dict[str, int],
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RoleArn": str,
        "S3Url": str,
        "Size": int,
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsAttributesTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    {
        "Recency": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicMakeTypeDef,
        "Model": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicModelTypeDef,
        "Platform": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationTypeDef",
    {
        "Country": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsMetricsTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorTypeDef,
        "Demographic": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicTypeDef,
        "Location": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsSourceSegmentsTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsSourceSegmentsTypeDef",
    {"Id": str, "Version": int},
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsTypeDef",
    {
        "Dimensions": List[
            ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsTypeDef
        ],
        "SourceSegments": List[
            ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsSourceSegmentsTypeDef
        ],
        "SourceType": Literal["ALL", "ANY", "NONE"],
        "Type": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsTypeDef",
    {
        "Groups": List[
            ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsGroupsTypeDef
        ],
        "Include": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseItemTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseItemTypeDef",
    {
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "Dimensions": ClientGetSegmentVersionsResponseSegmentsResponseItemDimensionsTypeDef,
        "Id": str,
        "ImportDefinition": ClientGetSegmentVersionsResponseSegmentsResponseItemImportDefinitionTypeDef,
        "LastModifiedDate": str,
        "Name": str,
        "SegmentGroups": ClientGetSegmentVersionsResponseSegmentsResponseItemSegmentGroupsTypeDef,
        "SegmentType": Literal["DIMENSIONAL", "IMPORT"],
        "tags": Dict[str, str],
        "Version": int,
    },
    total=False,
)

ClientGetSegmentVersionsResponseSegmentsResponseTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseSegmentsResponseTypeDef",
    {"Item": List[ClientGetSegmentVersionsResponseSegmentsResponseItemTypeDef], "NextToken": str},
    total=False,
)

ClientGetSegmentVersionsResponseTypeDef = TypedDict(
    "ClientGetSegmentVersionsResponseTypeDef",
    {"SegmentsResponse": ClientGetSegmentVersionsResponseSegmentsResponseTypeDef},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsAttributesTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsBehaviorTypeDef",
    {"Recency": ClientGetSegmentsResponseSegmentsResponseItemDimensionsBehaviorRecencyTypeDef},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicMakeTypeDef,
        "Model": ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicModelTypeDef,
        "Platform": ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationTypeDef",
    {
        "Country": ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsMetricsTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemDimensionsTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemDimensionsTypeDef",
    {
        "Attributes": Dict[
            str, ClientGetSegmentsResponseSegmentsResponseItemDimensionsAttributesTypeDef
        ],
        "Behavior": ClientGetSegmentsResponseSegmentsResponseItemDimensionsBehaviorTypeDef,
        "Demographic": ClientGetSegmentsResponseSegmentsResponseItemDimensionsDemographicTypeDef,
        "Location": ClientGetSegmentsResponseSegmentsResponseItemDimensionsLocationTypeDef,
        "Metrics": Dict[str, ClientGetSegmentsResponseSegmentsResponseItemDimensionsMetricsTypeDef],
        "UserAttributes": Dict[
            str, ClientGetSegmentsResponseSegmentsResponseItemDimensionsUserAttributesTypeDef
        ],
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemImportDefinitionTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemImportDefinitionTypeDef",
    {
        "ChannelCounts": Dict[str, int],
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RoleArn": str,
        "S3Url": str,
        "Size": int,
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsAttributesTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    {
        "Recency": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicModelTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicMakeTypeDef,
        "Model": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicModelTypeDef,
        "Platform": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationCountryTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationTypeDef",
    {
        "Country": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsMetricsTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsUserAttributesTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsBehaviorTypeDef,
        "Demographic": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsDemographicTypeDef,
        "Location": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsSourceSegmentsTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsSourceSegmentsTypeDef",
    {"Id": str, "Version": int},
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsTypeDef",
    {
        "Dimensions": List[
            ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsDimensionsTypeDef
        ],
        "SourceSegments": List[
            ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsSourceSegmentsTypeDef
        ],
        "SourceType": Literal["ALL", "ANY", "NONE"],
        "Type": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsTypeDef",
    {
        "Groups": List[ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsGroupsTypeDef],
        "Include": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseItemTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseItemTypeDef",
    {
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "Dimensions": ClientGetSegmentsResponseSegmentsResponseItemDimensionsTypeDef,
        "Id": str,
        "ImportDefinition": ClientGetSegmentsResponseSegmentsResponseItemImportDefinitionTypeDef,
        "LastModifiedDate": str,
        "Name": str,
        "SegmentGroups": ClientGetSegmentsResponseSegmentsResponseItemSegmentGroupsTypeDef,
        "SegmentType": Literal["DIMENSIONAL", "IMPORT"],
        "tags": Dict[str, str],
        "Version": int,
    },
    total=False,
)

ClientGetSegmentsResponseSegmentsResponseTypeDef = TypedDict(
    "ClientGetSegmentsResponseSegmentsResponseTypeDef",
    {"Item": List[ClientGetSegmentsResponseSegmentsResponseItemTypeDef], "NextToken": str},
    total=False,
)

ClientGetSegmentsResponseTypeDef = TypedDict(
    "ClientGetSegmentsResponseTypeDef",
    {"SegmentsResponse": ClientGetSegmentsResponseSegmentsResponseTypeDef},
    total=False,
)

ClientGetSmsChannelResponseSMSChannelResponseTypeDef = TypedDict(
    "ClientGetSmsChannelResponseSMSChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "PromotionalMessagesPerSecond": int,
        "SenderId": str,
        "ShortCode": str,
        "TransactionalMessagesPerSecond": int,
        "Version": int,
    },
    total=False,
)

ClientGetSmsChannelResponseTypeDef = TypedDict(
    "ClientGetSmsChannelResponseTypeDef",
    {"SMSChannelResponse": ClientGetSmsChannelResponseSMSChannelResponseTypeDef},
    total=False,
)

ClientGetSmsTemplateResponseSMSTemplateResponseTypeDef = TypedDict(
    "ClientGetSmsTemplateResponseSMSTemplateResponseTypeDef",
    {
        "Arn": str,
        "Body": str,
        "CreationDate": str,
        "DefaultSubstitutions": str,
        "LastModifiedDate": str,
        "tags": Dict[str, str],
        "TemplateDescription": str,
        "TemplateName": str,
        "TemplateType": Literal["EMAIL", "SMS", "VOICE", "PUSH"],
        "Version": str,
    },
    total=False,
)

ClientGetSmsTemplateResponseTypeDef = TypedDict(
    "ClientGetSmsTemplateResponseTypeDef",
    {"SMSTemplateResponse": ClientGetSmsTemplateResponseSMSTemplateResponseTypeDef},
    total=False,
)

ClientGetUserEndpointsResponseEndpointsResponseItemDemographicTypeDef = TypedDict(
    "ClientGetUserEndpointsResponseEndpointsResponseItemDemographicTypeDef",
    {
        "AppVersion": str,
        "Locale": str,
        "Make": str,
        "Model": str,
        "ModelVersion": str,
        "Platform": str,
        "PlatformVersion": str,
        "Timezone": str,
    },
    total=False,
)

ClientGetUserEndpointsResponseEndpointsResponseItemLocationTypeDef = TypedDict(
    "ClientGetUserEndpointsResponseEndpointsResponseItemLocationTypeDef",
    {
        "City": str,
        "Country": str,
        "Latitude": float,
        "Longitude": float,
        "PostalCode": str,
        "Region": str,
    },
    total=False,
)

ClientGetUserEndpointsResponseEndpointsResponseItemUserTypeDef = TypedDict(
    "ClientGetUserEndpointsResponseEndpointsResponseItemUserTypeDef",
    {"UserAttributes": Dict[str, List[str]], "UserId": str},
    total=False,
)

ClientGetUserEndpointsResponseEndpointsResponseItemTypeDef = TypedDict(
    "ClientGetUserEndpointsResponseEndpointsResponseItemTypeDef",
    {
        "Address": str,
        "ApplicationId": str,
        "Attributes": Dict[str, List[str]],
        "ChannelType": Literal[
            "GCM",
            "APNS",
            "APNS_SANDBOX",
            "APNS_VOIP",
            "APNS_VOIP_SANDBOX",
            "ADM",
            "SMS",
            "VOICE",
            "EMAIL",
            "BAIDU",
            "CUSTOM",
        ],
        "CohortId": str,
        "CreationDate": str,
        "Demographic": ClientGetUserEndpointsResponseEndpointsResponseItemDemographicTypeDef,
        "EffectiveDate": str,
        "EndpointStatus": str,
        "Id": str,
        "Location": ClientGetUserEndpointsResponseEndpointsResponseItemLocationTypeDef,
        "Metrics": Dict[str, float],
        "OptOut": str,
        "RequestId": str,
        "User": ClientGetUserEndpointsResponseEndpointsResponseItemUserTypeDef,
    },
    total=False,
)

ClientGetUserEndpointsResponseEndpointsResponseTypeDef = TypedDict(
    "ClientGetUserEndpointsResponseEndpointsResponseTypeDef",
    {"Item": List[ClientGetUserEndpointsResponseEndpointsResponseItemTypeDef]},
    total=False,
)

ClientGetUserEndpointsResponseTypeDef = TypedDict(
    "ClientGetUserEndpointsResponseTypeDef",
    {"EndpointsResponse": ClientGetUserEndpointsResponseEndpointsResponseTypeDef},
    total=False,
)

ClientGetVoiceChannelResponseVoiceChannelResponseTypeDef = TypedDict(
    "ClientGetVoiceChannelResponseVoiceChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientGetVoiceChannelResponseTypeDef = TypedDict(
    "ClientGetVoiceChannelResponseTypeDef",
    {"VoiceChannelResponse": ClientGetVoiceChannelResponseVoiceChannelResponseTypeDef},
    total=False,
)

ClientGetVoiceTemplateResponseVoiceTemplateResponseTypeDef = TypedDict(
    "ClientGetVoiceTemplateResponseVoiceTemplateResponseTypeDef",
    {
        "Arn": str,
        "Body": str,
        "CreationDate": str,
        "DefaultSubstitutions": str,
        "LanguageCode": str,
        "LastModifiedDate": str,
        "tags": Dict[str, str],
        "TemplateDescription": str,
        "TemplateName": str,
        "TemplateType": Literal["EMAIL", "SMS", "VOICE", "PUSH"],
        "Version": str,
        "VoiceId": str,
    },
    total=False,
)

ClientGetVoiceTemplateResponseTypeDef = TypedDict(
    "ClientGetVoiceTemplateResponseTypeDef",
    {"VoiceTemplateResponse": ClientGetVoiceTemplateResponseVoiceTemplateResponseTypeDef},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    {
        "Dimensions": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef,
        "Location": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsTypeDef",
    {
        "EventCondition": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsEventConditionTypeDef,
        "SegmentCondition": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef,
        "SegmentDimensions": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionTypeDef",
    {
        "Conditions": List[
            ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionConditionsTypeDef
        ],
        "Operator": Literal["ALL", "ANY"],
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitEvaluationWaitTimeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitTypeDef",
    {
        "Condition": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitConditionTypeDef,
        "EvaluationWaitTime": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitEvaluationWaitTimeTypeDef,
        "FalseActivity": str,
        "TrueActivity": str,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesEMAILMessageConfigTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesEMAILMessageConfigTypeDef",
    {"FromAddress": str},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesEMAILTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesEMAILTypeDef",
    {
        "MessageConfig": ClientListJourneysResponseJourneysResponseItemActivitiesEMAILMessageConfigTypeDef,
        "NextActivity": str,
        "TemplateName": str,
        "TemplateVersion": str,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesHoldoutTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesHoldoutTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    {
        "Dimensions": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef,
        "Location": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionTypeDef",
    {
        "EventCondition": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionEventConditionTypeDef,
        "SegmentCondition": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef,
        "SegmentDimensions": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesTypeDef",
    {
        "Condition": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesConditionTypeDef,
        "NextActivity": str,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionEvaluationWaitTimeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionTypeDef",
    {
        "Branches": List[
            ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionBranchesTypeDef
        ],
        "DefaultActivity": str,
        "EvaluationWaitTime": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionEvaluationWaitTimeTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesRandomSplitBranchesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesRandomSplitBranchesTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesRandomSplitTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesRandomSplitTypeDef",
    {
        "Branches": List[
            ClientListJourneysResponseJourneysResponseItemActivitiesRandomSplitBranchesTypeDef
        ]
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesWaitWaitTimeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesWaitWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesWaitTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesWaitTypeDef",
    {
        "NextActivity": str,
        "WaitTime": ClientListJourneysResponseJourneysResponseItemActivitiesWaitWaitTimeTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemActivitiesTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemActivitiesTypeDef",
    {
        "ConditionalSplit": ClientListJourneysResponseJourneysResponseItemActivitiesConditionalSplitTypeDef,
        "Description": str,
        "EMAIL": ClientListJourneysResponseJourneysResponseItemActivitiesEMAILTypeDef,
        "Holdout": ClientListJourneysResponseJourneysResponseItemActivitiesHoldoutTypeDef,
        "MultiCondition": ClientListJourneysResponseJourneysResponseItemActivitiesMultiConditionTypeDef,
        "RandomSplit": ClientListJourneysResponseJourneysResponseItemActivitiesRandomSplitTypeDef,
        "Wait": ClientListJourneysResponseJourneysResponseItemActivitiesWaitTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemLimitsTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemLimitsTypeDef",
    {"DailyCap": int, "EndpointReentryCap": int, "MessagesPerSecond": int},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemQuietTimeTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemScheduleTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemScheduleTypeDef",
    {"EndTime": datetime, "StartTime": datetime, "Timezone": str},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemStartConditionSegmentStartConditionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemStartConditionSegmentStartConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientListJourneysResponseJourneysResponseItemStartConditionTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemStartConditionTypeDef",
    {
        "Description": str,
        "SegmentStartCondition": ClientListJourneysResponseJourneysResponseItemStartConditionSegmentStartConditionTypeDef,
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseItemTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseItemTypeDef",
    {
        "Activities": Dict[str, ClientListJourneysResponseJourneysResponseItemActivitiesTypeDef],
        "ApplicationId": str,
        "CreationDate": str,
        "Id": str,
        "LastModifiedDate": str,
        "Limits": ClientListJourneysResponseJourneysResponseItemLimitsTypeDef,
        "LocalTime": bool,
        "Name": str,
        "QuietTime": ClientListJourneysResponseJourneysResponseItemQuietTimeTypeDef,
        "RefreshFrequency": str,
        "Schedule": ClientListJourneysResponseJourneysResponseItemScheduleTypeDef,
        "StartActivity": str,
        "StartCondition": ClientListJourneysResponseJourneysResponseItemStartConditionTypeDef,
        "State": Literal["DRAFT", "ACTIVE", "COMPLETED", "CANCELLED", "CLOSED"],
        "tags": Dict[str, str],
    },
    total=False,
)

ClientListJourneysResponseJourneysResponseTypeDef = TypedDict(
    "ClientListJourneysResponseJourneysResponseTypeDef",
    {"Item": List[ClientListJourneysResponseJourneysResponseItemTypeDef], "NextToken": str},
    total=False,
)

ClientListJourneysResponseTypeDef = TypedDict(
    "ClientListJourneysResponseTypeDef",
    {"JourneysResponse": ClientListJourneysResponseJourneysResponseTypeDef},
    total=False,
)

ClientListTagsForResourceResponseTagsModelTypeDef = TypedDict(
    "ClientListTagsForResourceResponseTagsModelTypeDef", {"tags": Dict[str, str]}, total=False
)

ClientListTagsForResourceResponseTypeDef = TypedDict(
    "ClientListTagsForResourceResponseTypeDef",
    {"TagsModel": ClientListTagsForResourceResponseTagsModelTypeDef},
    total=False,
)

ClientListTemplateVersionsResponseTemplateVersionsResponseItemTypeDef = TypedDict(
    "ClientListTemplateVersionsResponseTemplateVersionsResponseItemTypeDef",
    {
        "CreationDate": str,
        "DefaultSubstitutions": str,
        "LastModifiedDate": str,
        "TemplateDescription": str,
        "TemplateName": str,
        "TemplateType": str,
        "Version": str,
    },
    total=False,
)

ClientListTemplateVersionsResponseTemplateVersionsResponseTypeDef = TypedDict(
    "ClientListTemplateVersionsResponseTemplateVersionsResponseTypeDef",
    {
        "Item": List[ClientListTemplateVersionsResponseTemplateVersionsResponseItemTypeDef],
        "Message": str,
        "NextToken": str,
        "RequestID": str,
    },
    total=False,
)

ClientListTemplateVersionsResponseTypeDef = TypedDict(
    "ClientListTemplateVersionsResponseTypeDef",
    {"TemplateVersionsResponse": ClientListTemplateVersionsResponseTemplateVersionsResponseTypeDef},
    total=False,
)

ClientListTemplatesResponseTemplatesResponseItemTypeDef = TypedDict(
    "ClientListTemplatesResponseTemplatesResponseItemTypeDef",
    {
        "Arn": str,
        "CreationDate": str,
        "DefaultSubstitutions": str,
        "LastModifiedDate": str,
        "tags": Dict[str, str],
        "TemplateDescription": str,
        "TemplateName": str,
        "TemplateType": Literal["EMAIL", "SMS", "VOICE", "PUSH"],
        "Version": str,
    },
    total=False,
)

ClientListTemplatesResponseTemplatesResponseTypeDef = TypedDict(
    "ClientListTemplatesResponseTemplatesResponseTypeDef",
    {"Item": List[ClientListTemplatesResponseTemplatesResponseItemTypeDef], "NextToken": str},
    total=False,
)

ClientListTemplatesResponseTypeDef = TypedDict(
    "ClientListTemplatesResponseTypeDef",
    {"TemplatesResponse": ClientListTemplatesResponseTemplatesResponseTypeDef},
    total=False,
)

ClientPhoneNumberValidateNumberValidateRequestTypeDef = TypedDict(
    "ClientPhoneNumberValidateNumberValidateRequestTypeDef",
    {"IsoCountryCode": str, "PhoneNumber": str},
    total=False,
)

ClientPhoneNumberValidateResponseNumberValidateResponseTypeDef = TypedDict(
    "ClientPhoneNumberValidateResponseNumberValidateResponseTypeDef",
    {
        "Carrier": str,
        "City": str,
        "CleansedPhoneNumberE164": str,
        "CleansedPhoneNumberNational": str,
        "Country": str,
        "CountryCodeIso2": str,
        "CountryCodeNumeric": str,
        "County": str,
        "OriginalCountryCodeIso2": str,
        "OriginalPhoneNumber": str,
        "PhoneType": str,
        "PhoneTypeCode": int,
        "Timezone": str,
        "ZipCode": str,
    },
    total=False,
)

ClientPhoneNumberValidateResponseTypeDef = TypedDict(
    "ClientPhoneNumberValidateResponseTypeDef",
    {"NumberValidateResponse": ClientPhoneNumberValidateResponseNumberValidateResponseTypeDef},
    total=False,
)

ClientPutEventStreamResponseEventStreamTypeDef = TypedDict(
    "ClientPutEventStreamResponseEventStreamTypeDef",
    {
        "ApplicationId": str,
        "DestinationStreamArn": str,
        "ExternalId": str,
        "LastModifiedDate": str,
        "LastUpdatedBy": str,
        "RoleArn": str,
    },
    total=False,
)

ClientPutEventStreamResponseTypeDef = TypedDict(
    "ClientPutEventStreamResponseTypeDef",
    {"EventStream": ClientPutEventStreamResponseEventStreamTypeDef},
    total=False,
)

_RequiredClientPutEventStreamWriteEventStreamTypeDef = TypedDict(
    "_RequiredClientPutEventStreamWriteEventStreamTypeDef", {"DestinationStreamArn": str}
)
_OptionalClientPutEventStreamWriteEventStreamTypeDef = TypedDict(
    "_OptionalClientPutEventStreamWriteEventStreamTypeDef", {"RoleArn": str}, total=False
)


class ClientPutEventStreamWriteEventStreamTypeDef(
    _RequiredClientPutEventStreamWriteEventStreamTypeDef,
    _OptionalClientPutEventStreamWriteEventStreamTypeDef,
):
    pass


ClientPutEventsEventsRequestBatchItemEndpointDemographicTypeDef = TypedDict(
    "ClientPutEventsEventsRequestBatchItemEndpointDemographicTypeDef",
    {
        "AppVersion": str,
        "Locale": str,
        "Make": str,
        "Model": str,
        "ModelVersion": str,
        "Platform": str,
        "PlatformVersion": str,
        "Timezone": str,
    },
    total=False,
)

ClientPutEventsEventsRequestBatchItemEndpointLocationTypeDef = TypedDict(
    "ClientPutEventsEventsRequestBatchItemEndpointLocationTypeDef",
    {
        "City": str,
        "Country": str,
        "Latitude": float,
        "Longitude": float,
        "PostalCode": str,
        "Region": str,
    },
    total=False,
)

ClientPutEventsEventsRequestBatchItemEndpointUserTypeDef = TypedDict(
    "ClientPutEventsEventsRequestBatchItemEndpointUserTypeDef",
    {"UserAttributes": Dict[str, List[str]], "UserId": str},
    total=False,
)

ClientPutEventsEventsRequestBatchItemEndpointTypeDef = TypedDict(
    "ClientPutEventsEventsRequestBatchItemEndpointTypeDef",
    {
        "Address": str,
        "Attributes": Dict[str, List[str]],
        "ChannelType": Literal[
            "GCM",
            "APNS",
            "APNS_SANDBOX",
            "APNS_VOIP",
            "APNS_VOIP_SANDBOX",
            "ADM",
            "SMS",
            "VOICE",
            "EMAIL",
            "BAIDU",
            "CUSTOM",
        ],
        "Demographic": ClientPutEventsEventsRequestBatchItemEndpointDemographicTypeDef,
        "EffectiveDate": str,
        "EndpointStatus": str,
        "Location": ClientPutEventsEventsRequestBatchItemEndpointLocationTypeDef,
        "Metrics": Dict[str, float],
        "OptOut": str,
        "RequestId": str,
        "User": ClientPutEventsEventsRequestBatchItemEndpointUserTypeDef,
    },
    total=False,
)

ClientPutEventsEventsRequestBatchItemEventsSessionTypeDef = TypedDict(
    "ClientPutEventsEventsRequestBatchItemEventsSessionTypeDef",
    {"Duration": int, "Id": str, "StartTimestamp": str, "StopTimestamp": str},
    total=False,
)

ClientPutEventsEventsRequestBatchItemEventsTypeDef = TypedDict(
    "ClientPutEventsEventsRequestBatchItemEventsTypeDef",
    {
        "AppPackageName": str,
        "AppTitle": str,
        "AppVersionCode": str,
        "Attributes": Dict[str, str],
        "ClientSdkVersion": str,
        "EventType": str,
        "Metrics": Dict[str, float],
        "SdkName": str,
        "Session": ClientPutEventsEventsRequestBatchItemEventsSessionTypeDef,
        "Timestamp": str,
    },
    total=False,
)

ClientPutEventsEventsRequestBatchItemTypeDef = TypedDict(
    "ClientPutEventsEventsRequestBatchItemTypeDef",
    {
        "Endpoint": ClientPutEventsEventsRequestBatchItemEndpointTypeDef,
        "Events": Dict[str, ClientPutEventsEventsRequestBatchItemEventsTypeDef],
    },
    total=False,
)

ClientPutEventsEventsRequestTypeDef = TypedDict(
    "ClientPutEventsEventsRequestTypeDef",
    {"BatchItem": Dict[str, ClientPutEventsEventsRequestBatchItemTypeDef]},
)

ClientPutEventsResponseEventsResponseResultsEndpointItemResponseTypeDef = TypedDict(
    "ClientPutEventsResponseEventsResponseResultsEndpointItemResponseTypeDef",
    {"Message": str, "StatusCode": int},
    total=False,
)

ClientPutEventsResponseEventsResponseResultsEventsItemResponseTypeDef = TypedDict(
    "ClientPutEventsResponseEventsResponseResultsEventsItemResponseTypeDef",
    {"Message": str, "StatusCode": int},
    total=False,
)

ClientPutEventsResponseEventsResponseResultsTypeDef = TypedDict(
    "ClientPutEventsResponseEventsResponseResultsTypeDef",
    {
        "EndpointItemResponse": ClientPutEventsResponseEventsResponseResultsEndpointItemResponseTypeDef,
        "EventsItemResponse": Dict[
            str, ClientPutEventsResponseEventsResponseResultsEventsItemResponseTypeDef
        ],
    },
    total=False,
)

ClientPutEventsResponseEventsResponseTypeDef = TypedDict(
    "ClientPutEventsResponseEventsResponseTypeDef",
    {"Results": Dict[str, ClientPutEventsResponseEventsResponseResultsTypeDef]},
    total=False,
)

ClientPutEventsResponseTypeDef = TypedDict(
    "ClientPutEventsResponseTypeDef",
    {"EventsResponse": ClientPutEventsResponseEventsResponseTypeDef},
    total=False,
)

ClientRemoveAttributesResponseAttributesResourceTypeDef = TypedDict(
    "ClientRemoveAttributesResponseAttributesResourceTypeDef",
    {"ApplicationId": str, "AttributeType": str, "Attributes": List[str]},
    total=False,
)

ClientRemoveAttributesResponseTypeDef = TypedDict(
    "ClientRemoveAttributesResponseTypeDef",
    {"AttributesResource": ClientRemoveAttributesResponseAttributesResourceTypeDef},
    total=False,
)

ClientRemoveAttributesUpdateAttributesRequestTypeDef = TypedDict(
    "ClientRemoveAttributesUpdateAttributesRequestTypeDef", {"Blacklist": List[str]}, total=False
)

ClientSendMessagesMessageRequestAddressesTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestAddressesTypeDef",
    {
        "BodyOverride": str,
        "ChannelType": Literal[
            "GCM",
            "APNS",
            "APNS_SANDBOX",
            "APNS_VOIP",
            "APNS_VOIP_SANDBOX",
            "ADM",
            "SMS",
            "VOICE",
            "EMAIL",
            "BAIDU",
            "CUSTOM",
        ],
        "Context": Dict[str, str],
        "RawContent": str,
        "Substitutions": Dict[str, List[str]],
        "TitleOverride": str,
    },
    total=False,
)

ClientSendMessagesMessageRequestEndpointsTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestEndpointsTypeDef",
    {
        "BodyOverride": str,
        "Context": Dict[str, str],
        "RawContent": str,
        "Substitutions": Dict[str, List[str]],
        "TitleOverride": str,
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ConsolidationKey": str,
        "Data": Dict[str, str],
        "ExpiresAfter": str,
        "IconReference": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "MD5": str,
        "RawContent": str,
        "SilentPush": bool,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Substitutions": Dict[str, List[str]],
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationAPNSMessageTypeDef",
    {
        "APNSPushType": str,
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Badge": int,
        "Body": str,
        "Category": str,
        "CollapseId": str,
        "Data": Dict[str, str],
        "MediaUrl": str,
        "PreferredAuthenticationMethod": str,
        "Priority": str,
        "RawContent": str,
        "SilentPush": bool,
        "Sound": str,
        "Substitutions": Dict[str, List[str]],
        "ThreadId": str,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "Data": Dict[str, str],
        "IconReference": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Substitutions": Dict[str, List[str]],
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationDefaultMessageTypeDef",
    {"Body": str, "Substitutions": Dict[str, List[str]]},
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationDefaultPushNotificationMessageTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationDefaultPushNotificationMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "Data": Dict[str, str],
        "SilentPush": bool,
        "Substitutions": Dict[str, List[str]],
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationEmailMessageRawEmailTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageRawEmailTypeDef",
    {"Data": bytes},
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailHtmlPartTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailHtmlPartTypeDef",
    {"Charset": str, "Data": str},
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailSubjectTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailSubjectTypeDef",
    {"Charset": str, "Data": str},
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailTextPartTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailTextPartTypeDef",
    {"Charset": str, "Data": str},
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailTypeDef",
    {
        "HtmlPart": ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailHtmlPartTypeDef,
        "Subject": ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailSubjectTypeDef,
        "TextPart": ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailTextPartTypeDef,
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationEmailMessageTypeDef",
    {
        "Body": str,
        "FeedbackForwardingAddress": str,
        "FromAddress": str,
        "RawEmail": ClientSendMessagesMessageRequestMessageConfigurationEmailMessageRawEmailTypeDef,
        "ReplyToAddresses": List[str],
        "SimpleEmail": ClientSendMessagesMessageRequestMessageConfigurationEmailMessageSimpleEmailTypeDef,
        "Substitutions": Dict[str, List[str]],
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "CollapseKey": str,
        "Data": Dict[str, str],
        "IconReference": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "Priority": str,
        "RawContent": str,
        "RestrictedPackageName": str,
        "SilentPush": bool,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Substitutions": Dict[str, List[str]],
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationSMSMessageTypeDef",
    {
        "Body": str,
        "Keyword": str,
        "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"],
        "OriginationNumber": str,
        "SenderId": str,
        "Substitutions": Dict[str, List[str]],
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationVoiceMessageTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationVoiceMessageTypeDef",
    {
        "Body": str,
        "LanguageCode": str,
        "OriginationNumber": str,
        "Substitutions": Dict[str, List[str]],
        "VoiceId": str,
    },
    total=False,
)

ClientSendMessagesMessageRequestMessageConfigurationTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientSendMessagesMessageRequestMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientSendMessagesMessageRequestMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientSendMessagesMessageRequestMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientSendMessagesMessageRequestMessageConfigurationDefaultMessageTypeDef,
        "DefaultPushNotificationMessage": ClientSendMessagesMessageRequestMessageConfigurationDefaultPushNotificationMessageTypeDef,
        "EmailMessage": ClientSendMessagesMessageRequestMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientSendMessagesMessageRequestMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientSendMessagesMessageRequestMessageConfigurationSMSMessageTypeDef,
        "VoiceMessage": ClientSendMessagesMessageRequestMessageConfigurationVoiceMessageTypeDef,
    },
    total=False,
)

ClientSendMessagesMessageRequestTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientSendMessagesMessageRequestTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientSendMessagesMessageRequestTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientSendMessagesMessageRequestTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientSendMessagesMessageRequestTemplateConfigurationTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientSendMessagesMessageRequestTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientSendMessagesMessageRequestTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientSendMessagesMessageRequestTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientSendMessagesMessageRequestTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientSendMessagesMessageRequestTypeDef = TypedDict(
    "ClientSendMessagesMessageRequestTypeDef",
    {
        "Addresses": Dict[str, ClientSendMessagesMessageRequestAddressesTypeDef],
        "Context": Dict[str, str],
        "Endpoints": Dict[str, ClientSendMessagesMessageRequestEndpointsTypeDef],
        "MessageConfiguration": ClientSendMessagesMessageRequestMessageConfigurationTypeDef,
        "TemplateConfiguration": ClientSendMessagesMessageRequestTemplateConfigurationTypeDef,
        "TraceId": str,
    },
    total=False,
)

ClientSendMessagesResponseMessageResponseEndpointResultTypeDef = TypedDict(
    "ClientSendMessagesResponseMessageResponseEndpointResultTypeDef",
    {
        "Address": str,
        "DeliveryStatus": Literal[
            "SUCCESSFUL",
            "THROTTLED",
            "TEMPORARY_FAILURE",
            "PERMANENT_FAILURE",
            "UNKNOWN_FAILURE",
            "OPT_OUT",
            "DUPLICATE",
        ],
        "MessageId": str,
        "StatusCode": int,
        "StatusMessage": str,
        "UpdatedToken": str,
    },
    total=False,
)

ClientSendMessagesResponseMessageResponseResultTypeDef = TypedDict(
    "ClientSendMessagesResponseMessageResponseResultTypeDef",
    {
        "DeliveryStatus": Literal[
            "SUCCESSFUL",
            "THROTTLED",
            "TEMPORARY_FAILURE",
            "PERMANENT_FAILURE",
            "UNKNOWN_FAILURE",
            "OPT_OUT",
            "DUPLICATE",
        ],
        "MessageId": str,
        "StatusCode": int,
        "StatusMessage": str,
        "UpdatedToken": str,
    },
    total=False,
)

ClientSendMessagesResponseMessageResponseTypeDef = TypedDict(
    "ClientSendMessagesResponseMessageResponseTypeDef",
    {
        "ApplicationId": str,
        "EndpointResult": Dict[str, ClientSendMessagesResponseMessageResponseEndpointResultTypeDef],
        "RequestId": str,
        "Result": Dict[str, ClientSendMessagesResponseMessageResponseResultTypeDef],
    },
    total=False,
)

ClientSendMessagesResponseTypeDef = TypedDict(
    "ClientSendMessagesResponseTypeDef",
    {"MessageResponse": ClientSendMessagesResponseMessageResponseTypeDef},
    total=False,
)

ClientSendUsersMessagesResponseSendUsersMessageResponseResultTypeDef = TypedDict(
    "ClientSendUsersMessagesResponseSendUsersMessageResponseResultTypeDef",
    {
        "Address": str,
        "DeliveryStatus": Literal[
            "SUCCESSFUL",
            "THROTTLED",
            "TEMPORARY_FAILURE",
            "PERMANENT_FAILURE",
            "UNKNOWN_FAILURE",
            "OPT_OUT",
            "DUPLICATE",
        ],
        "MessageId": str,
        "StatusCode": int,
        "StatusMessage": str,
        "UpdatedToken": str,
    },
    total=False,
)

ClientSendUsersMessagesResponseSendUsersMessageResponseTypeDef = TypedDict(
    "ClientSendUsersMessagesResponseSendUsersMessageResponseTypeDef",
    {
        "ApplicationId": str,
        "RequestId": str,
        "Result": Dict[
            str, Dict[str, ClientSendUsersMessagesResponseSendUsersMessageResponseResultTypeDef]
        ],
    },
    total=False,
)

ClientSendUsersMessagesResponseTypeDef = TypedDict(
    "ClientSendUsersMessagesResponseTypeDef",
    {"SendUsersMessageResponse": ClientSendUsersMessagesResponseSendUsersMessageResponseTypeDef},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ConsolidationKey": str,
        "Data": Dict[str, str],
        "ExpiresAfter": str,
        "IconReference": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "MD5": str,
        "RawContent": str,
        "SilentPush": bool,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Substitutions": Dict[str, List[str]],
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationAPNSMessageTypeDef",
    {
        "APNSPushType": str,
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Badge": int,
        "Body": str,
        "Category": str,
        "CollapseId": str,
        "Data": Dict[str, str],
        "MediaUrl": str,
        "PreferredAuthenticationMethod": str,
        "Priority": str,
        "RawContent": str,
        "SilentPush": bool,
        "Sound": str,
        "Substitutions": Dict[str, List[str]],
        "ThreadId": str,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "Data": Dict[str, str],
        "IconReference": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Substitutions": Dict[str, List[str]],
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationDefaultMessageTypeDef",
    {"Body": str, "Substitutions": Dict[str, List[str]]},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationDefaultPushNotificationMessageTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationDefaultPushNotificationMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "Data": Dict[str, str],
        "SilentPush": bool,
        "Substitutions": Dict[str, List[str]],
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageRawEmailTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageRawEmailTypeDef",
    {"Data": bytes},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailHtmlPartTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailHtmlPartTypeDef",
    {"Charset": str, "Data": str},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailSubjectTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailSubjectTypeDef",
    {"Charset": str, "Data": str},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailTextPartTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailTextPartTypeDef",
    {"Charset": str, "Data": str},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailTypeDef",
    {
        "HtmlPart": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailHtmlPartTypeDef,
        "Subject": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailSubjectTypeDef,
        "TextPart": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailTextPartTypeDef,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageTypeDef",
    {
        "Body": str,
        "FeedbackForwardingAddress": str,
        "FromAddress": str,
        "RawEmail": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageRawEmailTypeDef,
        "ReplyToAddresses": List[str],
        "SimpleEmail": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageSimpleEmailTypeDef,
        "Substitutions": Dict[str, List[str]],
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "CollapseKey": str,
        "Data": Dict[str, str],
        "IconReference": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "Priority": str,
        "RawContent": str,
        "RestrictedPackageName": str,
        "SilentPush": bool,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Substitutions": Dict[str, List[str]],
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationSMSMessageTypeDef",
    {
        "Body": str,
        "Keyword": str,
        "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"],
        "OriginationNumber": str,
        "SenderId": str,
        "Substitutions": Dict[str, List[str]],
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationVoiceMessageTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationVoiceMessageTypeDef",
    {
        "Body": str,
        "LanguageCode": str,
        "OriginationNumber": str,
        "Substitutions": Dict[str, List[str]],
        "VoiceId": str,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationDefaultMessageTypeDef,
        "DefaultPushNotificationMessage": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationDefaultPushNotificationMessageTypeDef,
        "EmailMessage": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationSMSMessageTypeDef,
        "VoiceMessage": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationVoiceMessageTypeDef,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestUsersTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestUsersTypeDef",
    {
        "BodyOverride": str,
        "Context": Dict[str, str],
        "RawContent": str,
        "Substitutions": Dict[str, List[str]],
        "TitleOverride": str,
    },
    total=False,
)

ClientSendUsersMessagesSendUsersMessageRequestTypeDef = TypedDict(
    "ClientSendUsersMessagesSendUsersMessageRequestTypeDef",
    {
        "Context": Dict[str, str],
        "MessageConfiguration": ClientSendUsersMessagesSendUsersMessageRequestMessageConfigurationTypeDef,
        "TemplateConfiguration": ClientSendUsersMessagesSendUsersMessageRequestTemplateConfigurationTypeDef,
        "TraceId": str,
        "Users": Dict[str, ClientSendUsersMessagesSendUsersMessageRequestUsersTypeDef],
    },
    total=False,
)

ClientTagResourceTagsModelTypeDef = TypedDict(
    "ClientTagResourceTagsModelTypeDef", {"tags": Dict[str, str]}
)

_RequiredClientUpdateAdmChannelADMChannelRequestTypeDef = TypedDict(
    "_RequiredClientUpdateAdmChannelADMChannelRequestTypeDef", {"ClientId": str}
)
_OptionalClientUpdateAdmChannelADMChannelRequestTypeDef = TypedDict(
    "_OptionalClientUpdateAdmChannelADMChannelRequestTypeDef",
    {"ClientSecret": str, "Enabled": bool},
    total=False,
)


class ClientUpdateAdmChannelADMChannelRequestTypeDef(
    _RequiredClientUpdateAdmChannelADMChannelRequestTypeDef,
    _OptionalClientUpdateAdmChannelADMChannelRequestTypeDef,
):
    pass


ClientUpdateAdmChannelResponseADMChannelResponseTypeDef = TypedDict(
    "ClientUpdateAdmChannelResponseADMChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateAdmChannelResponseTypeDef = TypedDict(
    "ClientUpdateAdmChannelResponseTypeDef",
    {"ADMChannelResponse": ClientUpdateAdmChannelResponseADMChannelResponseTypeDef},
    total=False,
)

ClientUpdateApnsChannelAPNSChannelRequestTypeDef = TypedDict(
    "ClientUpdateApnsChannelAPNSChannelRequestTypeDef",
    {
        "BundleId": str,
        "Certificate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "PrivateKey": str,
        "TeamId": str,
        "TokenKey": str,
        "TokenKeyId": str,
    },
    total=False,
)

ClientUpdateApnsChannelResponseAPNSChannelResponseTypeDef = TypedDict(
    "ClientUpdateApnsChannelResponseAPNSChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateApnsChannelResponseTypeDef = TypedDict(
    "ClientUpdateApnsChannelResponseTypeDef",
    {"APNSChannelResponse": ClientUpdateApnsChannelResponseAPNSChannelResponseTypeDef},
    total=False,
)

ClientUpdateApnsSandboxChannelAPNSSandboxChannelRequestTypeDef = TypedDict(
    "ClientUpdateApnsSandboxChannelAPNSSandboxChannelRequestTypeDef",
    {
        "BundleId": str,
        "Certificate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "PrivateKey": str,
        "TeamId": str,
        "TokenKey": str,
        "TokenKeyId": str,
    },
    total=False,
)

ClientUpdateApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef = TypedDict(
    "ClientUpdateApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateApnsSandboxChannelResponseTypeDef = TypedDict(
    "ClientUpdateApnsSandboxChannelResponseTypeDef",
    {
        "APNSSandboxChannelResponse": ClientUpdateApnsSandboxChannelResponseAPNSSandboxChannelResponseTypeDef
    },
    total=False,
)

ClientUpdateApnsVoipChannelAPNSVoipChannelRequestTypeDef = TypedDict(
    "ClientUpdateApnsVoipChannelAPNSVoipChannelRequestTypeDef",
    {
        "BundleId": str,
        "Certificate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "PrivateKey": str,
        "TeamId": str,
        "TokenKey": str,
        "TokenKeyId": str,
    },
    total=False,
)

ClientUpdateApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef = TypedDict(
    "ClientUpdateApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateApnsVoipChannelResponseTypeDef = TypedDict(
    "ClientUpdateApnsVoipChannelResponseTypeDef",
    {"APNSVoipChannelResponse": ClientUpdateApnsVoipChannelResponseAPNSVoipChannelResponseTypeDef},
    total=False,
)

ClientUpdateApnsVoipSandboxChannelAPNSVoipSandboxChannelRequestTypeDef = TypedDict(
    "ClientUpdateApnsVoipSandboxChannelAPNSVoipSandboxChannelRequestTypeDef",
    {
        "BundleId": str,
        "Certificate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "PrivateKey": str,
        "TeamId": str,
        "TokenKey": str,
        "TokenKeyId": str,
    },
    total=False,
)

ClientUpdateApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef = TypedDict(
    "ClientUpdateApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "DefaultAuthenticationMethod": str,
        "Enabled": bool,
        "HasCredential": bool,
        "HasTokenKey": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateApnsVoipSandboxChannelResponseTypeDef = TypedDict(
    "ClientUpdateApnsVoipSandboxChannelResponseTypeDef",
    {
        "APNSVoipSandboxChannelResponse": ClientUpdateApnsVoipSandboxChannelResponseAPNSVoipSandboxChannelResponseTypeDef
    },
    total=False,
)

ClientUpdateApplicationSettingsResponseApplicationSettingsResourceCampaignHookTypeDef = TypedDict(
    "ClientUpdateApplicationSettingsResponseApplicationSettingsResourceCampaignHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientUpdateApplicationSettingsResponseApplicationSettingsResourceLimitsTypeDef = TypedDict(
    "ClientUpdateApplicationSettingsResponseApplicationSettingsResourceLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientUpdateApplicationSettingsResponseApplicationSettingsResourceQuietTimeTypeDef = TypedDict(
    "ClientUpdateApplicationSettingsResponseApplicationSettingsResourceQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientUpdateApplicationSettingsResponseApplicationSettingsResourceTypeDef = TypedDict(
    "ClientUpdateApplicationSettingsResponseApplicationSettingsResourceTypeDef",
    {
        "ApplicationId": str,
        "CampaignHook": ClientUpdateApplicationSettingsResponseApplicationSettingsResourceCampaignHookTypeDef,
        "LastModifiedDate": str,
        "Limits": ClientUpdateApplicationSettingsResponseApplicationSettingsResourceLimitsTypeDef,
        "QuietTime": ClientUpdateApplicationSettingsResponseApplicationSettingsResourceQuietTimeTypeDef,
    },
    total=False,
)

ClientUpdateApplicationSettingsResponseTypeDef = TypedDict(
    "ClientUpdateApplicationSettingsResponseTypeDef",
    {
        "ApplicationSettingsResource": ClientUpdateApplicationSettingsResponseApplicationSettingsResourceTypeDef
    },
    total=False,
)

ClientUpdateApplicationSettingsWriteApplicationSettingsRequestCampaignHookTypeDef = TypedDict(
    "ClientUpdateApplicationSettingsWriteApplicationSettingsRequestCampaignHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientUpdateApplicationSettingsWriteApplicationSettingsRequestLimitsTypeDef = TypedDict(
    "ClientUpdateApplicationSettingsWriteApplicationSettingsRequestLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientUpdateApplicationSettingsWriteApplicationSettingsRequestQuietTimeTypeDef = TypedDict(
    "ClientUpdateApplicationSettingsWriteApplicationSettingsRequestQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientUpdateApplicationSettingsWriteApplicationSettingsRequestTypeDef = TypedDict(
    "ClientUpdateApplicationSettingsWriteApplicationSettingsRequestTypeDef",
    {
        "CampaignHook": ClientUpdateApplicationSettingsWriteApplicationSettingsRequestCampaignHookTypeDef,
        "CloudWatchMetricsEnabled": bool,
        "Limits": ClientUpdateApplicationSettingsWriteApplicationSettingsRequestLimitsTypeDef,
        "QuietTime": ClientUpdateApplicationSettingsWriteApplicationSettingsRequestQuietTimeTypeDef,
    },
    total=False,
)

_RequiredClientUpdateBaiduChannelBaiduChannelRequestTypeDef = TypedDict(
    "_RequiredClientUpdateBaiduChannelBaiduChannelRequestTypeDef", {"ApiKey": str}
)
_OptionalClientUpdateBaiduChannelBaiduChannelRequestTypeDef = TypedDict(
    "_OptionalClientUpdateBaiduChannelBaiduChannelRequestTypeDef",
    {"Enabled": bool, "SecretKey": str},
    total=False,
)


class ClientUpdateBaiduChannelBaiduChannelRequestTypeDef(
    _RequiredClientUpdateBaiduChannelBaiduChannelRequestTypeDef,
    _OptionalClientUpdateBaiduChannelBaiduChannelRequestTypeDef,
):
    pass


ClientUpdateBaiduChannelResponseBaiduChannelResponseTypeDef = TypedDict(
    "ClientUpdateBaiduChannelResponseBaiduChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Credential": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateBaiduChannelResponseTypeDef = TypedDict(
    "ClientUpdateBaiduChannelResponseTypeDef",
    {"BaiduChannelResponse": ClientUpdateBaiduChannelResponseBaiduChannelResponseTypeDef},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef",
    {
        "Id": str,
        "MessageConfiguration": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsMessageConfigurationTypeDef,
        "Schedule": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsScheduleTypeDef,
        "SizePercent": int,
        "State": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsStateTypeDef,
        "TemplateConfiguration": ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseDefaultStateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseDefaultStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseHookTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseLimitsTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseMessageConfigurationTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientUpdateCampaignResponseCampaignResponseMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientUpdateCampaignResponseCampaignResponseMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientUpdateCampaignResponseCampaignResponseMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientUpdateCampaignResponseCampaignResponseMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientUpdateCampaignResponseCampaignResponseMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientUpdateCampaignResponseCampaignResponseMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientUpdateCampaignResponseCampaignResponseMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseScheduleQuietTimeTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseScheduleTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientUpdateCampaignResponseCampaignResponseScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientUpdateCampaignResponseCampaignResponseScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseStateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseStateTypeDef",
    {
        "CampaignStatus": Literal[
            "SCHEDULED", "EXECUTING", "PENDING_NEXT_RUN", "COMPLETED", "PAUSED", "DELETED"
        ]
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientUpdateCampaignResponseCampaignResponseTypeDef = TypedDict(
    "ClientUpdateCampaignResponseCampaignResponseTypeDef",
    {
        "AdditionalTreatments": List[
            ClientUpdateCampaignResponseCampaignResponseAdditionalTreatmentsTypeDef
        ],
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "DefaultState": ClientUpdateCampaignResponseCampaignResponseDefaultStateTypeDef,
        "Description": str,
        "HoldoutPercent": int,
        "Hook": ClientUpdateCampaignResponseCampaignResponseHookTypeDef,
        "Id": str,
        "IsPaused": bool,
        "LastModifiedDate": str,
        "Limits": ClientUpdateCampaignResponseCampaignResponseLimitsTypeDef,
        "MessageConfiguration": ClientUpdateCampaignResponseCampaignResponseMessageConfigurationTypeDef,
        "Name": str,
        "Schedule": ClientUpdateCampaignResponseCampaignResponseScheduleTypeDef,
        "SegmentId": str,
        "SegmentVersion": int,
        "State": ClientUpdateCampaignResponseCampaignResponseStateTypeDef,
        "tags": Dict[str, str],
        "TemplateConfiguration": ClientUpdateCampaignResponseCampaignResponseTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateCampaignResponseTypeDef = TypedDict(
    "ClientUpdateCampaignResponseTypeDef",
    {"CampaignResponse": ClientUpdateCampaignResponseCampaignResponseTypeDef},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleQuietTimeTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTypeDef",
    {
        "MessageConfiguration": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsMessageConfigurationTypeDef,
        "Schedule": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsScheduleTypeDef,
        "SizePercent": int,
        "TemplateConfiguration": ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestHookTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestHookTypeDef",
    {"LambdaFunctionName": str, "Mode": Literal["DELIVERY", "FILTER"], "WebUrl": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestLimitsTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestLimitsTypeDef",
    {"Daily": int, "MaximumDuration": int, "MessagesPerSecond": int, "Total": int},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestMessageConfigurationADMMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationADMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestMessageConfigurationAPNSMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationAPNSMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestMessageConfigurationBaiduMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationBaiduMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestMessageConfigurationDefaultMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationDefaultMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestMessageConfigurationEmailMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationEmailMessageTypeDef",
    {"Body": str, "FromAddress": str, "HtmlBody": str, "Title": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestMessageConfigurationGCMMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationGCMMessageTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageSmallIconUrl": str,
        "ImageUrl": str,
        "JsonBody": str,
        "MediaUrl": str,
        "RawContent": str,
        "SilentPush": bool,
        "TimeToLive": int,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestMessageConfigurationSMSMessageTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationSMSMessageTypeDef",
    {"Body": str, "MessageType": Literal["TRANSACTIONAL", "PROMOTIONAL"], "SenderId": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestMessageConfigurationTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestMessageConfigurationTypeDef",
    {
        "ADMMessage": ClientUpdateCampaignWriteCampaignRequestMessageConfigurationADMMessageTypeDef,
        "APNSMessage": ClientUpdateCampaignWriteCampaignRequestMessageConfigurationAPNSMessageTypeDef,
        "BaiduMessage": ClientUpdateCampaignWriteCampaignRequestMessageConfigurationBaiduMessageTypeDef,
        "DefaultMessage": ClientUpdateCampaignWriteCampaignRequestMessageConfigurationDefaultMessageTypeDef,
        "EmailMessage": ClientUpdateCampaignWriteCampaignRequestMessageConfigurationEmailMessageTypeDef,
        "GCMMessage": ClientUpdateCampaignWriteCampaignRequestMessageConfigurationGCMMessageTypeDef,
        "SMSMessage": ClientUpdateCampaignWriteCampaignRequestMessageConfigurationSMSMessageTypeDef,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str, ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsMetricsTypeDef
        ],
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterTypeDef",
    {
        "Dimensions": ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterDimensionsTypeDef,
        "FilterType": Literal["SYSTEM", "ENDPOINT"],
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestScheduleQuietTimeTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestScheduleQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestScheduleTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestScheduleTypeDef",
    {
        "EndTime": str,
        "EventFilter": ClientUpdateCampaignWriteCampaignRequestScheduleEventFilterTypeDef,
        "Frequency": Literal["ONCE", "HOURLY", "DAILY", "WEEKLY", "MONTHLY", "EVENT"],
        "IsLocalTime": bool,
        "QuietTime": ClientUpdateCampaignWriteCampaignRequestScheduleQuietTimeTypeDef,
        "StartTime": str,
        "Timezone": str,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationEmailTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationEmailTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationPushTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationPushTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationSMSTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationSMSTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationVoiceTemplateTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationVoiceTemplateTypeDef",
    {"Name": str, "Version": str},
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationTypeDef",
    {
        "EmailTemplate": ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationEmailTemplateTypeDef,
        "PushTemplate": ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationPushTemplateTypeDef,
        "SMSTemplate": ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationSMSTemplateTypeDef,
        "VoiceTemplate": ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationVoiceTemplateTypeDef,
    },
    total=False,
)

ClientUpdateCampaignWriteCampaignRequestTypeDef = TypedDict(
    "ClientUpdateCampaignWriteCampaignRequestTypeDef",
    {
        "AdditionalTreatments": List[
            ClientUpdateCampaignWriteCampaignRequestAdditionalTreatmentsTypeDef
        ],
        "Description": str,
        "HoldoutPercent": int,
        "Hook": ClientUpdateCampaignWriteCampaignRequestHookTypeDef,
        "IsPaused": bool,
        "Limits": ClientUpdateCampaignWriteCampaignRequestLimitsTypeDef,
        "MessageConfiguration": ClientUpdateCampaignWriteCampaignRequestMessageConfigurationTypeDef,
        "Name": str,
        "Schedule": ClientUpdateCampaignWriteCampaignRequestScheduleTypeDef,
        "SegmentId": str,
        "SegmentVersion": int,
        "tags": Dict[str, str],
        "TemplateConfiguration": ClientUpdateCampaignWriteCampaignRequestTemplateConfigurationTypeDef,
        "TreatmentDescription": str,
        "TreatmentName": str,
    },
    total=False,
)

ClientUpdateEmailChannelEmailChannelRequestTypeDef = TypedDict(
    "ClientUpdateEmailChannelEmailChannelRequestTypeDef",
    {"ConfigurationSet": str, "Enabled": bool, "FromAddress": str, "Identity": str, "RoleArn": str},
    total=False,
)

ClientUpdateEmailChannelResponseEmailChannelResponseTypeDef = TypedDict(
    "ClientUpdateEmailChannelResponseEmailChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "ConfigurationSet": str,
        "CreationDate": str,
        "Enabled": bool,
        "FromAddress": str,
        "HasCredential": bool,
        "Id": str,
        "Identity": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "MessagesPerSecond": int,
        "Platform": str,
        "RoleArn": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateEmailChannelResponseTypeDef = TypedDict(
    "ClientUpdateEmailChannelResponseTypeDef",
    {"EmailChannelResponse": ClientUpdateEmailChannelResponseEmailChannelResponseTypeDef},
    total=False,
)

ClientUpdateEmailTemplateEmailTemplateRequestTypeDef = TypedDict(
    "ClientUpdateEmailTemplateEmailTemplateRequestTypeDef",
    {
        "DefaultSubstitutions": str,
        "HtmlPart": str,
        "Subject": str,
        "tags": Dict[str, str],
        "TemplateDescription": str,
        "TextPart": str,
    },
    total=False,
)

ClientUpdateEmailTemplateResponseMessageBodyTypeDef = TypedDict(
    "ClientUpdateEmailTemplateResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientUpdateEmailTemplateResponseTypeDef = TypedDict(
    "ClientUpdateEmailTemplateResponseTypeDef",
    {"MessageBody": ClientUpdateEmailTemplateResponseMessageBodyTypeDef},
    total=False,
)

ClientUpdateEndpointEndpointRequestDemographicTypeDef = TypedDict(
    "ClientUpdateEndpointEndpointRequestDemographicTypeDef",
    {
        "AppVersion": str,
        "Locale": str,
        "Make": str,
        "Model": str,
        "ModelVersion": str,
        "Platform": str,
        "PlatformVersion": str,
        "Timezone": str,
    },
    total=False,
)

ClientUpdateEndpointEndpointRequestLocationTypeDef = TypedDict(
    "ClientUpdateEndpointEndpointRequestLocationTypeDef",
    {
        "City": str,
        "Country": str,
        "Latitude": float,
        "Longitude": float,
        "PostalCode": str,
        "Region": str,
    },
    total=False,
)

ClientUpdateEndpointEndpointRequestUserTypeDef = TypedDict(
    "ClientUpdateEndpointEndpointRequestUserTypeDef",
    {"UserAttributes": Dict[str, List[str]], "UserId": str},
    total=False,
)

ClientUpdateEndpointEndpointRequestTypeDef = TypedDict(
    "ClientUpdateEndpointEndpointRequestTypeDef",
    {
        "Address": str,
        "Attributes": Dict[str, List[str]],
        "ChannelType": Literal[
            "GCM",
            "APNS",
            "APNS_SANDBOX",
            "APNS_VOIP",
            "APNS_VOIP_SANDBOX",
            "ADM",
            "SMS",
            "VOICE",
            "EMAIL",
            "BAIDU",
            "CUSTOM",
        ],
        "Demographic": ClientUpdateEndpointEndpointRequestDemographicTypeDef,
        "EffectiveDate": str,
        "EndpointStatus": str,
        "Location": ClientUpdateEndpointEndpointRequestLocationTypeDef,
        "Metrics": Dict[str, float],
        "OptOut": str,
        "RequestId": str,
        "User": ClientUpdateEndpointEndpointRequestUserTypeDef,
    },
    total=False,
)

ClientUpdateEndpointResponseMessageBodyTypeDef = TypedDict(
    "ClientUpdateEndpointResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientUpdateEndpointResponseTypeDef = TypedDict(
    "ClientUpdateEndpointResponseTypeDef",
    {"MessageBody": ClientUpdateEndpointResponseMessageBodyTypeDef},
    total=False,
)

ClientUpdateEndpointsBatchEndpointBatchRequestItemDemographicTypeDef = TypedDict(
    "ClientUpdateEndpointsBatchEndpointBatchRequestItemDemographicTypeDef",
    {
        "AppVersion": str,
        "Locale": str,
        "Make": str,
        "Model": str,
        "ModelVersion": str,
        "Platform": str,
        "PlatformVersion": str,
        "Timezone": str,
    },
    total=False,
)

ClientUpdateEndpointsBatchEndpointBatchRequestItemLocationTypeDef = TypedDict(
    "ClientUpdateEndpointsBatchEndpointBatchRequestItemLocationTypeDef",
    {
        "City": str,
        "Country": str,
        "Latitude": float,
        "Longitude": float,
        "PostalCode": str,
        "Region": str,
    },
    total=False,
)

ClientUpdateEndpointsBatchEndpointBatchRequestItemUserTypeDef = TypedDict(
    "ClientUpdateEndpointsBatchEndpointBatchRequestItemUserTypeDef",
    {"UserAttributes": Dict[str, List[str]], "UserId": str},
    total=False,
)

ClientUpdateEndpointsBatchEndpointBatchRequestItemTypeDef = TypedDict(
    "ClientUpdateEndpointsBatchEndpointBatchRequestItemTypeDef",
    {
        "Address": str,
        "Attributes": Dict[str, List[str]],
        "ChannelType": Literal[
            "GCM",
            "APNS",
            "APNS_SANDBOX",
            "APNS_VOIP",
            "APNS_VOIP_SANDBOX",
            "ADM",
            "SMS",
            "VOICE",
            "EMAIL",
            "BAIDU",
            "CUSTOM",
        ],
        "Demographic": ClientUpdateEndpointsBatchEndpointBatchRequestItemDemographicTypeDef,
        "EffectiveDate": str,
        "EndpointStatus": str,
        "Id": str,
        "Location": ClientUpdateEndpointsBatchEndpointBatchRequestItemLocationTypeDef,
        "Metrics": Dict[str, float],
        "OptOut": str,
        "RequestId": str,
        "User": ClientUpdateEndpointsBatchEndpointBatchRequestItemUserTypeDef,
    },
    total=False,
)

ClientUpdateEndpointsBatchEndpointBatchRequestTypeDef = TypedDict(
    "ClientUpdateEndpointsBatchEndpointBatchRequestTypeDef",
    {"Item": List[ClientUpdateEndpointsBatchEndpointBatchRequestItemTypeDef]},
)

ClientUpdateEndpointsBatchResponseMessageBodyTypeDef = TypedDict(
    "ClientUpdateEndpointsBatchResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientUpdateEndpointsBatchResponseTypeDef = TypedDict(
    "ClientUpdateEndpointsBatchResponseTypeDef",
    {"MessageBody": ClientUpdateEndpointsBatchResponseMessageBodyTypeDef},
    total=False,
)

_RequiredClientUpdateGcmChannelGCMChannelRequestTypeDef = TypedDict(
    "_RequiredClientUpdateGcmChannelGCMChannelRequestTypeDef", {"ApiKey": str}
)
_OptionalClientUpdateGcmChannelGCMChannelRequestTypeDef = TypedDict(
    "_OptionalClientUpdateGcmChannelGCMChannelRequestTypeDef", {"Enabled": bool}, total=False
)


class ClientUpdateGcmChannelGCMChannelRequestTypeDef(
    _RequiredClientUpdateGcmChannelGCMChannelRequestTypeDef,
    _OptionalClientUpdateGcmChannelGCMChannelRequestTypeDef,
):
    pass


ClientUpdateGcmChannelResponseGCMChannelResponseTypeDef = TypedDict(
    "ClientUpdateGcmChannelResponseGCMChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Credential": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateGcmChannelResponseTypeDef = TypedDict(
    "ClientUpdateGcmChannelResponseTypeDef",
    {"GCMChannelResponse": ClientUpdateGcmChannelResponseGCMChannelResponseTypeDef},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    {
        "Dimensions": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef,
        "Location": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    {
        "EventCondition": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef,
        "SegmentCondition": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef,
        "SegmentDimensions": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    {
        "Conditions": List[
            ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef
        ],
        "Operator": Literal["ALL", "ANY"],
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    {
        "Condition": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef,
        "EvaluationWaitTime": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef,
        "FalseActivity": str,
        "TrueActivity": str,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    {"FromAddress": str},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesEMAILTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesEMAILTypeDef",
    {
        "MessageConfig": ClientUpdateJourneyResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef,
        "NextActivity": str,
        "TemplateName": str,
        "TemplateVersion": str,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesHoldoutTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesHoldoutTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    {
        "Dimensions": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef,
        "Location": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    {
        "EventCondition": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef,
        "SegmentCondition": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef,
        "SegmentDimensions": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    {
        "Condition": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef,
        "NextActivity": str,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef",
    {
        "Branches": List[
            ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef
        ],
        "DefaultActivity": str,
        "EvaluationWaitTime": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef",
    {
        "Branches": List[
            ClientUpdateJourneyResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef
        ]
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesWaitTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesWaitTypeDef",
    {
        "NextActivity": str,
        "WaitTime": ClientUpdateJourneyResponseJourneyResponseActivitiesWaitWaitTimeTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseActivitiesTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseActivitiesTypeDef",
    {
        "ConditionalSplit": ClientUpdateJourneyResponseJourneyResponseActivitiesConditionalSplitTypeDef,
        "Description": str,
        "EMAIL": ClientUpdateJourneyResponseJourneyResponseActivitiesEMAILTypeDef,
        "Holdout": ClientUpdateJourneyResponseJourneyResponseActivitiesHoldoutTypeDef,
        "MultiCondition": ClientUpdateJourneyResponseJourneyResponseActivitiesMultiConditionTypeDef,
        "RandomSplit": ClientUpdateJourneyResponseJourneyResponseActivitiesRandomSplitTypeDef,
        "Wait": ClientUpdateJourneyResponseJourneyResponseActivitiesWaitTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseLimitsTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseLimitsTypeDef",
    {"DailyCap": int, "EndpointReentryCap": int, "MessagesPerSecond": int},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseQuietTimeTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseScheduleTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseScheduleTypeDef",
    {"EndTime": datetime, "StartTime": datetime, "Timezone": str},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseStartConditionTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseStartConditionTypeDef",
    {
        "Description": str,
        "SegmentStartCondition": ClientUpdateJourneyResponseJourneyResponseStartConditionSegmentStartConditionTypeDef,
    },
    total=False,
)

ClientUpdateJourneyResponseJourneyResponseTypeDef = TypedDict(
    "ClientUpdateJourneyResponseJourneyResponseTypeDef",
    {
        "Activities": Dict[str, ClientUpdateJourneyResponseJourneyResponseActivitiesTypeDef],
        "ApplicationId": str,
        "CreationDate": str,
        "Id": str,
        "LastModifiedDate": str,
        "Limits": ClientUpdateJourneyResponseJourneyResponseLimitsTypeDef,
        "LocalTime": bool,
        "Name": str,
        "QuietTime": ClientUpdateJourneyResponseJourneyResponseQuietTimeTypeDef,
        "RefreshFrequency": str,
        "Schedule": ClientUpdateJourneyResponseJourneyResponseScheduleTypeDef,
        "StartActivity": str,
        "StartCondition": ClientUpdateJourneyResponseJourneyResponseStartConditionTypeDef,
        "State": Literal["DRAFT", "ACTIVE", "COMPLETED", "CANCELLED", "CLOSED"],
        "tags": Dict[str, str],
    },
    total=False,
)

ClientUpdateJourneyResponseTypeDef = TypedDict(
    "ClientUpdateJourneyResponseTypeDef",
    {"JourneyResponse": ClientUpdateJourneyResponseJourneyResponseTypeDef},
    total=False,
)

ClientUpdateJourneyStateJourneyStateRequestTypeDef = TypedDict(
    "ClientUpdateJourneyStateJourneyStateRequestTypeDef",
    {"State": Literal["DRAFT", "ACTIVE", "COMPLETED", "CANCELLED", "CLOSED"]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    {
        "Dimensions": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef,
        "Location": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef",
    {
        "EventCondition": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsEventConditionTypeDef,
        "SegmentCondition": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef,
        "SegmentDimensions": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef",
    {
        "Conditions": List[
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionConditionsTypeDef
        ],
        "Operator": Literal["ALL", "ANY"],
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitTypeDef",
    {
        "Condition": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitConditionTypeDef,
        "EvaluationWaitTime": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitEvaluationWaitTimeTypeDef,
        "FalseActivity": str,
        "TrueActivity": str,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef",
    {"FromAddress": str},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesEMAILTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesEMAILTypeDef",
    {
        "MessageConfig": ClientUpdateJourneyStateResponseJourneyResponseActivitiesEMAILMessageConfigTypeDef,
        "NextActivity": str,
        "TemplateName": str,
        "TemplateVersion": str,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesHoldoutTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesHoldoutTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    {
        "Dimensions": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef,
        "Location": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef",
    {
        "EventCondition": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionEventConditionTypeDef,
        "SegmentCondition": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef,
        "SegmentDimensions": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef",
    {
        "Condition": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesConditionTypeDef,
        "NextActivity": str,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionTypeDef",
    {
        "Branches": List[
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionBranchesTypeDef
        ],
        "DefaultActivity": str,
        "EvaluationWaitTime": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionEvaluationWaitTimeTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesRandomSplitTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesRandomSplitTypeDef",
    {
        "Branches": List[
            ClientUpdateJourneyStateResponseJourneyResponseActivitiesRandomSplitBranchesTypeDef
        ]
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesWaitWaitTimeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesWaitWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesWaitTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesWaitTypeDef",
    {
        "NextActivity": str,
        "WaitTime": ClientUpdateJourneyStateResponseJourneyResponseActivitiesWaitWaitTimeTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseActivitiesTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseActivitiesTypeDef",
    {
        "ConditionalSplit": ClientUpdateJourneyStateResponseJourneyResponseActivitiesConditionalSplitTypeDef,
        "Description": str,
        "EMAIL": ClientUpdateJourneyStateResponseJourneyResponseActivitiesEMAILTypeDef,
        "Holdout": ClientUpdateJourneyStateResponseJourneyResponseActivitiesHoldoutTypeDef,
        "MultiCondition": ClientUpdateJourneyStateResponseJourneyResponseActivitiesMultiConditionTypeDef,
        "RandomSplit": ClientUpdateJourneyStateResponseJourneyResponseActivitiesRandomSplitTypeDef,
        "Wait": ClientUpdateJourneyStateResponseJourneyResponseActivitiesWaitTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseLimitsTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseLimitsTypeDef",
    {"DailyCap": int, "EndpointReentryCap": int, "MessagesPerSecond": int},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseQuietTimeTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseScheduleTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseScheduleTypeDef",
    {"EndTime": datetime, "StartTime": datetime, "Timezone": str},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseStartConditionSegmentStartConditionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseStartConditionSegmentStartConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseStartConditionTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseStartConditionTypeDef",
    {
        "Description": str,
        "SegmentStartCondition": ClientUpdateJourneyStateResponseJourneyResponseStartConditionSegmentStartConditionTypeDef,
    },
    total=False,
)

ClientUpdateJourneyStateResponseJourneyResponseTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseJourneyResponseTypeDef",
    {
        "Activities": Dict[str, ClientUpdateJourneyStateResponseJourneyResponseActivitiesTypeDef],
        "ApplicationId": str,
        "CreationDate": str,
        "Id": str,
        "LastModifiedDate": str,
        "Limits": ClientUpdateJourneyStateResponseJourneyResponseLimitsTypeDef,
        "LocalTime": bool,
        "Name": str,
        "QuietTime": ClientUpdateJourneyStateResponseJourneyResponseQuietTimeTypeDef,
        "RefreshFrequency": str,
        "Schedule": ClientUpdateJourneyStateResponseJourneyResponseScheduleTypeDef,
        "StartActivity": str,
        "StartCondition": ClientUpdateJourneyStateResponseJourneyResponseStartConditionTypeDef,
        "State": Literal["DRAFT", "ACTIVE", "COMPLETED", "CANCELLED", "CLOSED"],
        "tags": Dict[str, str],
    },
    total=False,
)

ClientUpdateJourneyStateResponseTypeDef = TypedDict(
    "ClientUpdateJourneyStateResponseTypeDef",
    {"JourneyResponse": ClientUpdateJourneyStateResponseJourneyResponseTypeDef},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionTypeDef",
    {
        "Dimensions": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsDemographicTypeDef,
        "Location": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsTypeDef",
    {
        "EventCondition": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsEventConditionTypeDef,
        "SegmentCondition": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentConditionTypeDef,
        "SegmentDimensions": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionTypeDef",
    {
        "Conditions": List[
            ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionConditionsTypeDef
        ],
        "Operator": Literal["ALL", "ANY"],
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitEvaluationWaitTimeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitTypeDef",
    {
        "Condition": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitConditionTypeDef,
        "EvaluationWaitTime": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitEvaluationWaitTimeTypeDef,
        "FalseActivity": str,
        "TrueActivity": str,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesEMAILMessageConfigTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesEMAILMessageConfigTypeDef",
    {"FromAddress": str},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesEMAILTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesEMAILTypeDef",
    {
        "MessageConfig": ClientUpdateJourneyWriteJourneyRequestActivitiesEMAILMessageConfigTypeDef,
        "NextActivity": str,
        "TemplateName": str,
        "TemplateVersion": str,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesHoldoutTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesHoldoutTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsAttributesTypeDef,
        ],
        "EventType": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsEventTypeTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsMetricsTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionTypeDef",
    {
        "Dimensions": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionDimensionsTypeDef,
        "MessageActivity": str,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef",
    {
        "Recency": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsDemographicTypeDef,
        "Location": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionTypeDef",
    {
        "EventCondition": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionEventConditionTypeDef,
        "SegmentCondition": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentConditionTypeDef,
        "SegmentDimensions": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionSegmentDimensionsTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesTypeDef",
    {
        "Condition": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesConditionTypeDef,
        "NextActivity": str,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionEvaluationWaitTimeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionEvaluationWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionTypeDef",
    {
        "Branches": List[
            ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionBranchesTypeDef
        ],
        "DefaultActivity": str,
        "EvaluationWaitTime": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionEvaluationWaitTimeTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesRandomSplitBranchesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesRandomSplitBranchesTypeDef",
    {"NextActivity": str, "Percentage": int},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesRandomSplitTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesRandomSplitTypeDef",
    {"Branches": List[ClientUpdateJourneyWriteJourneyRequestActivitiesRandomSplitBranchesTypeDef]},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesWaitWaitTimeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesWaitWaitTimeTypeDef",
    {"WaitFor": str, "WaitUntil": str},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesWaitTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesWaitTypeDef",
    {
        "NextActivity": str,
        "WaitTime": ClientUpdateJourneyWriteJourneyRequestActivitiesWaitWaitTimeTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestActivitiesTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestActivitiesTypeDef",
    {
        "ConditionalSplit": ClientUpdateJourneyWriteJourneyRequestActivitiesConditionalSplitTypeDef,
        "Description": str,
        "EMAIL": ClientUpdateJourneyWriteJourneyRequestActivitiesEMAILTypeDef,
        "Holdout": ClientUpdateJourneyWriteJourneyRequestActivitiesHoldoutTypeDef,
        "MultiCondition": ClientUpdateJourneyWriteJourneyRequestActivitiesMultiConditionTypeDef,
        "RandomSplit": ClientUpdateJourneyWriteJourneyRequestActivitiesRandomSplitTypeDef,
        "Wait": ClientUpdateJourneyWriteJourneyRequestActivitiesWaitTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestLimitsTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestLimitsTypeDef",
    {"DailyCap": int, "EndpointReentryCap": int, "MessagesPerSecond": int},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestQuietTimeTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestQuietTimeTypeDef",
    {"End": str, "Start": str},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestScheduleTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestScheduleTypeDef",
    {"EndTime": datetime, "StartTime": datetime, "Timezone": str},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestStartConditionSegmentStartConditionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestStartConditionSegmentStartConditionTypeDef",
    {"SegmentId": str},
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestStartConditionTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestStartConditionTypeDef",
    {
        "Description": str,
        "SegmentStartCondition": ClientUpdateJourneyWriteJourneyRequestStartConditionSegmentStartConditionTypeDef,
    },
    total=False,
)

ClientUpdateJourneyWriteJourneyRequestTypeDef = TypedDict(
    "ClientUpdateJourneyWriteJourneyRequestTypeDef",
    {
        "Activities": Dict[str, ClientUpdateJourneyWriteJourneyRequestActivitiesTypeDef],
        "CreationDate": str,
        "LastModifiedDate": str,
        "Limits": ClientUpdateJourneyWriteJourneyRequestLimitsTypeDef,
        "LocalTime": bool,
        "Name": str,
        "QuietTime": ClientUpdateJourneyWriteJourneyRequestQuietTimeTypeDef,
        "RefreshFrequency": str,
        "Schedule": ClientUpdateJourneyWriteJourneyRequestScheduleTypeDef,
        "StartActivity": str,
        "StartCondition": ClientUpdateJourneyWriteJourneyRequestStartConditionTypeDef,
        "State": Literal["DRAFT", "ACTIVE", "COMPLETED", "CANCELLED", "CLOSED"],
    },
    total=False,
)

ClientUpdatePushTemplatePushNotificationTemplateRequestADMTypeDef = TypedDict(
    "ClientUpdatePushTemplatePushNotificationTemplateRequestADMTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdatePushTemplatePushNotificationTemplateRequestAPNSTypeDef = TypedDict(
    "ClientUpdatePushTemplatePushNotificationTemplateRequestAPNSTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "MediaUrl": str,
        "RawContent": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdatePushTemplatePushNotificationTemplateRequestBaiduTypeDef = TypedDict(
    "ClientUpdatePushTemplatePushNotificationTemplateRequestBaiduTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdatePushTemplatePushNotificationTemplateRequestDefaultTypeDef = TypedDict(
    "ClientUpdatePushTemplatePushNotificationTemplateRequestDefaultTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdatePushTemplatePushNotificationTemplateRequestGCMTypeDef = TypedDict(
    "ClientUpdatePushTemplatePushNotificationTemplateRequestGCMTypeDef",
    {
        "Action": Literal["OPEN_APP", "DEEP_LINK", "URL"],
        "Body": str,
        "ImageIconUrl": str,
        "ImageUrl": str,
        "RawContent": str,
        "SmallImageIconUrl": str,
        "Sound": str,
        "Title": str,
        "Url": str,
    },
    total=False,
)

ClientUpdatePushTemplatePushNotificationTemplateRequestTypeDef = TypedDict(
    "ClientUpdatePushTemplatePushNotificationTemplateRequestTypeDef",
    {
        "ADM": ClientUpdatePushTemplatePushNotificationTemplateRequestADMTypeDef,
        "APNS": ClientUpdatePushTemplatePushNotificationTemplateRequestAPNSTypeDef,
        "Baidu": ClientUpdatePushTemplatePushNotificationTemplateRequestBaiduTypeDef,
        "Default": ClientUpdatePushTemplatePushNotificationTemplateRequestDefaultTypeDef,
        "DefaultSubstitutions": str,
        "GCM": ClientUpdatePushTemplatePushNotificationTemplateRequestGCMTypeDef,
        "tags": Dict[str, str],
        "TemplateDescription": str,
    },
    total=False,
)

ClientUpdatePushTemplateResponseMessageBodyTypeDef = TypedDict(
    "ClientUpdatePushTemplateResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientUpdatePushTemplateResponseTypeDef = TypedDict(
    "ClientUpdatePushTemplateResponseTypeDef",
    {"MessageBody": ClientUpdatePushTemplateResponseMessageBodyTypeDef},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsBehaviorTypeDef",
    {"Recency": ClientUpdateSegmentResponseSegmentResponseDimensionsBehaviorRecencyTypeDef},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateSegmentResponseSegmentResponseDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateSegmentResponseSegmentResponseDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateSegmentResponseSegmentResponseDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseDimensionsTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseDimensionsTypeDef",
    {
        "Attributes": Dict[
            str, ClientUpdateSegmentResponseSegmentResponseDimensionsAttributesTypeDef
        ],
        "Behavior": ClientUpdateSegmentResponseSegmentResponseDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateSegmentResponseSegmentResponseDimensionsDemographicTypeDef,
        "Location": ClientUpdateSegmentResponseSegmentResponseDimensionsLocationTypeDef,
        "Metrics": Dict[str, ClientUpdateSegmentResponseSegmentResponseDimensionsMetricsTypeDef],
        "UserAttributes": Dict[
            str, ClientUpdateSegmentResponseSegmentResponseDimensionsUserAttributesTypeDef
        ],
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseImportDefinitionTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseImportDefinitionTypeDef",
    {
        "ChannelCounts": Dict[str, int],
        "ExternalId": str,
        "Format": Literal["CSV", "JSON"],
        "RoleArn": str,
        "S3Url": str,
        "Size": int,
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    {
        "Recency": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsDemographicTypeDef,
        "Location": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsLocationTypeDef,
        "Metrics": Dict[
            str,
            ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsMetricsTypeDef,
        ],
        "UserAttributes": Dict[
            str,
            ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef",
    {"Id": str, "Version": int},
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef",
    {
        "Dimensions": List[
            ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsDimensionsTypeDef
        ],
        "SourceSegments": List[
            ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsSourceSegmentsTypeDef
        ],
        "SourceType": Literal["ALL", "ANY", "NONE"],
        "Type": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseSegmentGroupsTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseSegmentGroupsTypeDef",
    {
        "Groups": List[ClientUpdateSegmentResponseSegmentResponseSegmentGroupsGroupsTypeDef],
        "Include": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientUpdateSegmentResponseSegmentResponseTypeDef = TypedDict(
    "ClientUpdateSegmentResponseSegmentResponseTypeDef",
    {
        "ApplicationId": str,
        "Arn": str,
        "CreationDate": str,
        "Dimensions": ClientUpdateSegmentResponseSegmentResponseDimensionsTypeDef,
        "Id": str,
        "ImportDefinition": ClientUpdateSegmentResponseSegmentResponseImportDefinitionTypeDef,
        "LastModifiedDate": str,
        "Name": str,
        "SegmentGroups": ClientUpdateSegmentResponseSegmentResponseSegmentGroupsTypeDef,
        "SegmentType": Literal["DIMENSIONAL", "IMPORT"],
        "tags": Dict[str, str],
        "Version": int,
    },
    total=False,
)

ClientUpdateSegmentResponseTypeDef = TypedDict(
    "ClientUpdateSegmentResponseTypeDef",
    {"SegmentResponse": ClientUpdateSegmentResponseSegmentResponseTypeDef},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsBehaviorTypeDef",
    {"Recency": ClientUpdateSegmentWriteSegmentRequestDimensionsBehaviorRecencyTypeDef},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateSegmentWriteSegmentRequestDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateSegmentWriteSegmentRequestDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateSegmentWriteSegmentRequestDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestDimensionsTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestDimensionsTypeDef",
    {
        "Attributes": Dict[str, ClientUpdateSegmentWriteSegmentRequestDimensionsAttributesTypeDef],
        "Behavior": ClientUpdateSegmentWriteSegmentRequestDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateSegmentWriteSegmentRequestDimensionsDemographicTypeDef,
        "Location": ClientUpdateSegmentWriteSegmentRequestDimensionsLocationTypeDef,
        "Metrics": Dict[str, ClientUpdateSegmentWriteSegmentRequestDimensionsMetricsTypeDef],
        "UserAttributes": Dict[
            str, ClientUpdateSegmentWriteSegmentRequestDimensionsUserAttributesTypeDef
        ],
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsAttributesTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef",
    {
        "Duration": Literal["HR_24", "DAY_7", "DAY_14", "DAY_30"],
        "RecencyType": Literal["ACTIVE", "INACTIVE"],
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorTypeDef",
    {
        "Recency": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorRecencyTypeDef
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicChannelTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicChannelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicMakeTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicMakeTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicModelTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicModelTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicTypeDef",
    {
        "AppVersion": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicAppVersionTypeDef,
        "Channel": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicChannelTypeDef,
        "DeviceType": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicDeviceTypeTypeDef,
        "Make": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicMakeTypeDef,
        "Model": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicModelTypeDef,
        "Platform": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicPlatformTypeDef,
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationCountryTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationCountryTypeDef",
    {"DimensionType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef",
    {"Latitude": float, "Longitude": float},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef",
    {
        "Coordinates": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointCoordinatesTypeDef,
        "RangeInKilometers": float,
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationTypeDef",
    {
        "Country": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationCountryTypeDef,
        "GPSPoint": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationGPSPointTypeDef,
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsMetricsTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsMetricsTypeDef",
    {"ComparisonOperator": str, "Value": float},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsUserAttributesTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsUserAttributesTypeDef",
    {"AttributeType": Literal["INCLUSIVE", "EXCLUSIVE"], "Values": List[str]},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsTypeDef",
    {
        "Attributes": Dict[
            str,
            ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsAttributesTypeDef,
        ],
        "Behavior": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsBehaviorTypeDef,
        "Demographic": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsDemographicTypeDef,
        "Location": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsLocationTypeDef,
        "Metrics": Dict[
            str, ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsMetricsTypeDef
        ],
        "UserAttributes": Dict[
            str,
            ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsUserAttributesTypeDef,
        ],
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsSourceSegmentsTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsSourceSegmentsTypeDef",
    {"Id": str, "Version": int},
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsTypeDef",
    {
        "Dimensions": List[
            ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsDimensionsTypeDef
        ],
        "SourceSegments": List[
            ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsSourceSegmentsTypeDef
        ],
        "SourceType": Literal["ALL", "ANY", "NONE"],
        "Type": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestSegmentGroupsTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestSegmentGroupsTypeDef",
    {
        "Groups": List[ClientUpdateSegmentWriteSegmentRequestSegmentGroupsGroupsTypeDef],
        "Include": Literal["ALL", "ANY", "NONE"],
    },
    total=False,
)

ClientUpdateSegmentWriteSegmentRequestTypeDef = TypedDict(
    "ClientUpdateSegmentWriteSegmentRequestTypeDef",
    {
        "Dimensions": ClientUpdateSegmentWriteSegmentRequestDimensionsTypeDef,
        "Name": str,
        "SegmentGroups": ClientUpdateSegmentWriteSegmentRequestSegmentGroupsTypeDef,
        "tags": Dict[str, str],
    },
    total=False,
)

ClientUpdateSmsChannelResponseSMSChannelResponseTypeDef = TypedDict(
    "ClientUpdateSmsChannelResponseSMSChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "PromotionalMessagesPerSecond": int,
        "SenderId": str,
        "ShortCode": str,
        "TransactionalMessagesPerSecond": int,
        "Version": int,
    },
    total=False,
)

ClientUpdateSmsChannelResponseTypeDef = TypedDict(
    "ClientUpdateSmsChannelResponseTypeDef",
    {"SMSChannelResponse": ClientUpdateSmsChannelResponseSMSChannelResponseTypeDef},
    total=False,
)

ClientUpdateSmsChannelSMSChannelRequestTypeDef = TypedDict(
    "ClientUpdateSmsChannelSMSChannelRequestTypeDef",
    {"Enabled": bool, "SenderId": str, "ShortCode": str},
    total=False,
)

ClientUpdateSmsTemplateResponseMessageBodyTypeDef = TypedDict(
    "ClientUpdateSmsTemplateResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientUpdateSmsTemplateResponseTypeDef = TypedDict(
    "ClientUpdateSmsTemplateResponseTypeDef",
    {"MessageBody": ClientUpdateSmsTemplateResponseMessageBodyTypeDef},
    total=False,
)

ClientUpdateSmsTemplateSMSTemplateRequestTypeDef = TypedDict(
    "ClientUpdateSmsTemplateSMSTemplateRequestTypeDef",
    {"Body": str, "DefaultSubstitutions": str, "tags": Dict[str, str], "TemplateDescription": str},
    total=False,
)

ClientUpdateTemplateActiveVersionResponseMessageBodyTypeDef = TypedDict(
    "ClientUpdateTemplateActiveVersionResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientUpdateTemplateActiveVersionResponseTypeDef = TypedDict(
    "ClientUpdateTemplateActiveVersionResponseTypeDef",
    {"MessageBody": ClientUpdateTemplateActiveVersionResponseMessageBodyTypeDef},
    total=False,
)

ClientUpdateTemplateActiveVersionTemplateActiveVersionRequestTypeDef = TypedDict(
    "ClientUpdateTemplateActiveVersionTemplateActiveVersionRequestTypeDef",
    {"Version": str},
    total=False,
)

ClientUpdateVoiceChannelResponseVoiceChannelResponseTypeDef = TypedDict(
    "ClientUpdateVoiceChannelResponseVoiceChannelResponseTypeDef",
    {
        "ApplicationId": str,
        "CreationDate": str,
        "Enabled": bool,
        "HasCredential": bool,
        "Id": str,
        "IsArchived": bool,
        "LastModifiedBy": str,
        "LastModifiedDate": str,
        "Platform": str,
        "Version": int,
    },
    total=False,
)

ClientUpdateVoiceChannelResponseTypeDef = TypedDict(
    "ClientUpdateVoiceChannelResponseTypeDef",
    {"VoiceChannelResponse": ClientUpdateVoiceChannelResponseVoiceChannelResponseTypeDef},
    total=False,
)

ClientUpdateVoiceChannelVoiceChannelRequestTypeDef = TypedDict(
    "ClientUpdateVoiceChannelVoiceChannelRequestTypeDef", {"Enabled": bool}, total=False
)

ClientUpdateVoiceTemplateResponseMessageBodyTypeDef = TypedDict(
    "ClientUpdateVoiceTemplateResponseMessageBodyTypeDef",
    {"Message": str, "RequestID": str},
    total=False,
)

ClientUpdateVoiceTemplateResponseTypeDef = TypedDict(
    "ClientUpdateVoiceTemplateResponseTypeDef",
    {"MessageBody": ClientUpdateVoiceTemplateResponseMessageBodyTypeDef},
    total=False,
)

ClientUpdateVoiceTemplateVoiceTemplateRequestTypeDef = TypedDict(
    "ClientUpdateVoiceTemplateVoiceTemplateRequestTypeDef",
    {
        "Body": str,
        "DefaultSubstitutions": str,
        "LanguageCode": str,
        "tags": Dict[str, str],
        "TemplateDescription": str,
        "VoiceId": str,
    },
    total=False,
)
