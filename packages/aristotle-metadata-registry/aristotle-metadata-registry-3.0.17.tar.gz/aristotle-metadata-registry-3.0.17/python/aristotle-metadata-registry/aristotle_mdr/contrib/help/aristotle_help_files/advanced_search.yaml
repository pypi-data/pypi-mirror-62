- model: aristotle_mdr_help.helppage
  fields:
    title: Advanced Search
    language: en
    body: >
      <h2>Restricting search with the advanced search options</h2>
      <p>
          The <a href="/search/">search page</a> provides a form that gives users control to filter and sort search results.</p>
      <p>
          When searching, the "indexed text" refers to everything crawled by the search engine.
          This always includes names, definitions, version and comments.
          Some items will also include additional text from associated items.
          For example, Data Elements include the text from its related Data Element Concept and Value Domain.</p>

      <img src="{static}/aristotle_mdr/search_filters.png">

      <hr>      
      <h3><i class="fa fa-quote-left fa-fw"></i> Search titles only</h3>
      <p>
          Selecting this option restricts Aristotle to only search
          for items with titles or names. This option is available for all
          searchable objects, including metadata types, pages, collections,
          documents, discussions and issues.
      </p>
      
      <h3><i class="fa fa-eye fa-fw"></i> Only show public items</h3>
      <p>
          When logged in, selecting this option limits search results 
          to only those items that are publicly visible to all users,
          including those without an account.
          This option is only shown to logged-in users as non-logged in
          users only have right to view to public content.
      </p>
      
      <h3><i class="fa fa-users fa-fw"></i> Only show items in my workgroups</h3>
      <p>
          When searching select this box to limit results to only those items that are within a workgroup a user belongs.
          This option is only shown to logged-in users.
      </p>
      
      <h3><i class="fa fa-magic fa-fw"></i> Smart spellcheck and filter removal</h3>
      <p>
          When searching Aristotle-MDR performs spellchecks against search terms, and if there is
          a low number of results will recommend an alternate search term.
          <br>
          Along with this, if a search returns zero results, Aristotle-MDR will remove any filters such as
          item type or date restrictions to automatically broaden the search corpus.
          <br>
          Any time the search is changed, such as spelling correction or filter removal, a notification
          will appear under the search bar to let users know.
      </p>

      
      <h3><i class="fa fa-search fa-fw"></i> Default Search</h3>
      <p>
        When searching without selecting an item type or category, the search engine
        searches across everything in the registry.
      </p>
      
      <h2>Keyword search shortcuts</h2>
      <p>
          When searching there are a few advanced options available to make searching easier.
          These can be entered into any search
          box using the <tt>keyword:search_term</tt> format.
      
      </p>

      <h3><i class="fa fa-keyboard-o fa-fw"></i> Narrow search results using tokens</h3>
      <p>
          Certain tokens and field names, such as name, or version, can be used to limit results when searching.
          These will force the search engine to only return results where terms appear in those fields.
      </p>
      <table class="table">
          <caption>Sample queries are shown below:</caption>
          <thead>
              <tr>
                  <th>Token</th>
                  <th>Description</th>
                  <th>Sample Query</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <td><code><b>status</b>:argument</code></td>
                  <td>
                      Filters items to those that have the given registered state.
                      This can only be used for items which can be registered.<br>
                      Possible values:
                      <ul>
                      <li><code>incomplete</code> (or <code>inc</code>),
                      <li><code>candidate</code> (or <code>can</code>),
                      <li><code>recorded</code> (or <code>rec</code>),
                      <li><code>qualified</code> (or <code>qual</code>),
                      <li><code>standard</code> (or <code>st</code>),
                      <li><code>preferred</code> (or <code>pref</code>) <br>(short for Preferred Standard),
                      <li><code>superseded</code> (or <code>sup</code>), or
                      <li><code>retired</code>  (or <code>retired</code>)
                  </td>
                  <td>
                      Sample: <code>Business version:1.0.0</code><br>
                      Result: Returns items where Person appears anywhere in the indexed text, and also has a version of "1.0.0".
                  </td>
              </tr>
              <tr>
                  <td><code><b>id</b>:argument</code> or <code><b>identifier</b>:argument</code></td>
                  <td>
                      Filters items that have an additional namespaced identifiers.
                  </td>
                  <td>
                    Examples:
                    <ul>
                    <li><code>id:123485</code> - Returns all items that have an extra Identifier of "123485", with any version number.
                    <li><code>id:my_org/123485</code> - Returns all items that have an extra Identifier of "123485" in the namespace "my_org", with any version number.
                    <li><code>id:my_org/123485/2.0.1</code> - Returns the item that has the extra Identifier of "123485" in the namespace "my_org", with the version number "2.0.1".
                    </ul
                  </td>
              </tr>
              <tr>
                  <td><code><b>name</b>:argument</code></td>
                  <td>Filters items where the given argument is in the name field of the object.
                  </td>
                  <td>
                    <code>name:Person</code><br>
                    Result: Returns items with "Person" in the name
                  </td>
              </tr>
              <tr>
                  <td><code><b>namespace</b>:argument</code></td>
                  <td>
                      Filters items that have an additional namespaced identifiers with the specified namespace.
                  </td>
                  <td>
                      Sample: <code>Person namespace:my_org</code><br>
                      Result: Returns items where Person appears anywhere in the indexed text, and also has a namespace of "my_org".
                  </td>
              </tr>
              <tr>
                  <td><code><b>type</b>:argument</code></td>
                  <td>
                      Filters items to be of the given item type. This can be any metadata type, help page, or other indexed content.
                  </td>
                  <td>
                      For examples, see below.
                  </td>
              </tr>
              <tr>
                  <td><code><b>version</b>:argument</code></td>
                  <td>
                      Filters items where the given argument is in the version field of the object.<br>
                      Note: Because of the nature of the search engine, version queries
                      need to be at least 3 characters long.
                  </td>
                  <td>
                      Sample: <code>Person version:1.0.0</code><br>
                      Result: Returns items where Person appears anywhere in the indexed text, and also has a version of "1.0.0".
                  </td>
              </tr>
          </tbody>
      </table>
      
      
      <h3><i class="fa fa-puzzle-piece fa-fw"></i> Restrict item types using the <tt>type</tt> keyword</h3>
      <p>
          When searching, you can enter a type along with the name of the object type to further restrict your
          search. The type must not include spaces, which should be removed, or replaced with underscores or hyphens.
          For an even shorter query, type names can be abbreviated to the first letter of each word in the type name.
      </p>
      <p>
          This is the same as selecting options in the <span class="well well-sm"><i class="fa fa-puzzle-piece fa-fw"></i> Item Type</span> dropdown on the search page.
      </p>
      <table class="table">
          <caption>Sample queries are shown below:</caption>
          <thead>
              <tr>
                  <th>Query</th>
                  <th>Result</th>
              </tr>
          </thead>
          <tbody>
              <tr>
                  <td><code>Age type:property</code></td>
                  <td>Returns <em>only properties</em> with "Age" in the text</td>
              </tr>
              <tr>
                  <td><code>Person type:objectclass</code></td>
                  <td>Returns <em>only Object Classes</em> with "Person" in the text</td>
              </tr>
              <tr>
                  <td><code>Person type:object_class</code></td>
                  <td>Returns <em>only Object Classes</em> with "Person" in the text</td>
              </tr>
              <tr>
                  <td><code>Person type:oc</code></td>
                  <td>Abbreviated way to return <em>only Object Classes</em> with "Person" in the text</td>
              </tr>
              <tr>
                  <td><code>Person Age type:dec</code></td>
                  <td>Abbreviated way to return <em>only Data Element Concepts</em> with "Person" and "Age" in the text</td>
              </tr>
              <tr>
                  <td><code>Person Age type:dec type:de</code></td>
                  <td>Abbreviated way to return <em>Data Element Concepts <strong>or</strong> Data Elements</em> with "Person" and "Age" in the text</td>
              </tr>
          </tbody>
      </table>
      <div class="alert alert-info" role="alert">
          <i class="fa fa-exclamation-circle fa-fw fa-2x pull-left"></i> <header><strong>Keyword queries can be used
          together to create complex queries.</strong></header>
          For example, this query - <code>Person Age name:Person type:dec version:1.2.3</code> -
          searches for items that meet the following criteria:
          <ul>
              <li><code>Person Age</code> - "Person" or "Age" in the indexed text</li>
              <li><code>name:Person</code> - "Person" appearing in the name</li>
              <li><code>type:dec</code> - Are of the type Data Element Concept</li>
              <li><code>version:1.2.3</code> - Have a version of "1.2.3"</li>
          </ul>
      
      </div>
