{"version":3,"sources":["webpack:///./src/components/ha-switch.ts","webpack:///./src/common/util/render-status.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/panels/config/zone/dialog-zone-detail.ts","webpack:///./src/common/location/add_distance_to_coord.ts"],"names":["MwcSwitch","customElements","get","_decorate","customElement","_initialize","_MwcSwitch","HaSwitch","_MwcSwitch2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","F","d","kind","decorators","property","type","Boolean","key","value","query","_this2","_get","prototype","style","setProperty","classList","toggle","_slot","assignedNodes","addEventListener","haptic","forwardHaptic","html","_templateObject","ripple","interactionNode","_haChangeHandler","static","css","_templateObject2","e","mdcFoundation","handleChange","checked","formElement","__webpack_require__","__webpack_exports__","afterNextRender","nextRender","cb","requestAnimationFrame","setTimeout","Promise","resolve","LocationEditor","_leafletMap","location","_locationMarker","getBounds","fitBounds","setView","fitZoom","_ignoreFitToMap","changedProps","_initMap","Leaflet","has","_updateMarker","fitMap","_updateRadius","_updateRadiusColor","_updateIcon","shadowRoot","querySelector","_ref","_ref2","regeneratorRuntime","async","_context","prev","next","awrap","setupLeafletMap","_mapEl","radius","sent","_slicedToArray","ev","_locationUpdated","latlng","invalidateSize","stop","longitude","lng","Math","abs","lat","fireEvent","undefined","bubbles","getRadius","icon","iconHTML","el","document","createElement","setAttribute","outerHTML","_iconEl","divIcon","iconSize","className","_setIcon","editing","_moveMarker","setIcon","_this3","enable","moveMarker","resizeMarker","_resizeMarkers","target","getLatLng","_radiusUpdated","_this4","_context2","remove","abrupt","setLatLng","disable","_setupEdit","circle","color","radiusColor","defaultRadiusColor","addLayer","marker","draggable","setRadius","setStyle","LitElement","MwcDialog","_MwcDialog","_MwcDialog2","HaDialog","DialogZoneDetail","params","movedHomeLocation","_params","_error","entry","_name","name","_icon","_latitude","latitude","hass","config","_longitude","_passive","passive","_radius","dx","dy","PI","cos","updateComplete","title","localize","nameValid","trim","iconValid","includes","latValid","String","lngValid","radiusValid","valid","_templateObject3","_close","_templateObject4","_valueChanged","_locationValue","passiveRadiusColor","_locationChanged","_passiveChanged","_templateObject5","_deleteEntry","_submitting","_templateObject6","_updateEntry","Number","_ev$currentTarget$loc","currentTarget","configValue","detail","values","updateEntry","createEntry","t0","message","finish","_context3","removeEntry","_templateObject7","define"],"mappings":"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","file":"chunk.fd2b1e81edf2f7483dce.js","sourcesContent":["import {\n  customElement,\n  CSSResult,\n  css,\n  query,\n  html,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\nimport { Constructor } from \"../types\";\nimport { forwardHaptic } from \"../data/haptics\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  // Generate a haptic vibration.\n  // Only set to true if the new value of the switch is applied right away when toggling.\n  // Do not add haptic when a user is required to press save.\n  @property({ type: Boolean }) public haptic = false;\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n    this.addEventListener(\"change\", () => {\n      if (this.haptic) {\n        forwardHaptic(\"light\");\n      }\n    });\n  }\n\n  protected render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div\n          class=\"mdc-switch__thumb-underlay\"\n          .ripple=\"${ripple({\n            interactionNode: this,\n          })}\"\n        >\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              @change=\"${this._haChangeHandler}\"\n            />\n          </div>\n        </div>\n      </div>\n      <label for=\"basic-switch\"><slot></slot></label>\n    `;\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n\n  private _haChangeHandler(e: Event) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport {\n  Marker,\n  Map,\n  LeafletMouseEvent,\n  DragEndEvent,\n  LatLng,\n  Circle,\n  DivIcon,\n} from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { defaultRadiusColor } from \"../../data/zone\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  @property() public radius?: number;\n  @property() public radiusColor?: string;\n  @property() public icon?: string;\n  public fitZoom = 16;\n  private _iconEl?: DivIcon;\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker | Circle;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    if ((this._locationMarker as Circle).getBounds) {\n      this._leafletMap.fitBounds((this._locationMarker as Circle).getBounds());\n    } else {\n      this._leafletMap.setView(this.location, this.fitZoom);\n    }\n    this._ignoreFitToMap = this.location;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    if (changedProps.has(\"location\")) {\n      this._updateMarker();\n      if (\n        this.location &&\n        (!this._ignoreFitToMap ||\n          this._ignoreFitToMap[0] !== this.location[0] ||\n          this._ignoreFitToMap[1] !== this.location[1])\n      ) {\n        this.fitMap();\n      }\n    }\n    if (changedProps.has(\"radius\")) {\n      this._updateRadius();\n    }\n    if (changedProps.has(\"radiusColor\")) {\n      this._updateRadiusColor();\n    }\n    if (changedProps.has(\"icon\")) {\n      this._updateIcon();\n    }\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(\n      this._mapEl,\n      false,\n      Boolean(this.radius)\n    );\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._locationUpdated(ev.latlng)\n    );\n    this._updateIcon();\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _locationUpdated(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _radiusUpdated() {\n    this._ignoreFitToMap = this.location;\n    this.radius = (this._locationMarker as Circle).getRadius();\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateIcon() {\n    if (!this.icon) {\n      this._iconEl = undefined;\n      return;\n    }\n\n    // create icon\n    let iconHTML = \"\";\n    const el = document.createElement(\"ha-icon\");\n    el.setAttribute(\"icon\", this.icon);\n    iconHTML = el.outerHTML;\n\n    this._iconEl = this.Leaflet!.divIcon({\n      html: iconHTML,\n      iconSize: [24, 24],\n      className: \"light leaflet-edit-move\",\n    });\n    this._setIcon();\n  }\n\n  private _setIcon() {\n    if (!this._locationMarker || !this._iconEl) {\n      return;\n    }\n\n    if (!this.radius) {\n      (this._locationMarker as Marker).setIcon(this._iconEl);\n      return;\n    }\n\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    moveMarker.setIcon(this._iconEl);\n  }\n\n  private _setupEdit() {\n    // @ts-ignore\n    this._locationMarker.editing.enable();\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    // @ts-ignore\n    const resizeMarker = this._locationMarker.editing._resizeMarkers[0];\n    this._setIcon();\n    moveMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n    );\n    resizeMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._radiusUpdated(ev)\n    );\n  }\n\n  private async _updateMarker(): Promise<void> {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      if (this.radius) {\n        // @ts-ignore\n        this._locationMarker.editing.disable();\n        await nextRender();\n        this._setupEdit();\n      }\n      return;\n    }\n\n    if (!this.radius) {\n      this._locationMarker = this.Leaflet!.marker(this.location, {\n        draggable: true,\n      });\n      this._setIcon();\n      this._locationMarker.addEventListener(\n        \"dragend\",\n        // @ts-ignore\n        (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n      );\n      this._leafletMap!.addLayer(this._locationMarker);\n    } else {\n      this._locationMarker = this.Leaflet!.circle(this.location, {\n        color: this.radiusColor || defaultRadiusColor,\n        radius: this.radius,\n      });\n      this._leafletMap!.addLayer(this._locationMarker);\n      this._setupEdit();\n    }\n  }\n\n  private _updateRadius(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setRadius(this.radius);\n  }\n\n  private _updateRadiusColor(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setStyle({ color: this.radiusColor });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n      .light {\n        color: #000000;\n      }\n      .leaflet-edit-move {\n        border-radius: 50%;\n        cursor: move !important;\n      }\n      .leaflet-edit-resize {\n        border-radius: 50%;\n        cursor: nesw-resize !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import { customElement, CSSResult, css } from \"lit-element\";\nimport \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\n// tslint:disable-next-line\nimport { Dialog } from \"@material/mwc-dialog\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\nimport \"@material/mwc-button\";\n\nimport \"../../../components/map/ha-location-editor\";\nimport \"../../../components/ha-switch\";\nimport \"../../../components/ha-dialog\";\n\nimport { ZoneDetailDialogParams } from \"./show-dialog-zone-detail\";\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  ZoneMutableParams,\n  passiveRadiusColor,\n  defaultRadiusColor,\n} from \"../../../data/zone\";\nimport { addDistanceToCoord } from \"../../../common/location/add_distance_to_coord\";\n\nclass DialogZoneDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _name!: string;\n  @property() private _icon!: string;\n  @property() private _latitude!: number;\n  @property() private _longitude!: number;\n  @property() private _passive!: boolean;\n  @property() private _radius!: number;\n  @property() private _error?: string;\n  @property() private _params?: ZoneDetailDialogParams;\n  @property() private _submitting: boolean = false;\n\n  public async showDialog(params: ZoneDetailDialogParams): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.entry) {\n      this._name = this._params.entry.name || \"\";\n      this._icon = this._params.entry.icon || \"\";\n      this._latitude = this._params.entry.latitude || this.hass.config.latitude;\n      this._longitude =\n        this._params.entry.longitude || this.hass.config.longitude;\n      this._passive = this._params.entry.passive || false;\n      this._radius = this._params.entry.radius || 100;\n    } else {\n      const movedHomeLocation = addDistanceToCoord(\n        [this.hass.config.latitude, this.hass.config.longitude],\n        500,\n        500\n      );\n      this._name = \"\";\n      this._icon = \"mdi:map-marker\";\n      this._latitude = movedHomeLocation[0];\n      this._longitude = movedHomeLocation[1];\n      this._passive = false;\n      this._radius = 100;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const title = html`\n      ${this._params.entry\n        ? this._params.entry.name\n        : this.hass!.localize(\"ui.panel.config.zone.detail.new_zone\")}\n      <paper-icon-button\n        aria-label=${this.hass.localize(\n          \"ui.panel.config.integrations.config_flow.dismiss\"\n        )}\n        icon=\"hass:close\"\n        dialogAction=\"close\"\n        style=\"position: absolute; right: 16px; top: 12px;\"\n      ></paper-icon-button>\n    `;\n    const nameValid = this._name.trim() === \"\";\n    const iconValid = !this._icon.trim().includes(\":\");\n    const latValid = String(this._latitude) === \"\";\n    const lngValid = String(this._longitude) === \"\";\n    const radiusValid = String(this._radius) === \"\";\n\n    const valid =\n      !nameValid && !iconValid && !latValid && !lngValid && !radiusValid;\n\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction=\"\"\n        escapeKeyAction=\"\"\n        .title=${title}\n      >\n        <div>\n          ${this._error\n            ? html`\n                <div class=\"error\">${this._error}</div>\n              `\n            : \"\"}\n          <div class=\"form\">\n            <paper-input\n              .value=${this._name}\n              .configValue=${\"name\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.name\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.required_error_msg\"\n              )}\"\n              .invalid=${nameValid}\n            ></paper-input>\n            <paper-input\n              .value=${this._icon}\n              .configValue=${\"icon\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.icon\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.icon_error_msg\"\n              )}\"\n              .invalid=${iconValid}\n            ></paper-input>\n            <ha-location-editor\n              class=\"flex\"\n              .location=${this._locationValue}\n              .radius=${this._radius}\n              .radiusColor=${this._passive\n                ? passiveRadiusColor\n                : defaultRadiusColor}\n              .icon=${this._icon}\n              @change=${this._locationChanged}\n            ></ha-location-editor>\n            <div class=\"location\">\n              <paper-input\n                .value=${this._latitude}\n                .configValue=${\"latitude\"}\n                @value-changed=${this._valueChanged}\n                .label=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.latitude\"\n                )}\"\n                .errorMessage=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.required_error_msg\"\n                )}\"\n                .invalid=${latValid}\n              ></paper-input>\n              <paper-input\n                .value=${this._longitude}\n                .configValue=${\"longitude\"}\n                @value-changed=${this._valueChanged}\n                .label=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.longitude\"\n                )}\"\n                .errorMessage=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.required_error_msg\"\n                )}\"\n                .invalid=${lngValid}\n              ></paper-input>\n            </div>\n            <paper-input\n              .value=${this._radius}\n              .configValue=${\"radius\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.radius\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.required_error_msg\"\n              )}\"\n              .invalid=${radiusValid}\n            ></paper-input>\n            <p>\n              ${this.hass!.localize(\"ui.panel.config.zone.detail.passive_note\")}\n            </p>\n            <ha-switch .checked=${this._passive} @change=${this._passiveChanged}\n              >${this.hass!.localize(\n                \"ui.panel.config.zone.detail.passive\"\n              )}</ha-switch\n            >\n          </div>\n        </div>\n        ${this._params.entry\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=\"${this._deleteEntry}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\"ui.panel.config.zone.detail.delete\")}\n              </mwc-button>\n            `\n          : html``}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateEntry}\"\n          .disabled=${!valid || this._submitting}\n        >\n          ${this._params.entry\n            ? this.hass!.localize(\"ui.panel.config.zone.detail.update\")\n            : this.hass!.localize(\"ui.panel.config.zone.detail.create\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private get _locationValue() {\n    return [Number(this._latitude), Number(this._longitude)];\n  }\n\n  private _locationChanged(ev) {\n    [this._latitude, this._longitude] = ev.currentTarget.location;\n    this._radius = ev.currentTarget.radius;\n  }\n\n  private _passiveChanged(ev) {\n    this._passive = ev.target.checked;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    const configValue = (ev.target as any).configValue;\n\n    this._error = undefined;\n    this[`_${configValue}`] = ev.detail.value;\n  }\n\n  private async _updateEntry() {\n    this._submitting = true;\n    try {\n      const values: ZoneMutableParams = {\n        name: this._name.trim(),\n        icon: this._icon.trim(),\n        latitude: this._latitude,\n        longitude: this._longitude,\n        passive: this._passive,\n        radius: this._radius,\n      };\n      if (this._params!.entry) {\n        await this._params!.updateEntry!(values);\n      } else {\n        await this._params!.createEntry(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err ? err.message : \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry!()) {\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      css`\n        ha-dialog {\n          --mdc-dialog-title-ink-color: var(--primary-text-color);\n          --justify-action-buttons: space-between;\n        }\n        @media only screen and (min-width: 600px) {\n          ha-dialog {\n            --mdc-dialog-min-width: 600px;\n          }\n        }\n\n        /* make dialog fullscreen on small screens */\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          ha-dialog {\n            --mdc-dialog-min-width: 100vw;\n            --mdc-dialog-max-height: 100vh;\n            --mdc-dialog-shape-radius: 0px;\n            --vertial-align-dialog: flex-end;\n          }\n        }\n        .form {\n          padding-bottom: 24px;\n          color: var(--primary-text-color);\n        }\n        .location {\n          display: flex;\n        }\n        .location > * {\n          flex-grow: 1;\n          min-width: 0;\n        }\n        .location > *:first-child {\n          margin-right: 4px;\n        }\n        .location > *:last-child {\n          margin-left: 4px;\n        }\n        ha-location-editor {\n          margin-top: 16px;\n        }\n        ha-user-picker {\n          margin-top: 16px;\n        }\n        mwc-button.warning {\n          --mdc-theme-primary: var(--google-red-500);\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        a {\n          color: var(--primary-color);\n        }\n        p {\n          color: var(--primary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-zone-detail\": DialogZoneDetail;\n  }\n}\n\ncustomElements.define(\"dialog-zone-detail\", DialogZoneDetail);\n","export const addDistanceToCoord = (\n  location: [number, number],\n  dx: number,\n  dy: number\n): [number, number] => {\n  const rEarth = 6378000;\n  const newLatitude = location[0] + (dy / rEarth) * (180 / Math.PI);\n  const newLongitude =\n    location[1] +\n    ((dx / rEarth) * (180 / Math.PI)) / Math.cos((location[0] * Math.PI) / 180);\n  return [newLatitude, newLongitude];\n};\n"],"sourceRoot":""}