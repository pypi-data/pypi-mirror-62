Metadata-Version: 2.1
Name: NQontrol
Version: 1.1b2
Summary: Python program for digital control-loops.
Home-page: UNKNOWN
Author: LasNQ â€“ Uni Hamburg
Author-email: cdarsowf@physnet.uni-hamburg.de
License: GPL v3
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Description-Content-Type: text/markdown
Requires-Dist: numpy (>=1.14)
Requires-Dist: dash (==1.7.0)
Requires-Dist: plotly (==4.3.0)
Requires-Dist: pandas (<1.0)
Requires-Dist: pandas-datareader (>=0.5.0)
Requires-Dist: matplotlib
Requires-Dist: scipy (>=1.0)
Requires-Dist: fastnumbers
Requires-Dist: openqlab (>=0.1.11.1)
Requires-Dist: jsonpickle
Requires-Dist: gunicorn
Requires-Dist: adwin (>=0.16.1)
Requires-Dist: flask
Requires-Dist: websocket-client

# ReadMe

<!--[![pipeline status](https://git.physnet.uni-hamburg.de/las-nq/nqontrol/badges/master/pipeline.svg)](https://git.physnet.uni-hamburg.de/las-nq/nqontrol/commits/master)-->
<!--[![coverage report](https://git.physnet.uni-hamburg.de/las-nq/nqontrol/badges/master/coverage.svg)](https://git.physnet.uni-hamburg.de/las-nq/nqontrol/commits/master)-->

`NQontrol` is a python project aiming the replacement of analog PID controllers in the lab.

The project is a solution based on the ADwin real-time platform that is able to deliver in excess of 8 simultaneous locking loops running with 200 kHz sampling frequency, and offers five second-order filtering sections per channel for optimal control performance. 
This Python package, together with a web-based GUI, makes the system easy to use and adapt for a wide range of control tasks in quantum-optical experiments.

The source code can be found on [GitLab](https://gitlab.com/las-nq/nqontrol).

## Paper Version

A fixed state of this project is [version 1.0](https://gitlab.com/las-nq/nqontrol/tree/v1.0).
It belongs to the published paper ([arXiv version](https://arxiv.org/abs/1911.08824)) and will stay here independent of the future development.

## Documentation

For more information please read the online documentation:

* Current documentation of the [latest release](https://las-nq-serv.physnet.uni-hamburg.de/python/nqontrol)
* Current documentation of the [latest development version](https://las-nq-serv.physnet.uni-hamburg.de/python/nqontrol-stage)

## NQontrol Installation

For installation please refer to the [documentation page](https://las-nq-serv.physnet.uni-hamburg.de/python/nqontrol/install.html).

## Development

For version numbering standards see [here](https://packaging.python.org/guides/distributing-packages-using-setuptools/?highlight=beta#standards-compliance-for-interoperability).

### Pipenv

Use [Pipenv](https://pipenv.readthedocs.io/en/latest/) to manage the development packages.

### Code Formatter

We use [`pre-commit`](https://pre-commit.com/#python) for automatic code formatting before committing.
It is automatically installed with the development packages.
The command to enable the hooks is:
```bash
pre-commit install
```


