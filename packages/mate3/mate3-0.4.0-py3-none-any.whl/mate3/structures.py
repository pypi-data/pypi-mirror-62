# This file is auto generated, do not edit. The generation code can be found in code_generator.py

from mate3.base_structures import *
from typing import NamedTuple


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class SunspecCommonModelBlock(NamedTuple):
    device: Device

    sunspec_did: uint16
    sunspec_length: uint16
    manufacturer: str
    model: str
    options: str
    version: str
    serialnumber: str
    deviceaddress: uint16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class SunspecInverterSinglePhaseBlock(NamedTuple):
    device: Device

    did: uint16
    length: uint16
    ac_current: uint16
    ac_currenta: uint16
    ac_currentb: uint16
    ac_currentc: uint16
    ac_current_scale_factor: int16
    ac_voltageab: uint16
    ac_voltagebc: uint16
    ac_voltageca: uint16
    ac_voltagean: uint16
    ac_voltagebn: uint16
    ac_voltagecn: uint16
    ac_voltage_scale_factor: int16
    ac_power: int16
    ac_power_scale_factor: int16
    ac_frequency: uint16
    ac_frequency_scale_factor: int16
    ac_va: int16
    ac_va_scale_factor: int16
    ac_var: int16
    ac_var_scale_factor: int16
    ac_pf: int16
    ac_pf_scale_factor: int16
    ac_energy_wh: uint32
    ac_energy_wh_scale_factor: uint16
    dc_current: uint16
    dc_current_scale_factor: int16
    dc_voltage: uint16
    dc_voltage_scale_factor: int16
    dc_power: int16
    dc_power_scale_factor: int16
    temperature_cab: int16
    temperature_sink: int16
    temperature_trans: int16
    temperature_other: int16
    temperature_scale_factor: int16
    status: uint16
    status_vendor: uint16
    event_1: uint32
    event_2: uint32
    event_1_vendor: uint32
    event_2_vendor: uint32
    event_3_vendor: uint32
    event_4_vendor: uint32


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class SunspecInverterSplitPhaseBlock(NamedTuple):
    device: Device

    did: uint16
    length: uint16
    ac_current: uint16
    ac_currenta: uint16
    ac_currentb: uint16
    ac_currentc: uint16
    ac_current_scale_factor: int16
    ac_voltageab: uint16
    ac_voltagebc: uint16
    ac_voltageca: uint16
    ac_voltagean: uint16
    ac_voltagebn: uint16
    ac_voltagecn: uint16
    ac_voltage_scale_factor: int16
    ac_power: int16
    ac_power_scale_factor: int16
    ac_frequency: uint16
    ac_frequency_scale_factor: int16
    ac_va: int16
    ac_va_scale_factor: int16
    ac_var: int16
    ac_var_scale_factor: int16
    ac_pf: int16
    ac_pf_scale_factor: int16
    ac_energy_wh: uint32
    ac_energy_wh_scale_factor: uint16
    dc_current: uint16
    dc_current_scale_factor: int16
    dc_voltage: uint16
    dc_voltage_scale_factor: int16
    dc_power: int16
    dc_power_scale_factor: int16
    temperature_cab: int16
    temperature_sink: int16
    temperature_trans: int16
    temperature_other: int16
    temperature_scale_factor: int16
    status: uint16
    status_vendor: uint16
    event_1: uint32
    event_2: uint32
    event_1_vendor: uint32
    event_2_vendor: uint32
    event_3_vendor: uint32
    event_4_vendor: uint32


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class SunspecInverterThreePhaseBlock(NamedTuple):
    device: Device

    did: uint16
    length: uint16
    ac_current: uint16
    ac_currenta: uint16
    ac_currentb: uint16
    ac_currentc: uint16
    ac_current_scale_factor: int16
    ac_voltageab: uint16
    ac_voltagebc: uint16
    ac_voltageca: uint16
    ac_voltagean: uint16
    ac_voltagebn: uint16
    ac_voltagecn: uint16
    ac_voltage_scale_factor: int16
    ac_power: int16
    ac_power_scale_factor: int16
    ac_frequency: uint16
    ac_frequency_scale_factor: int16
    ac_va: int16
    ac_va_scale_factor: int16
    ac_var: int16
    ac_var_scale_factor: int16
    ac_pf: int16
    ac_pf_scale_factor: int16
    ac_energy_wh: uint32
    ac_energy_wh_scale_factor: uint16
    dc_current: uint16
    dc_current_scale_factor: int16
    dc_voltage: uint16
    dc_voltage_scale_factor: int16
    dc_power: int16
    dc_power_scale_factor: int16
    temperature_cab: int16
    temperature_sink: int16
    temperature_trans: int16
    temperature_other: int16
    temperature_scale_factor: int16
    status: uint16
    status_vendor: uint16
    event_1: uint32
    event_2: uint32
    event_1_vendor: uint32
    event_2_vendor: uint32
    event_3_vendor: uint32
    event_4_vendor: uint32


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class Mate3Block(NamedTuple):
    device: Device

    ags_quiet_time_weekday_stop_hour: uint16
    ags_quiet_time_weekday_stop_minute: uint16
    ags_quiet_time_weekend_start_hour: uint16
    ags_quiet_time_weekend_start_minute: uint16
    ags_quiet_time_weekend_stop_hour: uint16
    ags_quiet_time_weekend_stop_minute: uint16
    ags_total_generator_run_time: uint32
    hbx_mode: uint16
    hbx_grid_connect_voltage: uint16
    hbx_grid_connect_delay: uint16
    hbx_grid_disconnect_voltage: uint16
    hbx_grid_disconnect_delay: uint16
    hbx_grid_connect_soc: uint16
    hbx_grid_disconnect_soc: uint16
    grid_use_interval_1_mode: uint16
    grid_use_interval_1_weekday_start_hour: uint16
    grid_use_interval_1_weekday_start_minute: uint16
    grid_use_interval_1_weekday_stop_hour: uint16
    grid_use_interval_1_weekday_stop_minute: uint16
    grid_use_interval_1_weekend_start_hour: uint16
    grid_use_interval_1_weekend_start_minute: uint16
    grid_use_interval_1_weekend_stop_hour: uint16
    grid_use_interval_1_weekend_stop_minute: uint16
    grid_use_interval_2_mode: uint16
    grid_use_interval_2_weekday_start_hour: uint16
    grid_use_interval_2_weekday_start_minute: uint16
    grid_use_interval_2_weekday_stop_hour: uint16
    grid_use_interval_2_weekday_stop_minute: uint16
    grid_use_interval_3_mode: uint16
    grid_use_interval_3_weekday_start_hour: uint16
    grid_use_interval_3_weekday_start_minute: uint16
    grid_use_interval_3_weekday_stop_hour: uint16
    grid_use_interval_3_weekday_stop_minute: uint16
    load_grid_transfer_mode: uint16
    load_grid_transfer_threshold: uint16
    load_grid_transfer_connect_delay: uint16
    load_grid_transfer_disconnect_delay: uint16
    did: uint16
    length: uint16
    major_firmware_number: uint16
    mid_firmware_number: uint16
    minor_firmware_number: uint16
    encryption_key: uint16
    mac_address: str
    write_password: str
    enable_dhcp: uint16
    tcpip_address: uint32
    tcpip_gateway_msw: uint32
    tcpip_netmask_msw: uint32
    tcpip_dns_1_msw: uint32
    tcpip_dns_2_msw: uint32
    modbus_port: uint16
    smtp_server_name: str
    smtp_account_name: str
    smtp_ssl_enable: uint16
    smtp_email_password: str
    smtp_email_user_name: str
    status_email_interval: uint16
    status_email_status_time: uint16
    status_email_subject_line: str
    status_email_to_address_1: str
    status_email_to_address_2: str
    alarm_email_enable: uint16
    alarm_email_subject_line: str
    alarm_email_to_address_1: str
    alarm_email_to_address_2: str
    ftp_password: str
    telnet_password: str
    sd_card_data_log_write_interval: uint16
    sd_card_data_log_retain_days: uint16
    sd_card_data_logging_mode: uint16
    time_server_name: str
    enable_time_server: uint16
    set_time_zone: int16
    enable_float_coordination: uint16
    enable_fndc_charge_termination: uint16
    enable_fndc_grid_tie_control: uint16
    voltage_scale_factor: int16
    hour_scale_factor: int16
    ags_mode: uint16
    ags_port: uint16
    ags_port_type: uint16
    load_grid_transfer_connect_battery_voltage: uint16
    load_grid_transfer_re_connect_battery_voltage: uint16
    global_charger_control_mode: uint16
    global_charger_control_output_limit: uint16
    radian_ac_coupled_control_mode: uint16
    radian_ac_coupled_aux_port: uint16
    url_update_lock: uint32
    web_reporting_base_url: str
    web_user_logged_in_status: uint16
    hub_type: uint16
    hub_major_firmware_number: uint16
    hub_mid_firmware_number: uint16
    hub_minor_firmware_number: uint16
    year: uint16
    month: uint16
    day: uint16
    hour: uint16
    minute: uint16
    second: uint16
    temperature_battery: int16
    temperature_ambient: int16
    temperature_scale_factor: int16
    error: uint16
    status: uint16
    update_device_firmware_port: uint16
    gateway_type: uint16
    system_voltage: uint16
    measured_system_voltage: uint16
    ags_ac_reconnect_delay: uint16
    multi_phase_coordination: uint16
    sched_1_ac_mode: int16
    sched_1_ac_mode_hour: uint16
    sched_1_ac_mode_minute: uint16
    sched_2_ac_mode: int16
    sched_2_ac_mode_hour: uint16
    sched_2_ac_mode_minute: uint16
    sched_3_ac_mode: int16
    sched_3_ac_mode_hour: uint16
    sched_3_ac_mode_minute: uint16
    auto_reboot: uint16
    spare_reg_2: uint16
    spare_reg_3: uint16
    spare_reg_4: uint16
    ags_generator_type: uint16
    ags_dc_gen_absorb_voltage: uint16
    ags_dc_gen_absorb_time: uint16
    ags_fault_time: uint16
    ags_gen_cool_down_time: uint16
    ags_gen_warm_up_time: uint16
    ags_generator_exercise_mode: uint16
    ags_exercise_start_hour: uint16
    ags_exercise_start_minute: uint16
    ags_exercise_day: uint16
    ags_exercise_period: uint16
    ags_exercise_interval: uint16
    ags_sell_mode: uint16
    ags_2_min_start_mode: uint16
    ags_2_min_start_voltage: uint16
    ags_2_hour_start_mode: uint16
    ags_2_hour_start_voltage: uint16
    ags_24_hour_start_mode: uint16
    ags_24_hour_start_voltage: uint16
    ags_load_start_mode: uint16
    ags_load_start_kw: uint16
    ags_load_start_delay: uint16
    ags_load_stop_kw: uint16
    ags_load_stop_delay: uint16
    ags_soc_start_mode: uint16
    ags_soc_start_percentage: uint16
    ags_soc_stop_percentage: uint16
    ags_enable_full_charge_mode: uint16
    ags_full_charge_interval: uint16
    ags_must_run_mode: uint16
    ags_must_run_weekday_start_hour: uint16
    ags_must_run_weekday_start_minute: uint16
    ags_must_run_weekday_stop_hour: uint16
    ags_must_run_weekday_stop_minute: uint16
    ags_must_run_weekend_start_hour: uint16
    ags_must_run_weekend_start_minute: uint16
    ags_must_run_weekend_stop_hour: uint16
    ags_must_run_weekend_stop_minute: uint16
    ags_quiet_time_mode: uint16
    ags_quiet_time_weekday_start_hour: uint16
    ags_quiet_time_weekday_start_minute: uint16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class ChargeControllerBlock(NamedTuple):
    device: Device

    did: uint16
    length: uint16
    port_number: uint16
    voltage_scale_factor: int16
    current_scale_factor: int16
    power_scale_factor: int16
    ah_scale_factor: int16
    kwh_scale_factor: int16
    battery_voltage: uint16
    array_voltage: uint16
    battery_current: uint16
    array_current: uint16
    charger_state: uint16
    watts: uint16
    todays_min_battery_volts: uint16
    todays_max_battery_volts: uint16
    voc: uint16
    todays_peak_voc: uint16
    todays_kwh: uint16
    todays_ah: uint16
    lifetime_kwh_hours: uint16
    lifetime_kamp_hours: uint16
    lifetime_max_watts: uint16
    lifetime_max_battery_volts: uint16
    lifetime_max_voc: uint16
    temperature_scale_factor: uint16
    temperature_output_fets: int16
    temperature_enclosure: int16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class ChargeControllerConfigurationBlock(NamedTuple):
    device: Device

    night_light_on_hours: uint16
    night_light_on_hyst_time: uint16
    night_light_off_hyst_time: uint16
    aux_error_battery_volts: uint16
    aux_divert_hold_time: uint16
    aux_divert_delay_time: uint16
    aux_divert_relative_volts: int16
    aux_divert_hyst_volts: uint16
    major_firmware_number: uint16
    mid_firmware_number: uint16
    minor_firmware_number: uint16
    set_data_log_day_offset: uint16
    get_current_data_log_day_offset: uint16
    data_log_daily_ah: uint16
    data_log_daily_kwh: uint16
    data_log_daily_max_output_amps: uint16
    data_log_daily_max_output_watts: uint16
    data_log_daily_absorb_time: uint16
    data_log_daily_float_time: uint16
    data_log_daily_min_battery_volts: uint16
    data_log_daily_max_battery_volts: uint16
    data_log_daily_max_input_volts: uint16
    clear_data_log_read: uint16
    clear_data_log_write_complement: uint16
    stats_maximum_reset_read: uint16
    stats_maximum_write_complement: uint16
    stats_totals_reset_read: uint16
    stats_totals_write_complement: uint16
    battery_voltage_calibrate_offset: int16
    serial_number: str
    model_number: str
    did: uint16
    length: uint16
    port_number: uint16
    voltage_scale_factor: int16
    current_scale_factor: int16
    hours_scale_factor: int16
    power_scale_factor: int16
    ah_scale_factor: int16
    kwh_scale_factor: int16
    faults: uint16
    absorb_volts: uint16
    absorb_time_hours: uint16
    absorb_end_amps: uint16
    rebulk_volts: uint16
    float_volts: uint16
    bulk_current: uint16
    eq_volts: uint16
    eq_time_hours: uint16
    auto_eq_days: uint16
    mppt_mode: uint16
    sweep_width: uint16
    sweep_max_percentage: uint16
    u_pick_pwm_duty_cycle: uint16
    grid_tie_mode: uint16
    temperature_comp_mode: uint16
    temperature_comp_lower_limit_volts: uint16
    temperature_comp_upper_limit_volts: uint16
    temperature_comp_slope: uint16
    auto_restart_mode: uint16
    wakeup_voc: uint16
    snooze_mode_amps: uint16
    wakeup_interval: uint16
    aux_mode: uint16
    aux_control: uint16
    aux_state: uint16
    aux_polarity: uint16
    aux_low_battery_disconnect: uint16
    aux_low_battery_reconnect: uint16
    aux_low_battery_disconnect_delay: uint16
    aux_vent_fan_volts: uint16
    aux_pv_limit_volts: uint16
    aux_pv_limit_hold_time: uint16
    aux_night_light_thres_volts: uint16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class FxInverterBlock(NamedTuple):
    device: Device

    did: uint16
    length: uint16
    port_number: uint16
    dc_voltage_scale_factor: int16
    ac_current_scale_factor: int16
    ac_voltage_scale_factor: int16
    ac_frequency_scale_factor: int16
    inverter_output_current: uint16
    inverter_charge_current: uint16
    inverter_buy_current: uint16
    inverter_sell_current: uint16
    output_ac_voltage: uint16
    inverter_operating_mode: uint16
    error_flags: uint16
    warning_flags: uint16
    battery_voltage: uint16
    temperature_compensated_target_voltage: uint16
    aux_output_state: uint16
    transformer_temperature: int16
    capacitor_temperature: int16
    fet_temperature: int16
    ac_input_frequency: uint16
    ac_input_voltage: uint16
    ac_input_state: uint16
    minimum_ac_input_voltage: uint16
    maximum_ac_input_voltage: uint16
    sell_status: uint16
    kwh_scale_factor: int16
    buy_kwh: uint16
    sell_kwh: uint16
    output_kwh: uint16
    charger_kwh: uint16
    output_kw: uint16
    buy_kw: uint16
    sell_kw: uint16
    charge_kw: uint16
    load_kw: uint16
    ac_couple_kw: uint16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class FxInverterConfigurationBlock(NamedTuple):
    device: Device

    grid_ac_input_current_limit: uint16
    gen_ac_input_current_limit: uint16
    charger_ac_input_current_limit: uint16
    charger_operating_mode: uint16
    grid_lower_input_voltage_limit: uint16
    grid_upper_input_voltage_limit: uint16
    grid_transfer_delay: uint16
    gen_lower_input_voltage_limit: uint16
    gen_upper_input_voltage_limit: uint16
    gen_transfer_delay: uint16
    gen_connect_delay: uint16
    ac_output_voltage: uint16
    low_battery_cut_out_voltage: uint16
    low_battery_cut_in_voltage: uint16
    aux_mode: uint16
    aux_control: uint16
    aux_load_shed_enable_voltage: uint16
    aux_gen_alert_on_voltage: uint16
    aux_gen_alert_on_delay: uint16
    aux_gen_alert_off_voltage: uint16
    aux_gen_alert_off_delay: uint16
    aux_vent_fan_enable_voltage: uint16
    aux_vent_fan_off_period: uint16
    aux_divert_enable_voltage: uint16
    aux_divert_off_delay: uint16
    stacking_mode: uint16
    master_power_save_level: uint16
    slave_power_save_level: uint16
    sell_volts: uint16
    grid_tie_window: uint16
    grid_tie_enable: uint16
    ac_input_voltage_calibrate_factor: int16
    ac_output_voltage_calibrate_factor: int16
    battery_voltage_calibrate_factor: int16
    serial_number: str
    model_number: str
    did: uint16
    length: uint16
    port_number: uint16
    dc_voltage_scale_factor: int16
    ac_current_scale_factor: int16
    ac_voltage_scale_factor: int16
    time_scale_factor: int16
    major_firmware_number: uint16
    mid_firmware_number: uint16
    minor_firmware_number: uint16
    absorb_volts: uint16
    absorb_time_hours: uint16
    float_volts: uint16
    float_time_hours: uint16
    refloat_volts: uint16
    eq_volts: uint16
    eq_time_hours: uint16
    search_sensitivity: uint16
    search_pulse_length: uint16
    search_pulse_spacing: uint16
    ac_input_type: uint16
    input_support: uint16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class SplitPhaseRadianInverterBlock(NamedTuple):
    device: Device

    did: uint16
    length: uint16
    port_number: uint16
    dc_voltage_scale_factor: int16
    ac_current_scale_factor: int16
    ac_voltage_scale_factor: int16
    ac_frequency_scale_factor: int16
    l1_inverter_output_current: int16
    l1_inverter_charge_current: int16
    l1_inverter_buy_current: int16
    l1_inverter_sell_current: int16
    l1_grid_input_ac_voltage: int16
    l1_gen_input_ac_voltage: int16
    l1_output_ac_voltage: int16
    l2_inverter_output_current: int16
    l2_inverter_charge_current: int16
    l2_inverter_buy_current: int16
    l2_inverter_sell_current: int16
    l2_grid_input_ac_voltage: int16
    l2_gen_input_ac_voltage: int16
    l2_output_ac_voltage: int16
    inverter_operating_mode: int16
    error_flags: int16
    warning_flags: int16
    battery_voltage: int16
    temperature_compensated_target_voltage: int16
    aux_output_state: int16
    aux_relay_output_state: int16
    l_module_transformer_temperature: int16
    l_module_capacitor_temperature: int16
    l_module_fet_temperature: int16
    r_module_transformer_temperature: int16
    r_module_capacitor_temperature: int16
    r_module_fet_temperature: int16
    battery_temperature: int16
    ac_input_selection: int16
    ac_input_frequency: int16
    ac_input_voltage: int16
    ac_input_state: int16
    minimum_ac_input_voltage: int16
    maximum_ac_input_voltage: int16
    sell_status: int16
    kwh_scale_factor: int16
    ac1_l1_buy_kwh: uint16
    ac2_l1_buy_kwh: uint16
    ac1_l1_sell_kwh: uint16
    ac2_l1_sell_kwh: uint16
    l1_output_kwh: uint16
    ac1_l2_buy_kwh: uint16
    ac2_l2_buy_kwh: uint16
    ac1_l2_sell_kwh: uint16
    ac2_l2_sell_kwh: uint16
    l2_output_kwh: uint16
    charger_kwh: uint16
    output_kw: uint16
    buy_kw: uint16
    sell_kw: uint16
    charge_kw: uint16
    load_kw: uint16
    ac_couple_kw: uint16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class RadianInverterConfigurationBlock(NamedTuple):
    device: Device

    aux_on_battery_voltage: uint16
    aux_on_delay_time: uint16
    aux_off_battery_voltage: uint16
    aux_off_delay_time: uint16
    aux_relay_mode: uint16
    aux_relay_control: uint16
    aux_relay_on_battery_voltage: uint16
    aux_relay_on_delay_time: uint16
    aux_relay_off_battery_voltage: uint16
    aux_relay_off_delay_time: uint16
    stacking_mode: uint16
    master_power_save_level: uint16
    slave_power_save_level: uint16
    sell_volts: uint16
    grid_tie_window: uint16
    grid_tie_enable: uint16
    grid_ac_input_voltage_calibrate_factor: int16
    gen_ac_input_voltage_calibrate_factor: int16
    ac_output_voltage_calibrate_factor: int16
    battery_voltage_calibrate_factor: int16
    rebulk_volts: uint16
    mini_grid_lbx_volts: uint16
    mini_grid_lbx_delay: uint16
    grid_zero_dod_volts: uint16
    grid_zero_dod_max_offset_ac_amps: uint16
    serial_number: str
    model_number: str
    module_control: uint16
    model_select: uint16
    low_battery_cut_out_delay: uint16
    high_battery_cut_out_voltage: uint16
    high_battery_cut_in_voltage: uint16
    high_battery_cut_out_delay: uint16
    did: uint16
    length: uint16
    port_number: uint16
    dc_voltage_scale_factor: int16
    ac_current_scale_factor: int16
    ac_voltage_scale_factor: int16
    time_scale_factor: int16
    major_firmware_number: uint16
    mid_firmware_number: uint16
    minor_firmware_number: uint16
    absorb_volts: uint16
    absorb_time_hours: uint16
    float_volts: uint16
    float_time_hours: uint16
    refloat_volts: uint16
    eq_volts: uint16
    eq_time_hours: uint16
    search_sensitivity: uint16
    search_pulse_length: uint16
    search_pulse_spacing: uint16
    ac_input_select_priority: uint16
    grid_ac_input_current_limit: uint16
    gen_ac_input_current_limit: uint16
    charger_ac_input_current_limit: uint16
    charger_operating_mode: uint16
    ac_coupled: uint16
    grid_input_mode: uint16
    grid_lower_input_voltage_limit: uint16
    grid_upper_input_voltage_limit: uint16
    grid_transfer_delay: uint16
    grid_connect_delay: uint16
    gen_input_mode: uint16
    gen_lower_input_voltage_limit: uint16
    gen_upper_input_voltage_limit: uint16
    gen_transfer_delay: uint16
    gen_connect_delay: uint16
    ac_output_voltage: uint16
    low_battery_cut_out_voltage: uint16
    low_battery_cut_in_voltage: uint16
    aux_mode: uint16
    aux_control: uint16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class SinglePhaseRadianInverterBlock(NamedTuple):
    device: Device

    output_kw: uint16
    buy_kw: uint16
    sell_kw: uint16
    charge_kw: uint16
    load_kw: uint16
    ac_couple_kw: uint16
    did: uint16
    length: uint16
    port_number: uint16
    dc_voltage_scale_factor: int16
    ac_current_scale_factor: int16
    ac_voltage_scale_factor: int16
    ac_frequency_scale_factor: int16
    inverter_output_current: uint16
    inverter_charge_current: uint16
    inverter_buy_current: uint16
    inverter_sell_current: uint16
    grid_input_ac_voltage: uint16
    gen_input_ac_voltage: uint16
    output_ac_voltage: uint16
    inverter_operating_mode: uint16
    error_flags: uint16
    warning_flags: uint16
    battery_voltage: uint16
    temperature_compensated_target_voltage: uint16
    aux_output_state: uint16
    aux_relay_output_state: uint16
    l_module_transformer_temperature: int16
    l_module_capacitor_temperature: int16
    l_module_fet_temperature: int16
    r_module_transformer_temperature: int16
    r_module_capacitor_temperature: int16
    r_module_fet_temperature: int16
    battery_temperature: int16
    ac_input_selection: uint16
    ac_input_frequency: uint16
    ac_input_voltage: uint16
    ac_input_state: uint16
    minimum_ac_input_voltage: uint16
    maximum_ac_input_voltage: uint16
    sell_status: uint16
    kwh_scale_factor: int16
    ac1_buy_kwh: uint16
    ac2_buy_kwh: uint16
    ac1_sell_kwh: uint16
    ac2_sell_kwh: uint16
    output_kwh: uint16
    charger_kwh: uint16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class FlexnetDcBlock(NamedTuple):
    device: Device

    did: uint16
    length: uint16
    port_number: uint16
    dc_voltage_scale_factor: int16
    dc_current_scale_factor: int16
    time_scale_factor: int16
    kwh_scale_factor: int16
    kw_scale_factor: int16
    shunt_a_current: int16
    shunt_b_current: int16
    shunt_c_current: int16
    battery_voltage: uint16
    battery_current: int16
    battery_temperature: int16
    status_flags: uint16
    shunt_a_accumulated_ah: int16
    shunt_a_accumulated_kwh: int16
    shunt_b_accumulated_ah: int16
    shunt_b_accumulated_kwh: int16
    shunt_c_accumulated_ah: int16
    shunt_c_accumulated_kwh: int16
    input_current: uint16
    output_current: uint16
    input_kw: uint16
    output_kw: uint16
    net_kw: int16
    days_since_charge_parameters_met: uint16
    state_of_charge: uint16
    todays_minimum_soc: uint16
    todays_maximum_soc: uint16
    todays_net_input_ah: uint16
    todays_net_input_kwh: uint16
    todays_net_output_ah: uint16
    todays_net_output_kwh: uint16
    todays_net_battery_ah: int16
    todays_net_battery_kwh: int16
    charge_factor_corrected_net_battery_ah: int16
    charge_factor_corrected_net_battery_kwh: int16
    todays_minimum_battery_voltage: uint16
    todays_minimum_battery_time: uint32
    todays_maximum_battery_voltage: uint16
    todays_maximum_battery_time: uint32
    cycle_charge_factor: uint16
    cycle_kwh_charge_efficiency: uint16
    total_days_at_100_percent: uint16
    lifetime_kah_removed: uint16
    shunt_a_historical_returned_to_battery_ah: uint16
    shunt_a_historical_returned_to_battery_kwh: uint16
    shunt_a_historical_removed_from_battery_ah: uint16
    shunt_a_historical_removed_from_battery_kwh: uint16
    shunt_a_maximum_charge_rate: uint16
    shunt_a_maximum_charge_rate_kw: uint16
    shunt_a_maximum_discharge_rate: int16
    shunt_a_maximum_discharge_rate_kw: int16
    shunt_b_historical_returned_to_battery_ah: uint16
    shunt_b_historical_returned_to_battery_kwh: uint16
    shunt_b_historical_removed_from_battery_ah: uint16
    shunt_b_historical_removed_from_battery_kwh: uint16
    shunt_b_maximum_charge_rate: uint16
    shunt_b_maximum_charge_rate_kw: uint16
    shunt_b_maximum_discharge_rate: int16
    shunt_b_maximum_discharge_rate_kw: int16
    shunt_c_historical_returned_to_battery_ah: uint16
    shunt_c_historical_returned_to_battery_kwh: uint16
    shunt_c_historical_removed_from_battery_ah: uint16
    shunt_c_historical_removed_from_battery_kwh: uint16
    shunt_c_maximum_charge_rate: uint16
    shunt_c_maximum_charge_rate_kw: uint16
    shunt_c_maximum_discharge_rate: int16
    shunt_c_maximum_discharge_rate_kw: int16
    shunt_a_reset_maximum_data: uint16
    shunt_a_reset_maximum_data_write_complement: uint16
    shunt_b_reset_maximum_data: uint16
    shunt_b_reset_maximum_data_write_complement: uint16
    shunt_c_reset_maximum_data: uint16
    shunt_c_reset_maximum_data_write_complement: uint16


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class FlexnetDcConfigurationBlock(NamedTuple):
    device: Device

    did: uint16
    length: uint16
    port_number: uint16
    dc_voltage_scale_factor: int16
    dc_current_scale_factor: int16
    kwh_scale_factor: int16
    major_firmware_number: uint16
    mid_firmware_number: uint16
    minor_firmware_number: uint16
    battery_capacity: uint16
    charged_volts: uint16
    charged_time: uint16
    battery_charged_amps: uint16
    charge_factor: uint16
    shunt_a_enabled: uint16
    shunt_b_enabled: uint16
    shunt_c_enabled: uint16
    relay_control: uint16
    relay_invert_logic: uint16
    relay_high_voltage: uint16
    relay_low_voltage: uint16
    relay_soc_high: uint16
    relay_soc_low: uint16
    relay_high_enable_delay: uint16
    relay_low_enable_delay: uint16
    set_data_log_day_offset: uint16
    get_current_data_log_day_offset: uint16
    datalog_minimum_soc: uint16
    datalog_input_ah: uint16
    datalog_input_kwh: uint16
    datalog_output_ah: uint16
    datalog_output_kwh: uint16
    datalog_net_ah: uint16
    datalog_net_kwh: uint16
    clear_data_log_read: uint16
    clear_data_log_write_complement: uint16
    serial_number: str
    model_number: str


# This file is auto generated, do not edit. The generation code can be found in code_generator.py
class OutbackSystemControlBlock(NamedTuple):
    device: Device

    did: uint16
    length: uint16
    dc_voltage_scale_factor: int16
    ac_current_scale_factor: int16
    time_scale_factor: int16
    bulk_charge_enable_disable: uint16
    inverter_ac_drop_use: uint16
    set_inverter_mode: uint16
    grid_tie_mode: uint16
    set_inverter_charger_mode: uint16
    control_status: uint16
    set_sell_voltage: uint16
    set_radian_inverter_sell_current_limit: uint16
    set_absorb_voltage: uint16
    set_absorb_time: uint16
    set_float_voltage: uint16
    set_float_time: uint16
    set_inverter_charger_current_limit: uint16
    set_inverter_ac1_current_limit: uint16
    set_inverter_ac2_current_limit: uint16
    set_ags_op_mode: uint16
    ags_operational_state: uint16
    ags_operational_state_timer: uint16
    gen_last_run_start_time_gmt: uint32
    gen_last_start_run_duration: uint32
    set_ac_output_freq_offline_mode: uint16
    set_ac_output_offline_freq: uint16
