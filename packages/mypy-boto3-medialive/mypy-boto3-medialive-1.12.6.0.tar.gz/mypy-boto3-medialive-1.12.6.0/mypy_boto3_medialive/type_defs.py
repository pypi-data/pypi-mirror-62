"""
Main interface for medialive service type definitions.

Usage::

    from mypy_boto3.medialive.type_defs import ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef

    data: ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef = {...}
"""
import sys
from typing import Any, Dict, List

if sys.version_info >= (3, 8):
    from typing import Literal
else:
    from typing_extensions import Literal
if sys.version_info >= (3, 8):
    from typing import TypedDict
else:
    from typing_extensions import TypedDict


__all__ = (
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsTypeDef",
    "ClientBatchUpdateScheduleCreatesScheduleActionsTypeDef",
    "ClientBatchUpdateScheduleCreatesTypeDef",
    "ClientBatchUpdateScheduleDeletesTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsTypeDef",
    "ClientBatchUpdateScheduleResponseCreatesTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsTypeDef",
    "ClientBatchUpdateScheduleResponseDeletesTypeDef",
    "ClientBatchUpdateScheduleResponseTypeDef",
    "ClientCreateChannelDestinationsMediaPackageSettingsTypeDef",
    "ClientCreateChannelDestinationsMultiplexSettingsTypeDef",
    "ClientCreateChannelDestinationsSettingsTypeDef",
    "ClientCreateChannelDestinationsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsAudioDescriptionsTypeDef",
    "ClientCreateChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    "ClientCreateChannelEncoderSettingsAvailBlankingTypeDef",
    "ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    "ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    "ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsAvailConfigurationTypeDef",
    "ClientCreateChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    "ClientCreateChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    "ClientCreateChannelEncoderSettingsBlackoutSlateTypeDef",
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsTypeDef",
    "ClientCreateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    "ClientCreateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    "ClientCreateChannelEncoderSettingsGlobalConfigurationTypeDef",
    "ClientCreateChannelEncoderSettingsNielsenConfigurationTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    "ClientCreateChannelEncoderSettingsOutputGroupsTypeDef",
    "ClientCreateChannelEncoderSettingsTimecodeConfigTypeDef",
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    "ClientCreateChannelEncoderSettingsVideoDescriptionsTypeDef",
    "ClientCreateChannelEncoderSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientCreateChannelInputAttachmentsInputSettingsTypeDef",
    "ClientCreateChannelInputAttachmentsTypeDef",
    "ClientCreateChannelInputSpecificationTypeDef",
    "ClientCreateChannelResponseChannelDestinationsMediaPackageSettingsTypeDef",
    "ClientCreateChannelResponseChannelDestinationsMultiplexSettingsTypeDef",
    "ClientCreateChannelResponseChannelDestinationsSettingsTypeDef",
    "ClientCreateChannelResponseChannelDestinationsTypeDef",
    "ClientCreateChannelResponseChannelEgressEndpointsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAvailBlankingTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsNielsenConfigurationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsTimecodeConfigTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsTypeDef",
    "ClientCreateChannelResponseChannelEncoderSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsTypeDef",
    "ClientCreateChannelResponseChannelInputAttachmentsTypeDef",
    "ClientCreateChannelResponseChannelInputSpecificationTypeDef",
    "ClientCreateChannelResponseChannelPipelineDetailsTypeDef",
    "ClientCreateChannelResponseChannelTypeDef",
    "ClientCreateChannelResponseTypeDef",
    "ClientCreateInputDestinationsTypeDef",
    "ClientCreateInputMediaConnectFlowsTypeDef",
    "ClientCreateInputResponseInputDestinationsVpcTypeDef",
    "ClientCreateInputResponseInputDestinationsTypeDef",
    "ClientCreateInputResponseInputMediaConnectFlowsTypeDef",
    "ClientCreateInputResponseInputSourcesTypeDef",
    "ClientCreateInputResponseInputTypeDef",
    "ClientCreateInputResponseTypeDef",
    "ClientCreateInputSecurityGroupResponseSecurityGroupWhitelistRulesTypeDef",
    "ClientCreateInputSecurityGroupResponseSecurityGroupTypeDef",
    "ClientCreateInputSecurityGroupResponseTypeDef",
    "ClientCreateInputSecurityGroupWhitelistRulesTypeDef",
    "ClientCreateInputSourcesTypeDef",
    "ClientCreateInputVpcTypeDef",
    "ClientCreateMultiplexMultiplexSettingsTypeDef",
    "ClientCreateMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef",
    "ClientCreateMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    "ClientCreateMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef",
    "ClientCreateMultiplexProgramMultiplexProgramSettingsTypeDef",
    "ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef",
    "ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    "ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef",
    "ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsTypeDef",
    "ClientCreateMultiplexProgramResponseMultiplexProgramPacketIdentifiersMapTypeDef",
    "ClientCreateMultiplexProgramResponseMultiplexProgramTypeDef",
    "ClientCreateMultiplexProgramResponseTypeDef",
    "ClientCreateMultiplexResponseMultiplexDestinationsMediaConnectSettingsTypeDef",
    "ClientCreateMultiplexResponseMultiplexDestinationsTypeDef",
    "ClientCreateMultiplexResponseMultiplexMultiplexSettingsTypeDef",
    "ClientCreateMultiplexResponseMultiplexTypeDef",
    "ClientCreateMultiplexResponseTypeDef",
    "ClientDeleteChannelResponseDestinationsMediaPackageSettingsTypeDef",
    "ClientDeleteChannelResponseDestinationsMultiplexSettingsTypeDef",
    "ClientDeleteChannelResponseDestinationsSettingsTypeDef",
    "ClientDeleteChannelResponseDestinationsTypeDef",
    "ClientDeleteChannelResponseEgressEndpointsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAvailBlankingTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsAvailConfigurationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsBlackoutSlateTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsNielsenConfigurationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsTimecodeConfigTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsTypeDef",
    "ClientDeleteChannelResponseEncoderSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsTypeDef",
    "ClientDeleteChannelResponseInputAttachmentsTypeDef",
    "ClientDeleteChannelResponseInputSpecificationTypeDef",
    "ClientDeleteChannelResponsePipelineDetailsTypeDef",
    "ClientDeleteChannelResponseTypeDef",
    "ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsServiceDescriptorTypeDef",
    "ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    "ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsTypeDef",
    "ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsTypeDef",
    "ClientDeleteMultiplexProgramResponsePacketIdentifiersMapTypeDef",
    "ClientDeleteMultiplexProgramResponseTypeDef",
    "ClientDeleteMultiplexResponseDestinationsMediaConnectSettingsTypeDef",
    "ClientDeleteMultiplexResponseDestinationsTypeDef",
    "ClientDeleteMultiplexResponseMultiplexSettingsTypeDef",
    "ClientDeleteMultiplexResponseTypeDef",
    "ClientDeleteReservationResponseResourceSpecificationTypeDef",
    "ClientDeleteReservationResponseTypeDef",
    "ClientDescribeChannelResponseDestinationsMediaPackageSettingsTypeDef",
    "ClientDescribeChannelResponseDestinationsMultiplexSettingsTypeDef",
    "ClientDescribeChannelResponseDestinationsSettingsTypeDef",
    "ClientDescribeChannelResponseDestinationsTypeDef",
    "ClientDescribeChannelResponseEgressEndpointsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAvailBlankingTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsAvailConfigurationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsBlackoutSlateTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsNielsenConfigurationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsTimecodeConfigTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsTypeDef",
    "ClientDescribeChannelResponseEncoderSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsTypeDef",
    "ClientDescribeChannelResponseInputAttachmentsTypeDef",
    "ClientDescribeChannelResponseInputSpecificationTypeDef",
    "ClientDescribeChannelResponsePipelineDetailsTypeDef",
    "ClientDescribeChannelResponseTypeDef",
    "ClientDescribeInputResponseDestinationsVpcTypeDef",
    "ClientDescribeInputResponseDestinationsTypeDef",
    "ClientDescribeInputResponseMediaConnectFlowsTypeDef",
    "ClientDescribeInputResponseSourcesTypeDef",
    "ClientDescribeInputResponseTypeDef",
    "ClientDescribeInputSecurityGroupResponseWhitelistRulesTypeDef",
    "ClientDescribeInputSecurityGroupResponseTypeDef",
    "ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsServiceDescriptorTypeDef",
    "ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    "ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsTypeDef",
    "ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsTypeDef",
    "ClientDescribeMultiplexProgramResponsePacketIdentifiersMapTypeDef",
    "ClientDescribeMultiplexProgramResponseTypeDef",
    "ClientDescribeMultiplexResponseDestinationsMediaConnectSettingsTypeDef",
    "ClientDescribeMultiplexResponseDestinationsTypeDef",
    "ClientDescribeMultiplexResponseMultiplexSettingsTypeDef",
    "ClientDescribeMultiplexResponseTypeDef",
    "ClientDescribeOfferingResponseResourceSpecificationTypeDef",
    "ClientDescribeOfferingResponseTypeDef",
    "ClientDescribeReservationResponseResourceSpecificationTypeDef",
    "ClientDescribeReservationResponseTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsTypeDef",
    "ClientDescribeScheduleResponseScheduleActionsTypeDef",
    "ClientDescribeScheduleResponseTypeDef",
    "ClientListChannelsResponseChannelsDestinationsMediaPackageSettingsTypeDef",
    "ClientListChannelsResponseChannelsDestinationsMultiplexSettingsTypeDef",
    "ClientListChannelsResponseChannelsDestinationsSettingsTypeDef",
    "ClientListChannelsResponseChannelsDestinationsTypeDef",
    "ClientListChannelsResponseChannelsEgressEndpointsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsTypeDef",
    "ClientListChannelsResponseChannelsInputAttachmentsTypeDef",
    "ClientListChannelsResponseChannelsInputSpecificationTypeDef",
    "ClientListChannelsResponseChannelsTypeDef",
    "ClientListChannelsResponseTypeDef",
    "ClientListInputSecurityGroupsResponseInputSecurityGroupsWhitelistRulesTypeDef",
    "ClientListInputSecurityGroupsResponseInputSecurityGroupsTypeDef",
    "ClientListInputSecurityGroupsResponseTypeDef",
    "ClientListInputsResponseInputsDestinationsVpcTypeDef",
    "ClientListInputsResponseInputsDestinationsTypeDef",
    "ClientListInputsResponseInputsMediaConnectFlowsTypeDef",
    "ClientListInputsResponseInputsSourcesTypeDef",
    "ClientListInputsResponseInputsTypeDef",
    "ClientListInputsResponseTypeDef",
    "ClientListMultiplexProgramsResponseMultiplexProgramsTypeDef",
    "ClientListMultiplexProgramsResponseTypeDef",
    "ClientListMultiplexesResponseMultiplexesMultiplexSettingsTypeDef",
    "ClientListMultiplexesResponseMultiplexesTypeDef",
    "ClientListMultiplexesResponseTypeDef",
    "ClientListOfferingsResponseOfferingsResourceSpecificationTypeDef",
    "ClientListOfferingsResponseOfferingsTypeDef",
    "ClientListOfferingsResponseTypeDef",
    "ClientListReservationsResponseReservationsResourceSpecificationTypeDef",
    "ClientListReservationsResponseReservationsTypeDef",
    "ClientListReservationsResponseTypeDef",
    "ClientListTagsForResourceResponseTypeDef",
    "ClientPurchaseOfferingResponseReservationResourceSpecificationTypeDef",
    "ClientPurchaseOfferingResponseReservationTypeDef",
    "ClientPurchaseOfferingResponseTypeDef",
    "ClientStartChannelResponseDestinationsMediaPackageSettingsTypeDef",
    "ClientStartChannelResponseDestinationsMultiplexSettingsTypeDef",
    "ClientStartChannelResponseDestinationsSettingsTypeDef",
    "ClientStartChannelResponseDestinationsTypeDef",
    "ClientStartChannelResponseEgressEndpointsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    "ClientStartChannelResponseEncoderSettingsAvailBlankingTypeDef",
    "ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    "ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    "ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsAvailConfigurationTypeDef",
    "ClientStartChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    "ClientStartChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    "ClientStartChannelResponseEncoderSettingsBlackoutSlateTypeDef",
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsTypeDef",
    "ClientStartChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    "ClientStartChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    "ClientStartChannelResponseEncoderSettingsGlobalConfigurationTypeDef",
    "ClientStartChannelResponseEncoderSettingsNielsenConfigurationTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef",
    "ClientStartChannelResponseEncoderSettingsOutputGroupsTypeDef",
    "ClientStartChannelResponseEncoderSettingsTimecodeConfigTypeDef",
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsTypeDef",
    "ClientStartChannelResponseEncoderSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientStartChannelResponseInputAttachmentsInputSettingsTypeDef",
    "ClientStartChannelResponseInputAttachmentsTypeDef",
    "ClientStartChannelResponseInputSpecificationTypeDef",
    "ClientStartChannelResponsePipelineDetailsTypeDef",
    "ClientStartChannelResponseTypeDef",
    "ClientStartMultiplexResponseDestinationsMediaConnectSettingsTypeDef",
    "ClientStartMultiplexResponseDestinationsTypeDef",
    "ClientStartMultiplexResponseMultiplexSettingsTypeDef",
    "ClientStartMultiplexResponseTypeDef",
    "ClientStopChannelResponseDestinationsMediaPackageSettingsTypeDef",
    "ClientStopChannelResponseDestinationsMultiplexSettingsTypeDef",
    "ClientStopChannelResponseDestinationsSettingsTypeDef",
    "ClientStopChannelResponseDestinationsTypeDef",
    "ClientStopChannelResponseEgressEndpointsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    "ClientStopChannelResponseEncoderSettingsAvailBlankingTypeDef",
    "ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    "ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    "ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsAvailConfigurationTypeDef",
    "ClientStopChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    "ClientStopChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    "ClientStopChannelResponseEncoderSettingsBlackoutSlateTypeDef",
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsTypeDef",
    "ClientStopChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    "ClientStopChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    "ClientStopChannelResponseEncoderSettingsGlobalConfigurationTypeDef",
    "ClientStopChannelResponseEncoderSettingsNielsenConfigurationTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef",
    "ClientStopChannelResponseEncoderSettingsOutputGroupsTypeDef",
    "ClientStopChannelResponseEncoderSettingsTimecodeConfigTypeDef",
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsTypeDef",
    "ClientStopChannelResponseEncoderSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientStopChannelResponseInputAttachmentsInputSettingsTypeDef",
    "ClientStopChannelResponseInputAttachmentsTypeDef",
    "ClientStopChannelResponseInputSpecificationTypeDef",
    "ClientStopChannelResponsePipelineDetailsTypeDef",
    "ClientStopChannelResponseTypeDef",
    "ClientStopMultiplexResponseDestinationsMediaConnectSettingsTypeDef",
    "ClientStopMultiplexResponseDestinationsTypeDef",
    "ClientStopMultiplexResponseMultiplexSettingsTypeDef",
    "ClientStopMultiplexResponseTypeDef",
    "ClientUpdateChannelClassDestinationsMediaPackageSettingsTypeDef",
    "ClientUpdateChannelClassDestinationsMultiplexSettingsTypeDef",
    "ClientUpdateChannelClassDestinationsSettingsTypeDef",
    "ClientUpdateChannelClassDestinationsTypeDef",
    "ClientUpdateChannelClassResponseChannelDestinationsMediaPackageSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelDestinationsMultiplexSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelDestinationsSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelDestinationsTypeDef",
    "ClientUpdateChannelClassResponseChannelEgressEndpointsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailBlankingTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsNielsenConfigurationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsTimecodeConfigTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsTypeDef",
    "ClientUpdateChannelClassResponseChannelEncoderSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputAttachmentsTypeDef",
    "ClientUpdateChannelClassResponseChannelInputSpecificationTypeDef",
    "ClientUpdateChannelClassResponseChannelPipelineDetailsTypeDef",
    "ClientUpdateChannelClassResponseChannelTypeDef",
    "ClientUpdateChannelClassResponseTypeDef",
    "ClientUpdateChannelDestinationsMediaPackageSettingsTypeDef",
    "ClientUpdateChannelDestinationsMultiplexSettingsTypeDef",
    "ClientUpdateChannelDestinationsSettingsTypeDef",
    "ClientUpdateChannelDestinationsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsTypeDef",
    "ClientUpdateChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    "ClientUpdateChannelEncoderSettingsAvailBlankingTypeDef",
    "ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    "ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    "ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsAvailConfigurationTypeDef",
    "ClientUpdateChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    "ClientUpdateChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    "ClientUpdateChannelEncoderSettingsBlackoutSlateTypeDef",
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsTypeDef",
    "ClientUpdateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    "ClientUpdateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    "ClientUpdateChannelEncoderSettingsGlobalConfigurationTypeDef",
    "ClientUpdateChannelEncoderSettingsNielsenConfigurationTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    "ClientUpdateChannelEncoderSettingsOutputGroupsTypeDef",
    "ClientUpdateChannelEncoderSettingsTimecodeConfigTypeDef",
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsTypeDef",
    "ClientUpdateChannelEncoderSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientUpdateChannelInputAttachmentsInputSettingsTypeDef",
    "ClientUpdateChannelInputAttachmentsTypeDef",
    "ClientUpdateChannelInputSpecificationTypeDef",
    "ClientUpdateChannelResponseChannelDestinationsMediaPackageSettingsTypeDef",
    "ClientUpdateChannelResponseChannelDestinationsMultiplexSettingsTypeDef",
    "ClientUpdateChannelResponseChannelDestinationsSettingsTypeDef",
    "ClientUpdateChannelResponseChannelDestinationsTypeDef",
    "ClientUpdateChannelResponseChannelEgressEndpointsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailBlankingTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsNielsenConfigurationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsTimecodeConfigTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsTypeDef",
    "ClientUpdateChannelResponseChannelEncoderSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsTypeDef",
    "ClientUpdateChannelResponseChannelInputAttachmentsTypeDef",
    "ClientUpdateChannelResponseChannelInputSpecificationTypeDef",
    "ClientUpdateChannelResponseChannelPipelineDetailsTypeDef",
    "ClientUpdateChannelResponseChannelTypeDef",
    "ClientUpdateChannelResponseTypeDef",
    "ClientUpdateInputDestinationsTypeDef",
    "ClientUpdateInputMediaConnectFlowsTypeDef",
    "ClientUpdateInputResponseInputDestinationsVpcTypeDef",
    "ClientUpdateInputResponseInputDestinationsTypeDef",
    "ClientUpdateInputResponseInputMediaConnectFlowsTypeDef",
    "ClientUpdateInputResponseInputSourcesTypeDef",
    "ClientUpdateInputResponseInputTypeDef",
    "ClientUpdateInputResponseTypeDef",
    "ClientUpdateInputSecurityGroupResponseSecurityGroupWhitelistRulesTypeDef",
    "ClientUpdateInputSecurityGroupResponseSecurityGroupTypeDef",
    "ClientUpdateInputSecurityGroupResponseTypeDef",
    "ClientUpdateInputSecurityGroupWhitelistRulesTypeDef",
    "ClientUpdateInputSourcesTypeDef",
    "ClientUpdateMultiplexMultiplexSettingsTypeDef",
    "ClientUpdateMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef",
    "ClientUpdateMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    "ClientUpdateMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef",
    "ClientUpdateMultiplexProgramMultiplexProgramSettingsTypeDef",
    "ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef",
    "ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    "ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef",
    "ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsTypeDef",
    "ClientUpdateMultiplexProgramResponseMultiplexProgramPacketIdentifiersMapTypeDef",
    "ClientUpdateMultiplexProgramResponseMultiplexProgramTypeDef",
    "ClientUpdateMultiplexProgramResponseTypeDef",
    "ClientUpdateMultiplexResponseMultiplexDestinationsMediaConnectSettingsTypeDef",
    "ClientUpdateMultiplexResponseMultiplexDestinationsTypeDef",
    "ClientUpdateMultiplexResponseMultiplexMultiplexSettingsTypeDef",
    "ClientUpdateMultiplexResponseMultiplexTypeDef",
    "ClientUpdateMultiplexResponseTypeDef",
    "ClientUpdateReservationResponseReservationResourceSpecificationTypeDef",
    "ClientUpdateReservationResponseReservationTypeDef",
    "ClientUpdateReservationResponseTypeDef",
    "HlsId3SegmentTaggingScheduleActionSettingsTypeDef",
    "HlsTimedMetadataScheduleActionSettingsTypeDef",
    "StartTimecodeTypeDef",
    "StopTimecodeTypeDef",
    "InputClippingSettingsTypeDef",
    "InputSwitchScheduleActionSettingsTypeDef",
    "PipelinePauseStateSettingsTypeDef",
    "PauseStateScheduleActionSettingsTypeDef",
    "Scte35ReturnToNetworkScheduleActionSettingsTypeDef",
    "Scte35SpliceInsertScheduleActionSettingsTypeDef",
    "Scte35DeliveryRestrictionsTypeDef",
    "Scte35SegmentationDescriptorTypeDef",
    "Scte35DescriptorSettingsTypeDef",
    "Scte35DescriptorTypeDef",
    "Scte35TimeSignalScheduleActionSettingsTypeDef",
    "InputLocationTypeDef",
    "StaticImageActivateScheduleActionSettingsTypeDef",
    "StaticImageDeactivateScheduleActionSettingsTypeDef",
    "ScheduleActionSettingsTypeDef",
    "FixedModeScheduleActionStartSettingsTypeDef",
    "FollowModeScheduleActionStartSettingsTypeDef",
    "ScheduleActionStartSettingsTypeDef",
    "ScheduleActionTypeDef",
    "DescribeScheduleResponseTypeDef",
    "ChannelEgressEndpointTypeDef",
    "AudioLanguageSelectionTypeDef",
    "AudioPidSelectionTypeDef",
    "AudioSelectorSettingsTypeDef",
    "AudioSelectorTypeDef",
    "DvbSubSourceSettingsTypeDef",
    "EmbeddedSourceSettingsTypeDef",
    "Scte20SourceSettingsTypeDef",
    "Scte27SourceSettingsTypeDef",
    "TeletextSourceSettingsTypeDef",
    "CaptionSelectorSettingsTypeDef",
    "CaptionSelectorTypeDef",
    "HlsInputSettingsTypeDef",
    "NetworkInputSettingsTypeDef",
    "VideoSelectorPidTypeDef",
    "VideoSelectorProgramIdTypeDef",
    "VideoSelectorSettingsTypeDef",
    "VideoSelectorTypeDef",
    "InputSettingsTypeDef",
    "InputAttachmentTypeDef",
    "InputSpecificationTypeDef",
    "MediaPackageOutputDestinationSettingsTypeDef",
    "MultiplexProgramChannelDestinationSettingsTypeDef",
    "OutputDestinationSettingsTypeDef",
    "OutputDestinationTypeDef",
    "ChannelSummaryTypeDef",
    "ListChannelsResponseTypeDef",
    "InputWhitelistRuleTypeDef",
    "InputSecurityGroupTypeDef",
    "ListInputSecurityGroupsResponseTypeDef",
    "InputDestinationVpcTypeDef",
    "InputDestinationTypeDef",
    "InputSourceTypeDef",
    "MediaConnectFlowTypeDef",
    "InputTypeDef",
    "ListInputsResponseTypeDef",
    "MultiplexProgramSummaryTypeDef",
    "ListMultiplexProgramsResponseTypeDef",
    "MultiplexSettingsSummaryTypeDef",
    "MultiplexSummaryTypeDef",
    "ListMultiplexesResponseTypeDef",
    "ReservationResourceSpecificationTypeDef",
    "OfferingTypeDef",
    "ListOfferingsResponseTypeDef",
    "ReservationTypeDef",
    "ListReservationsResponseTypeDef",
    "PaginatorConfigTypeDef",
    "WaiterConfigTypeDef",
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef",
    {"Tag": str},
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef",
    {"Id3": str},
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef",
    {"Timecode": str},
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef",
    {
        "LastFrameClippingBehavior": Literal["EXCLUDE_LAST_FRAME", "INCLUDE_LAST_FRAME"],
        "Timecode": str,
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef",
    {
        "InputTimecodeSource": Literal["ZEROBASED", "EMBEDDED"],
        "StartTimecode": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef,
        "StopTimecode": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef,
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef",
    {
        "InputAttachmentNameReference": str,
        "InputClippingSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef,
        "UrlPath": List[str],
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef",
    {"PipelineId": Literal["PIPELINE_0", "PIPELINE_1"]},
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef",
    {
        "Pipelines": List[
            ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef
        ]
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef",
    {"SpliceEventId": int},
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef",
    {"Duration": int, "SpliceEventId": int},
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef",
    {
        "ArchiveAllowedFlag": Literal["ARCHIVE_NOT_ALLOWED", "ARCHIVE_ALLOWED"],
        "DeviceRestrictions": Literal[
            "NONE", "RESTRICT_GROUP0", "RESTRICT_GROUP1", "RESTRICT_GROUP2"
        ],
        "NoRegionalBlackoutFlag": Literal["REGIONAL_BLACKOUT", "NO_REGIONAL_BLACKOUT"],
        "WebDeliveryAllowedFlag": Literal["WEB_DELIVERY_NOT_ALLOWED", "WEB_DELIVERY_ALLOWED"],
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef",
    {
        "DeliveryRestrictions": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef,
        "SegmentNum": int,
        "SegmentationCancelIndicator": Literal[
            "SEGMENTATION_EVENT_NOT_CANCELED", "SEGMENTATION_EVENT_CANCELED"
        ],
        "SegmentationDuration": int,
        "SegmentationEventId": int,
        "SegmentationTypeId": int,
        "SegmentationUpid": str,
        "SegmentationUpidType": int,
        "SegmentsExpected": int,
        "SubSegmentNum": int,
        "SubSegmentsExpected": int,
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef",
    {
        "SegmentationDescriptorScte35DescriptorSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef",
    {
        "Scte35DescriptorSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef",
    {
        "Scte35Descriptors": List[
            ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef
        ]
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "Image": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "Width": int,
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef",
    {"FadeOut": int, "Layer": int},
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsTypeDef",
    {
        "HlsId3SegmentTaggingSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef,
        "HlsTimedMetadataSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef,
        "InputSwitchSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef,
        "PauseStateSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef,
        "Scte35ReturnToNetworkSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef,
        "Scte35SpliceInsertSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef,
        "Scte35TimeSignalSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef,
        "StaticImageActivateSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef,
        "StaticImageDeactivateSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef,
    },
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef",
    {"Time": str},
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef",
    {"FollowPoint": Literal["END", "START"], "ReferenceActionName": str},
    total=False,
)

ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsTypeDef",
    {
        "FixedModeScheduleActionStartSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef,
        "FollowModeScheduleActionStartSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef,
        "ImmediateModeScheduleActionStartSettings": Dict[str, Any],
    },
    total=False,
)

_RequiredClientBatchUpdateScheduleCreatesScheduleActionsTypeDef = TypedDict(
    "_RequiredClientBatchUpdateScheduleCreatesScheduleActionsTypeDef",
    {
        "ActionName": str,
        "ScheduleActionSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionSettingsTypeDef,
    },
)
_OptionalClientBatchUpdateScheduleCreatesScheduleActionsTypeDef = TypedDict(
    "_OptionalClientBatchUpdateScheduleCreatesScheduleActionsTypeDef",
    {
        "ScheduleActionStartSettings": ClientBatchUpdateScheduleCreatesScheduleActionsScheduleActionStartSettingsTypeDef
    },
    total=False,
)


class ClientBatchUpdateScheduleCreatesScheduleActionsTypeDef(
    _RequiredClientBatchUpdateScheduleCreatesScheduleActionsTypeDef,
    _OptionalClientBatchUpdateScheduleCreatesScheduleActionsTypeDef,
):
    pass


ClientBatchUpdateScheduleCreatesTypeDef = TypedDict(
    "ClientBatchUpdateScheduleCreatesTypeDef",
    {"ScheduleActions": List[ClientBatchUpdateScheduleCreatesScheduleActionsTypeDef]},
)

ClientBatchUpdateScheduleDeletesTypeDef = TypedDict(
    "ClientBatchUpdateScheduleDeletesTypeDef", {"ActionNames": List[str]}
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef",
    {"Tag": str},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef",
    {"Id3": str},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef",
    {"Timecode": str},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef",
    {
        "LastFrameClippingBehavior": Literal["EXCLUDE_LAST_FRAME", "INCLUDE_LAST_FRAME"],
        "Timecode": str,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef",
    {
        "InputTimecodeSource": Literal["ZEROBASED", "EMBEDDED"],
        "StartTimecode": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef,
        "StopTimecode": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef",
    {
        "InputAttachmentNameReference": str,
        "InputClippingSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef,
        "UrlPath": List[str],
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef",
    {"PipelineId": Literal["PIPELINE_0", "PIPELINE_1"]},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef",
    {
        "Pipelines": List[
            ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef
        ]
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef",
    {"SpliceEventId": int},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef",
    {"Duration": int, "SpliceEventId": int},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef",
    {
        "ArchiveAllowedFlag": Literal["ARCHIVE_NOT_ALLOWED", "ARCHIVE_ALLOWED"],
        "DeviceRestrictions": Literal[
            "NONE", "RESTRICT_GROUP0", "RESTRICT_GROUP1", "RESTRICT_GROUP2"
        ],
        "NoRegionalBlackoutFlag": Literal["REGIONAL_BLACKOUT", "NO_REGIONAL_BLACKOUT"],
        "WebDeliveryAllowedFlag": Literal["WEB_DELIVERY_NOT_ALLOWED", "WEB_DELIVERY_ALLOWED"],
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef",
    {
        "DeliveryRestrictions": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef,
        "SegmentNum": int,
        "SegmentationCancelIndicator": Literal[
            "SEGMENTATION_EVENT_NOT_CANCELED", "SEGMENTATION_EVENT_CANCELED"
        ],
        "SegmentationDuration": int,
        "SegmentationEventId": int,
        "SegmentationTypeId": int,
        "SegmentationUpid": str,
        "SegmentationUpidType": int,
        "SegmentsExpected": int,
        "SubSegmentNum": int,
        "SubSegmentsExpected": int,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef",
    {
        "SegmentationDescriptorScte35DescriptorSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef",
    {
        "Scte35DescriptorSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef",
    {
        "Scte35Descriptors": List[
            ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef
        ]
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "Image": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "Width": int,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef",
    {"FadeOut": int, "Layer": int},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsTypeDef",
    {
        "HlsId3SegmentTaggingSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef,
        "HlsTimedMetadataSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef,
        "InputSwitchSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef,
        "PauseStateSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef,
        "Scte35ReturnToNetworkSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef,
        "Scte35SpliceInsertSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef,
        "Scte35TimeSignalSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef,
        "StaticImageActivateSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef,
        "StaticImageDeactivateSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef",
    {"Time": str},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef",
    {"FollowPoint": Literal["END", "START"], "ReferenceActionName": str},
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsTypeDef",
    {
        "FixedModeScheduleActionStartSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef,
        "FollowModeScheduleActionStartSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef,
        "ImmediateModeScheduleActionStartSettings": Dict[str, Any],
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesScheduleActionsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesScheduleActionsTypeDef",
    {
        "ActionName": str,
        "ScheduleActionSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionSettingsTypeDef,
        "ScheduleActionStartSettings": ClientBatchUpdateScheduleResponseCreatesScheduleActionsScheduleActionStartSettingsTypeDef,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseCreatesTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseCreatesTypeDef",
    {"ScheduleActions": List[ClientBatchUpdateScheduleResponseCreatesScheduleActionsTypeDef]},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef",
    {"Tag": str},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef",
    {"Id3": str},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef",
    {"Timecode": str},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef",
    {
        "LastFrameClippingBehavior": Literal["EXCLUDE_LAST_FRAME", "INCLUDE_LAST_FRAME"],
        "Timecode": str,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef",
    {
        "InputTimecodeSource": Literal["ZEROBASED", "EMBEDDED"],
        "StartTimecode": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef,
        "StopTimecode": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef",
    {
        "InputAttachmentNameReference": str,
        "InputClippingSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef,
        "UrlPath": List[str],
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef",
    {"PipelineId": Literal["PIPELINE_0", "PIPELINE_1"]},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef",
    {
        "Pipelines": List[
            ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef
        ]
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef",
    {"SpliceEventId": int},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef",
    {"Duration": int, "SpliceEventId": int},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef",
    {
        "ArchiveAllowedFlag": Literal["ARCHIVE_NOT_ALLOWED", "ARCHIVE_ALLOWED"],
        "DeviceRestrictions": Literal[
            "NONE", "RESTRICT_GROUP0", "RESTRICT_GROUP1", "RESTRICT_GROUP2"
        ],
        "NoRegionalBlackoutFlag": Literal["REGIONAL_BLACKOUT", "NO_REGIONAL_BLACKOUT"],
        "WebDeliveryAllowedFlag": Literal["WEB_DELIVERY_NOT_ALLOWED", "WEB_DELIVERY_ALLOWED"],
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef",
    {
        "DeliveryRestrictions": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef,
        "SegmentNum": int,
        "SegmentationCancelIndicator": Literal[
            "SEGMENTATION_EVENT_NOT_CANCELED", "SEGMENTATION_EVENT_CANCELED"
        ],
        "SegmentationDuration": int,
        "SegmentationEventId": int,
        "SegmentationTypeId": int,
        "SegmentationUpid": str,
        "SegmentationUpidType": int,
        "SegmentsExpected": int,
        "SubSegmentNum": int,
        "SubSegmentsExpected": int,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef",
    {
        "SegmentationDescriptorScte35DescriptorSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef",
    {
        "Scte35DescriptorSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef",
    {
        "Scte35Descriptors": List[
            ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef
        ]
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "Image": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "Width": int,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef",
    {"FadeOut": int, "Layer": int},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsTypeDef",
    {
        "HlsId3SegmentTaggingSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef,
        "HlsTimedMetadataSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef,
        "InputSwitchSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef,
        "PauseStateSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef,
        "Scte35ReturnToNetworkSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef,
        "Scte35SpliceInsertSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef,
        "Scte35TimeSignalSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef,
        "StaticImageActivateSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef,
        "StaticImageDeactivateSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef",
    {"Time": str},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef",
    {"FollowPoint": Literal["END", "START"], "ReferenceActionName": str},
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsTypeDef",
    {
        "FixedModeScheduleActionStartSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef,
        "FollowModeScheduleActionStartSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef,
        "ImmediateModeScheduleActionStartSettings": Dict[str, Any],
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesScheduleActionsTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesScheduleActionsTypeDef",
    {
        "ActionName": str,
        "ScheduleActionSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionSettingsTypeDef,
        "ScheduleActionStartSettings": ClientBatchUpdateScheduleResponseDeletesScheduleActionsScheduleActionStartSettingsTypeDef,
    },
    total=False,
)

ClientBatchUpdateScheduleResponseDeletesTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseDeletesTypeDef",
    {"ScheduleActions": List[ClientBatchUpdateScheduleResponseDeletesScheduleActionsTypeDef]},
    total=False,
)

ClientBatchUpdateScheduleResponseTypeDef = TypedDict(
    "ClientBatchUpdateScheduleResponseTypeDef",
    {
        "Creates": ClientBatchUpdateScheduleResponseCreatesTypeDef,
        "Deletes": ClientBatchUpdateScheduleResponseDeletesTypeDef,
    },
    total=False,
)

ClientCreateChannelDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientCreateChannelDestinationsMediaPackageSettingsTypeDef", {"ChannelId": str}, total=False
)

ClientCreateChannelDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientCreateChannelDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientCreateChannelDestinationsSettingsTypeDef = TypedDict(
    "ClientCreateChannelDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientCreateChannelDestinationsTypeDef = TypedDict(
    "ClientCreateChannelDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[ClientCreateChannelDestinationsMediaPackageSettingsTypeDef],
        "MultiplexSettings": ClientCreateChannelDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientCreateChannelDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_1770_1", "ITU_1770_2"],
        "AlgorithmControl": str,
        "TargetLkfs": float,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "InputType": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Profile": Literal["HEV1", "HEV2", "LC"],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": float,
        "Spec": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["HIGH", "LOW", "MEDIUM_HIGH", "MEDIUM_LOW"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY",
            "COMPLETE_MAIN",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DrcProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY", "COMPLETE_MAIN", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["DISABLED", "ENABLED"],
        "Dialnorm": int,
        "DrcLine": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "DrcRf": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["NO_PASSTHROUGH", "WHEN_POSSIBLE"],
        "PhaseControl": Literal["NO_SHIFT", "SHIFT_90_DEGREES"],
        "StereoDownmix": Literal["DPL2", "LO_RO", "LT_RT", "NOT_INDICATED"],
        "SurroundExMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
        "SurroundMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0"],
        "SampleRate": float,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "Eac3Settings": ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "PassThroughSettings": Dict[str, Any],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    {"Gain": int, "InputChannel": int},
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    {
        "InputChannelLevels": List[
            ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef
        ],
        "OutputChannel": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMappings": List[
            ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef
        ],
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientCreateChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSelectorName": str,
        "AudioType": Literal[
            "CLEAN_EFFECTS", "HEARING_IMPAIRED", "UNDEFINED", "VISUAL_IMPAIRED_COMMENTARY"
        ],
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientCreateChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef,
        "LanguageCode": str,
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "Name": str,
        "RemixSettings": ClientCreateChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelEncoderSettingsAvailBlankingTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAvailBlankingTypeDef",
    {
        "AvailBlankingImage": ClientCreateChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    {
        "Scte35SpliceInsert": ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef,
        "Scte35TimeSignalApos": ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsAvailConfigurationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsAvailConfigurationTypeDef",
    {"AvailSettings": ClientCreateChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef},
    total=False,
)

ClientCreateChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelEncoderSettingsBlackoutSlateTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsBlackoutSlateTypeDef",
    {
        "BlackoutSlateImage": ClientCreateChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef,
        "NetworkEndBlackout": Literal["DISABLED", "ENABLED"],
        "NetworkEndBlackoutImage": ClientCreateChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef,
        "NetworkId": str,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StyleControl": Literal["PASSTHROUGH", "USE_CONFIGURED"]},
    total=False,
)

ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "AribDestinationSettings": Dict[str, Any],
        "BurnInDestinationSettings": ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef,
        "DvbSubDestinationSettings": ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": Dict[str, Any],
        "EmbeddedPlusScte20DestinationSettings": Dict[str, Any],
        "RtmpCaptionInfoDestinationSettings": Dict[str, Any],
        "Scte20PlusEmbeddedDestinationSettings": Dict[str, Any],
        "Scte27DestinationSettings": Dict[str, Any],
        "SmpteTtDestinationSettings": Dict[str, Any],
        "TeletextDestinationSettings": Dict[str, Any],
        "TtmlDestinationSettings": ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
        "WebvttDestinationSettings": Dict[str, Any],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "DestinationSettings": ClientCreateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": str,
        "LanguageDescription": str,
        "Name": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    {
        "BlackFrameMsec": int,
        "InputLossImageColor": str,
        "InputLossImageSlate": ClientCreateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef,
        "InputLossImageType": Literal["COLOR", "SLATE"],
        "RepeatFrameMsec": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsGlobalConfigurationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsGlobalConfigurationTypeDef",
    {
        "InitialAudioGain": int,
        "InputEndAction": Literal["NONE", "SWITCH_AND_LOOP_INPUTS"],
        "InputLossBehavior": ClientCreateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef,
        "OutputLockingMode": Literal["EPOCH_LOCKING", "PIPELINE_LOCKING"],
        "OutputTimingSource": Literal["INPUT_CLOCK", "SYSTEM_CLOCK"],
        "SupportLowFramerateInputs": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsNielsenConfigurationTypeDef",
    {"DistributorId": str, "NielsenPcmToId3Tagging": Literal["DISABLED", "ENABLED"]},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    {
        "Destination": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef,
        "RolloverInterval": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    {
        "Destination": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {"CaptionChannel": int, "LanguageCode": str, "LanguageDescription": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
        "Salt": str,
        "Token": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "MediaStoreStorageClass": str,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    {
        "HlsAkamaiSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef,
        "HlsBasicPutSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef,
        "HlsMediaStoreSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef,
        "HlsWebdavSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    {
        "KeyProviderServer": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef,
        "StaticKeyValue": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    {
        "StaticKeySettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ADOBE", "ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "BaseUrlContent": str,
        "BaseUrlContent1": str,
        "BaseUrlManifest": str,
        "BaseUrlManifest1": str,
        "CaptionLanguageMappings": List[
            ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "NONE", "OMIT"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_4281", "RFC_6381"],
        "ConstantIv": str,
        "Destination": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "EncryptionType": Literal["AES128", "SAMPLE_AES"],
        "HlsCdnSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef,
        "HlsId3SegmentTagging": Literal["DISABLED", "ENABLED"],
        "IFrameOnlyPlaylists": Literal["DISABLED", "STANDARD"],
        "IndexNSegments": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "IvInManifest": Literal["EXCLUDE", "INCLUDE"],
        "IvSource": Literal["EXPLICIT", "FOLLOWS_SEGMENT_NUMBER"],
        "KeepSegments": int,
        "KeyFormat": str,
        "KeyFormatVersions": str,
        "KeyProviderSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinSegmentLength": int,
        "Mode": Literal["LIVE", "VOD"],
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["EXCLUDE", "INCLUDE"],
        "ProgramDateTimePeriod": int,
        "RedundantManifest": Literal["DISABLED", "ENABLED"],
        "SegmentLength": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["EXCLUDE", "INCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
        "TsFileMode": Literal["SEGMENTED_FILES", "SINGLE_FILE"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    {
        "Destination": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AcquisitionPointId": str,
        "AudioOnlyTimecodeControl": Literal["PASSTHROUGH", "USE_CONFIGURED_CLOCK"],
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef,
        "EventId": str,
        "EventIdMode": Literal["NO_EVENT_ID", "USE_CONFIGURED", "USE_TIMESTAMP"],
        "EventStopBehavior": Literal["NONE", "SEND_EOS"],
        "FilecacheDuration": int,
        "FragmentLength": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "NumRetries": int,
        "RestartDelay": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SendDelayMs": int,
        "SparseTrackType": Literal["NONE", "SCTE_35"],
        "StreamManifestBehavior": Literal["DO_NOT_SEND", "SEND"],
        "TimestampOffset": str,
        "TimestampOffsetMode": Literal["USE_CONFIGURED_OFFSET", "USE_EVENT_START_DATE"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    {
        "AuthenticationScheme": Literal["AKAMAI", "COMMON"],
        "CacheFullBehavior": Literal["DISCONNECT_IMMEDIATELY", "WAIT_FOR_SERVER"],
        "CacheLength": int,
        "CaptionData": Literal["ALL", "FIELD1_608", "FIELD1_AND_FIELD2_608"],
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "RestartDelay": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    {
        "InputLossAction": Literal["DROP_PROGRAM", "DROP_TS", "EMIT_PROGRAM"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "ArchiveGroupSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef,
        "FrameCaptureGroupSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef,
        "HlsGroupSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MediaPackageGroupSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "MultiplexGroupSettings": Dict[str, Any],
        "RtmpGroupSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef,
        "UdpGroupSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    {
        "ContainerSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    {"NameModifier": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyImage": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "SegmentType": Literal["AAC", "FMP4"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    {"AudioRenditionSets": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "EcmPid": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "Scte35Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "Scte35Pid": str,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    {
        "AudioRenditionSets": str,
        "M3u8Settings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioOnlyHlsSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef,
        "Fmp4HlsSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef,
        "StandardHlsSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    {
        "H265PackagingType": Literal["HEV1", "HVC1"],
        "HlsSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef,
        "NameModifier": str,
        "SegmentModifier": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    {"H265PackagingType": Literal["HEV1", "HVC1"], "NameModifier": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    {
        "Destination": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    {
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef,
        "NumRetries": int,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    {"ColumnDepth": int, "IncludeFec": Literal["COLUMN", "COLUMN_AND_ROW"], "RowLength": int},
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    {
        "BufferMsec": int,
        "ContainerSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef,
        "Destination": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef,
        "FecOutputSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "ArchiveOutputSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef,
        "FrameCaptureOutputSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef,
        "HlsOutputSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef,
        "MediaPackageOutputSettings": Dict[str, Any],
        "MsSmoothOutputSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef,
        "MultiplexOutputSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef,
        "RtmpOutputSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef,
        "UdpOutputSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptionNames": List[str],
        "CaptionDescriptionNames": List[str],
        "OutputName": str,
        "OutputSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "VideoDescriptionName": str,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsOutputGroupsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsOutputGroupsTypeDef",
    {
        "Name": str,
        "OutputGroupSettings": ClientCreateChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientCreateChannelEncoderSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsTimecodeConfigTypeDef",
    {"Source": Literal["EMBEDDED", "SYSTEMCLOCK", "ZEROBASED"], "SyncThreshold": int},
    total=False,
)

ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    {"CaptureInterval": int, "CaptureIntervalUnits": Literal["MILLISECONDS", "SECONDS"]},
    total=False,
)

ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "Bitrate": int,
        "BufFillPct": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef,
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopNumBFrames": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H264_LEVEL_1",
            "H264_LEVEL_1_1",
            "H264_LEVEL_1_2",
            "H264_LEVEL_1_3",
            "H264_LEVEL_2",
            "H264_LEVEL_2_1",
            "H264_LEVEL_2_2",
            "H264_LEVEL_3",
            "H264_LEVEL_3_1",
            "H264_LEVEL_3_2",
            "H264_LEVEL_4",
            "H264_LEVEL_4_1",
            "H264_LEVEL_4_2",
            "H264_LEVEL_5",
            "H264_LEVEL_5_1",
            "H264_LEVEL_5_2",
            "H264_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumRefFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR", "VBR"],
        "ScanType": Literal["INTERLACED", "PROGRESSIVE"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Softness": int,
        "SpatialAq": Literal["DISABLED", "ENABLED"],
        "SubgopLength": Literal["DYNAMIC", "FIXED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "TemporalAq": Literal["DISABLED", "ENABLED"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Hdr10Settings": ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef,
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "AlternativeTransferFunction": Literal["INSERT", "OMIT"],
        "Bitrate": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef,
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H265_LEVEL_1",
            "H265_LEVEL_2",
            "H265_LEVEL_2_1",
            "H265_LEVEL_3",
            "H265_LEVEL_3_1",
            "H265_LEVEL_4",
            "H265_LEVEL_4_1",
            "H265_LEVEL_5",
            "H265_LEVEL_5_1",
            "H265_LEVEL_5_2",
            "H265_LEVEL_6",
            "H265_LEVEL_6_1",
            "H265_LEVEL_6_2",
            "H265_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["MAIN", "MAIN_10BIT"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR"],
        "ScanType": str,
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Tier": Literal["HIGH", "MAIN"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    {
        "FrameCaptureSettings": ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelEncoderSettingsVideoDescriptionsTypeDef = TypedDict(
    "ClientCreateChannelEncoderSettingsVideoDescriptionsTypeDef",
    {
        "CodecSettings": ClientCreateChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef,
        "Height": int,
        "Name": str,
        "RespondToAfd": Literal["NONE", "PASSTHROUGH", "RESPOND"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "Width": int,
    },
    total=False,
)

_RequiredClientCreateChannelEncoderSettingsTypeDef = TypedDict(
    "_RequiredClientCreateChannelEncoderSettingsTypeDef",
    {"AudioDescriptions": List[ClientCreateChannelEncoderSettingsAudioDescriptionsTypeDef]},
)
_OptionalClientCreateChannelEncoderSettingsTypeDef = TypedDict(
    "_OptionalClientCreateChannelEncoderSettingsTypeDef",
    {
        "AvailBlanking": ClientCreateChannelEncoderSettingsAvailBlankingTypeDef,
        "AvailConfiguration": ClientCreateChannelEncoderSettingsAvailConfigurationTypeDef,
        "BlackoutSlate": ClientCreateChannelEncoderSettingsBlackoutSlateTypeDef,
        "CaptionDescriptions": List[ClientCreateChannelEncoderSettingsCaptionDescriptionsTypeDef],
        "GlobalConfiguration": ClientCreateChannelEncoderSettingsGlobalConfigurationTypeDef,
        "NielsenConfiguration": ClientCreateChannelEncoderSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientCreateChannelEncoderSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientCreateChannelEncoderSettingsTimecodeConfigTypeDef,
        "VideoDescriptions": List[ClientCreateChannelEncoderSettingsVideoDescriptionsTypeDef],
    },
    total=False,
)


class ClientCreateChannelEncoderSettingsTypeDef(
    _RequiredClientCreateChannelEncoderSettingsTypeDef,
    _OptionalClientCreateChannelEncoderSettingsTypeDef,
):
    pass


_RequiredClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "_RequiredClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str},
)
_OptionalClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "_OptionalClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)


class ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef(
    _RequiredClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
    _OptionalClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
):
    pass


ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

_RequiredClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "_RequiredClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef", {"Name": str}
)
_OptionalClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "_OptionalClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "SelectorSettings": ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef
    },
    total=False,
)


class ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef(
    _RequiredClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef,
    _OptionalClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef,
):
    pass


ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientCreateChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientCreateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientCreateChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientCreateChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientCreateChannelInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientCreateChannelInputAttachmentsTypeDef = TypedDict(
    "ClientCreateChannelInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientCreateChannelInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelInputSpecificationTypeDef = TypedDict(
    "ClientCreateChannelInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientCreateChannelResponseChannelDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelDestinationsMediaPackageSettingsTypeDef",
    {"ChannelId": str},
    total=False,
)

ClientCreateChannelResponseChannelDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientCreateChannelResponseChannelDestinationsSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientCreateChannelResponseChannelDestinationsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[
            ClientCreateChannelResponseChannelDestinationsMediaPackageSettingsTypeDef
        ],
        "MultiplexSettings": ClientCreateChannelResponseChannelDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientCreateChannelResponseChannelDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientCreateChannelResponseChannelEgressEndpointsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEgressEndpointsTypeDef", {"SourceIp": str}, total=False
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_1770_1", "ITU_1770_2"],
        "AlgorithmControl": str,
        "TargetLkfs": float,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "InputType": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Profile": Literal["HEV1", "HEV2", "LC"],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": float,
        "Spec": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["HIGH", "LOW", "MEDIUM_HIGH", "MEDIUM_LOW"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY",
            "COMPLETE_MAIN",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DrcProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY", "COMPLETE_MAIN", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["DISABLED", "ENABLED"],
        "Dialnorm": int,
        "DrcLine": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "DrcRf": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["NO_PASSTHROUGH", "WHEN_POSSIBLE"],
        "PhaseControl": Literal["NO_SHIFT", "SHIFT_90_DEGREES"],
        "StereoDownmix": Literal["DPL2", "LO_RO", "LT_RT", "NOT_INDICATED"],
        "SurroundExMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
        "SurroundMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0"],
        "SampleRate": float,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "Eac3Settings": ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "PassThroughSettings": Dict[str, Any],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    {"Gain": int, "InputChannel": int},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    {
        "InputChannelLevels": List[
            ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef
        ],
        "OutputChannel": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMappings": List[
            ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef
        ],
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSelectorName": str,
        "AudioType": Literal[
            "CLEAN_EFFECTS", "HEARING_IMPAIRED", "UNDEFINED", "VISUAL_IMPAIRED_COMMENTARY"
        ],
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef,
        "LanguageCode": str,
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "Name": str,
        "RemixSettings": ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAvailBlankingTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAvailBlankingTypeDef",
    {
        "AvailBlankingImage": ClientCreateChannelResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    {
        "Scte35SpliceInsert": ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef,
        "Scte35TimeSignalApos": ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationTypeDef",
    {
        "AvailSettings": ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateTypeDef",
    {
        "BlackoutSlateImage": ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef,
        "NetworkEndBlackout": Literal["DISABLED", "ENABLED"],
        "NetworkEndBlackoutImage": ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef,
        "NetworkId": str,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StyleControl": Literal["PASSTHROUGH", "USE_CONFIGURED"]},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "AribDestinationSettings": Dict[str, Any],
        "BurnInDestinationSettings": ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef,
        "DvbSubDestinationSettings": ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": Dict[str, Any],
        "EmbeddedPlusScte20DestinationSettings": Dict[str, Any],
        "RtmpCaptionInfoDestinationSettings": Dict[str, Any],
        "Scte20PlusEmbeddedDestinationSettings": Dict[str, Any],
        "Scte27DestinationSettings": Dict[str, Any],
        "SmpteTtDestinationSettings": Dict[str, Any],
        "TeletextDestinationSettings": Dict[str, Any],
        "TtmlDestinationSettings": ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
        "WebvttDestinationSettings": Dict[str, Any],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "DestinationSettings": ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": str,
        "LanguageDescription": str,
        "Name": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    {
        "BlackFrameMsec": int,
        "InputLossImageColor": str,
        "InputLossImageSlate": ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef,
        "InputLossImageType": Literal["COLOR", "SLATE"],
        "RepeatFrameMsec": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationTypeDef",
    {
        "InitialAudioGain": int,
        "InputEndAction": Literal["NONE", "SWITCH_AND_LOOP_INPUTS"],
        "InputLossBehavior": ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef,
        "OutputLockingMode": Literal["EPOCH_LOCKING", "PIPELINE_LOCKING"],
        "OutputTimingSource": Literal["INPUT_CLOCK", "SYSTEM_CLOCK"],
        "SupportLowFramerateInputs": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsNielsenConfigurationTypeDef",
    {"DistributorId": str, "NielsenPcmToId3Tagging": Literal["DISABLED", "ENABLED"]},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    {
        "Destination": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef,
        "RolloverInterval": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    {
        "Destination": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {"CaptionChannel": int, "LanguageCode": str, "LanguageDescription": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
        "Salt": str,
        "Token": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "MediaStoreStorageClass": str,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    {
        "HlsAkamaiSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef,
        "HlsBasicPutSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef,
        "HlsMediaStoreSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef,
        "HlsWebdavSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    {
        "KeyProviderServer": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef,
        "StaticKeyValue": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    {
        "StaticKeySettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ADOBE", "ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "BaseUrlContent": str,
        "BaseUrlContent1": str,
        "BaseUrlManifest": str,
        "BaseUrlManifest1": str,
        "CaptionLanguageMappings": List[
            ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "NONE", "OMIT"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_4281", "RFC_6381"],
        "ConstantIv": str,
        "Destination": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "EncryptionType": Literal["AES128", "SAMPLE_AES"],
        "HlsCdnSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef,
        "HlsId3SegmentTagging": Literal["DISABLED", "ENABLED"],
        "IFrameOnlyPlaylists": Literal["DISABLED", "STANDARD"],
        "IndexNSegments": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "IvInManifest": Literal["EXCLUDE", "INCLUDE"],
        "IvSource": Literal["EXPLICIT", "FOLLOWS_SEGMENT_NUMBER"],
        "KeepSegments": int,
        "KeyFormat": str,
        "KeyFormatVersions": str,
        "KeyProviderSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinSegmentLength": int,
        "Mode": Literal["LIVE", "VOD"],
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["EXCLUDE", "INCLUDE"],
        "ProgramDateTimePeriod": int,
        "RedundantManifest": Literal["DISABLED", "ENABLED"],
        "SegmentLength": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["EXCLUDE", "INCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
        "TsFileMode": Literal["SEGMENTED_FILES", "SINGLE_FILE"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    {
        "Destination": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AcquisitionPointId": str,
        "AudioOnlyTimecodeControl": Literal["PASSTHROUGH", "USE_CONFIGURED_CLOCK"],
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef,
        "EventId": str,
        "EventIdMode": Literal["NO_EVENT_ID", "USE_CONFIGURED", "USE_TIMESTAMP"],
        "EventStopBehavior": Literal["NONE", "SEND_EOS"],
        "FilecacheDuration": int,
        "FragmentLength": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "NumRetries": int,
        "RestartDelay": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SendDelayMs": int,
        "SparseTrackType": Literal["NONE", "SCTE_35"],
        "StreamManifestBehavior": Literal["DO_NOT_SEND", "SEND"],
        "TimestampOffset": str,
        "TimestampOffsetMode": Literal["USE_CONFIGURED_OFFSET", "USE_EVENT_START_DATE"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    {
        "AuthenticationScheme": Literal["AKAMAI", "COMMON"],
        "CacheFullBehavior": Literal["DISCONNECT_IMMEDIATELY", "WAIT_FOR_SERVER"],
        "CacheLength": int,
        "CaptionData": Literal["ALL", "FIELD1_608", "FIELD1_AND_FIELD2_608"],
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "RestartDelay": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    {
        "InputLossAction": Literal["DROP_PROGRAM", "DROP_TS", "EMIT_PROGRAM"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "ArchiveGroupSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef,
        "FrameCaptureGroupSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef,
        "HlsGroupSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MediaPackageGroupSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "MultiplexGroupSettings": Dict[str, Any],
        "RtmpGroupSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef,
        "UdpGroupSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    {
        "ContainerSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    {"NameModifier": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyImage": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "SegmentType": Literal["AAC", "FMP4"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    {"AudioRenditionSets": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "EcmPid": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "Scte35Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "Scte35Pid": str,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    {
        "AudioRenditionSets": str,
        "M3u8Settings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioOnlyHlsSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef,
        "Fmp4HlsSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef,
        "StandardHlsSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    {
        "H265PackagingType": Literal["HEV1", "HVC1"],
        "HlsSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef,
        "NameModifier": str,
        "SegmentModifier": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    {"H265PackagingType": Literal["HEV1", "HVC1"], "NameModifier": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    {
        "Destination": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    {
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef,
        "NumRetries": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    {"ColumnDepth": int, "IncludeFec": Literal["COLUMN", "COLUMN_AND_ROW"], "RowLength": int},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    {
        "BufferMsec": int,
        "ContainerSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef,
        "Destination": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef,
        "FecOutputSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "ArchiveOutputSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef,
        "FrameCaptureOutputSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef,
        "HlsOutputSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef,
        "MediaPackageOutputSettings": Dict[str, Any],
        "MsSmoothOutputSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef,
        "MultiplexOutputSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef,
        "RtmpOutputSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef,
        "UdpOutputSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptionNames": List[str],
        "CaptionDescriptionNames": List[str],
        "OutputName": str,
        "OutputSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "VideoDescriptionName": str,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsTypeDef",
    {
        "Name": str,
        "OutputGroupSettings": ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[
            ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef
        ],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsTimecodeConfigTypeDef",
    {"Source": Literal["EMBEDDED", "SYSTEMCLOCK", "ZEROBASED"], "SyncThreshold": int},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    {"CaptureInterval": int, "CaptureIntervalUnits": Literal["MILLISECONDS", "SECONDS"]},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "Bitrate": int,
        "BufFillPct": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef,
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopNumBFrames": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H264_LEVEL_1",
            "H264_LEVEL_1_1",
            "H264_LEVEL_1_2",
            "H264_LEVEL_1_3",
            "H264_LEVEL_2",
            "H264_LEVEL_2_1",
            "H264_LEVEL_2_2",
            "H264_LEVEL_3",
            "H264_LEVEL_3_1",
            "H264_LEVEL_3_2",
            "H264_LEVEL_4",
            "H264_LEVEL_4_1",
            "H264_LEVEL_4_2",
            "H264_LEVEL_5",
            "H264_LEVEL_5_1",
            "H264_LEVEL_5_2",
            "H264_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumRefFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR", "VBR"],
        "ScanType": Literal["INTERLACED", "PROGRESSIVE"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Softness": int,
        "SpatialAq": Literal["DISABLED", "ENABLED"],
        "SubgopLength": Literal["DYNAMIC", "FIXED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "TemporalAq": Literal["DISABLED", "ENABLED"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Hdr10Settings": ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef,
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "AlternativeTransferFunction": Literal["INSERT", "OMIT"],
        "Bitrate": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef,
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H265_LEVEL_1",
            "H265_LEVEL_2",
            "H265_LEVEL_2_1",
            "H265_LEVEL_3",
            "H265_LEVEL_3_1",
            "H265_LEVEL_4",
            "H265_LEVEL_4_1",
            "H265_LEVEL_5",
            "H265_LEVEL_5_1",
            "H265_LEVEL_5_2",
            "H265_LEVEL_6",
            "H265_LEVEL_6_1",
            "H265_LEVEL_6_2",
            "H265_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["MAIN", "MAIN_10BIT"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR"],
        "ScanType": str,
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Tier": Literal["HIGH", "MAIN"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    {
        "FrameCaptureSettings": ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsTypeDef",
    {
        "CodecSettings": ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef,
        "Height": int,
        "Name": str,
        "RespondToAfd": Literal["NONE", "PASSTHROUGH", "RESPOND"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "Width": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelEncoderSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelEncoderSettingsTypeDef",
    {
        "AudioDescriptions": List[
            ClientCreateChannelResponseChannelEncoderSettingsAudioDescriptionsTypeDef
        ],
        "AvailBlanking": ClientCreateChannelResponseChannelEncoderSettingsAvailBlankingTypeDef,
        "AvailConfiguration": ClientCreateChannelResponseChannelEncoderSettingsAvailConfigurationTypeDef,
        "BlackoutSlate": ClientCreateChannelResponseChannelEncoderSettingsBlackoutSlateTypeDef,
        "CaptionDescriptions": List[
            ClientCreateChannelResponseChannelEncoderSettingsCaptionDescriptionsTypeDef
        ],
        "GlobalConfiguration": ClientCreateChannelResponseChannelEncoderSettingsGlobalConfigurationTypeDef,
        "NielsenConfiguration": ClientCreateChannelResponseChannelEncoderSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientCreateChannelResponseChannelEncoderSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientCreateChannelResponseChannelEncoderSettingsTimecodeConfigTypeDef,
        "VideoDescriptions": List[
            ClientCreateChannelResponseChannelEncoderSettingsVideoDescriptionsTypeDef
        ],
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str, "LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "Name": str,
        "SelectorSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientCreateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientCreateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelInputAttachmentsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientCreateChannelResponseChannelInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientCreateChannelResponseChannelInputSpecificationTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientCreateChannelResponseChannelPipelineDetailsTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelPipelineDetailsTypeDef",
    {"ActiveInputAttachmentName": str, "ActiveInputSwitchActionName": str, "PipelineId": str},
    total=False,
)

ClientCreateChannelResponseChannelTypeDef = TypedDict(
    "ClientCreateChannelResponseChannelTypeDef",
    {
        "Arn": str,
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Destinations": List[ClientCreateChannelResponseChannelDestinationsTypeDef],
        "EgressEndpoints": List[ClientCreateChannelResponseChannelEgressEndpointsTypeDef],
        "EncoderSettings": ClientCreateChannelResponseChannelEncoderSettingsTypeDef,
        "Id": str,
        "InputAttachments": List[ClientCreateChannelResponseChannelInputAttachmentsTypeDef],
        "InputSpecification": ClientCreateChannelResponseChannelInputSpecificationTypeDef,
        "LogLevel": Literal["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"],
        "Name": str,
        "PipelineDetails": List[ClientCreateChannelResponseChannelPipelineDetailsTypeDef],
        "PipelinesRunningCount": int,
        "RoleArn": str,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
            "UPDATING",
            "UPDATE_FAILED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientCreateChannelResponseTypeDef = TypedDict(
    "ClientCreateChannelResponseTypeDef",
    {"Channel": ClientCreateChannelResponseChannelTypeDef},
    total=False,
)

ClientCreateInputDestinationsTypeDef = TypedDict(
    "ClientCreateInputDestinationsTypeDef", {"StreamName": str}, total=False
)

ClientCreateInputMediaConnectFlowsTypeDef = TypedDict(
    "ClientCreateInputMediaConnectFlowsTypeDef", {"FlowArn": str}, total=False
)

ClientCreateInputResponseInputDestinationsVpcTypeDef = TypedDict(
    "ClientCreateInputResponseInputDestinationsVpcTypeDef",
    {"AvailabilityZone": str, "NetworkInterfaceId": str},
    total=False,
)

ClientCreateInputResponseInputDestinationsTypeDef = TypedDict(
    "ClientCreateInputResponseInputDestinationsTypeDef",
    {
        "Ip": str,
        "Port": str,
        "Url": str,
        "Vpc": ClientCreateInputResponseInputDestinationsVpcTypeDef,
    },
    total=False,
)

ClientCreateInputResponseInputMediaConnectFlowsTypeDef = TypedDict(
    "ClientCreateInputResponseInputMediaConnectFlowsTypeDef", {"FlowArn": str}, total=False
)

ClientCreateInputResponseInputSourcesTypeDef = TypedDict(
    "ClientCreateInputResponseInputSourcesTypeDef",
    {"PasswordParam": str, "Url": str, "Username": str},
    total=False,
)

ClientCreateInputResponseInputTypeDef = TypedDict(
    "ClientCreateInputResponseInputTypeDef",
    {
        "Arn": str,
        "AttachedChannels": List[str],
        "Destinations": List[ClientCreateInputResponseInputDestinationsTypeDef],
        "Id": str,
        "InputClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "InputSourceType": Literal["STATIC", "DYNAMIC"],
        "MediaConnectFlows": List[ClientCreateInputResponseInputMediaConnectFlowsTypeDef],
        "Name": str,
        "RoleArn": str,
        "SecurityGroups": List[str],
        "Sources": List[ClientCreateInputResponseInputSourcesTypeDef],
        "State": Literal["CREATING", "DETACHED", "ATTACHED", "DELETING", "DELETED"],
        "Tags": Dict[str, str],
        "Type": Literal[
            "UDP_PUSH", "RTP_PUSH", "RTMP_PUSH", "RTMP_PULL", "URL_PULL", "MP4_FILE", "MEDIACONNECT"
        ],
    },
    total=False,
)

ClientCreateInputResponseTypeDef = TypedDict(
    "ClientCreateInputResponseTypeDef",
    {"Input": ClientCreateInputResponseInputTypeDef},
    total=False,
)

ClientCreateInputSecurityGroupResponseSecurityGroupWhitelistRulesTypeDef = TypedDict(
    "ClientCreateInputSecurityGroupResponseSecurityGroupWhitelistRulesTypeDef",
    {"Cidr": str},
    total=False,
)

ClientCreateInputSecurityGroupResponseSecurityGroupTypeDef = TypedDict(
    "ClientCreateInputSecurityGroupResponseSecurityGroupTypeDef",
    {
        "Arn": str,
        "Id": str,
        "Inputs": List[str],
        "State": Literal["IDLE", "IN_USE", "UPDATING", "DELETED"],
        "Tags": Dict[str, str],
        "WhitelistRules": List[
            ClientCreateInputSecurityGroupResponseSecurityGroupWhitelistRulesTypeDef
        ],
    },
    total=False,
)

ClientCreateInputSecurityGroupResponseTypeDef = TypedDict(
    "ClientCreateInputSecurityGroupResponseTypeDef",
    {"SecurityGroup": ClientCreateInputSecurityGroupResponseSecurityGroupTypeDef},
    total=False,
)

ClientCreateInputSecurityGroupWhitelistRulesTypeDef = TypedDict(
    "ClientCreateInputSecurityGroupWhitelistRulesTypeDef", {"Cidr": str}, total=False
)

ClientCreateInputSourcesTypeDef = TypedDict(
    "ClientCreateInputSourcesTypeDef",
    {"PasswordParam": str, "Url": str, "Username": str},
    total=False,
)

ClientCreateInputVpcTypeDef = TypedDict(
    "ClientCreateInputVpcTypeDef",
    {"SecurityGroupIds": List[str], "SubnetIds": List[str]},
    total=False,
)

_RequiredClientCreateMultiplexMultiplexSettingsTypeDef = TypedDict(
    "_RequiredClientCreateMultiplexMultiplexSettingsTypeDef",
    {"TransportStreamBitrate": int, "TransportStreamId": int},
)
_OptionalClientCreateMultiplexMultiplexSettingsTypeDef = TypedDict(
    "_OptionalClientCreateMultiplexMultiplexSettingsTypeDef",
    {"MaximumVideoBufferDelayMilliseconds": int, "TransportStreamReservedBitrate": int},
    total=False,
)


class ClientCreateMultiplexMultiplexSettingsTypeDef(
    _RequiredClientCreateMultiplexMultiplexSettingsTypeDef,
    _OptionalClientCreateMultiplexMultiplexSettingsTypeDef,
):
    pass


ClientCreateMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef = TypedDict(
    "ClientCreateMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef",
    {"ProviderName": str, "ServiceName": str},
)

ClientCreateMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef = TypedDict(
    "ClientCreateMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    {"MaximumBitrate": int, "MinimumBitrate": int},
    total=False,
)

ClientCreateMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef = TypedDict(
    "ClientCreateMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef",
    {
        "ConstantBitrate": int,
        "StatmuxSettings": ClientCreateMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef,
    },
    total=False,
)

_RequiredClientCreateMultiplexProgramMultiplexProgramSettingsTypeDef = TypedDict(
    "_RequiredClientCreateMultiplexProgramMultiplexProgramSettingsTypeDef", {"ProgramNumber": int}
)
_OptionalClientCreateMultiplexProgramMultiplexProgramSettingsTypeDef = TypedDict(
    "_OptionalClientCreateMultiplexProgramMultiplexProgramSettingsTypeDef",
    {
        "ServiceDescriptor": ClientCreateMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef,
        "VideoSettings": ClientCreateMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef,
    },
    total=False,
)


class ClientCreateMultiplexProgramMultiplexProgramSettingsTypeDef(
    _RequiredClientCreateMultiplexProgramMultiplexProgramSettingsTypeDef,
    _OptionalClientCreateMultiplexProgramMultiplexProgramSettingsTypeDef,
):
    pass


ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef = TypedDict(
    "ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef",
    {"ProviderName": str, "ServiceName": str},
    total=False,
)

ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef = TypedDict(
    "ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    {"MaximumBitrate": int, "MinimumBitrate": int},
    total=False,
)

ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef = TypedDict(
    "ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef",
    {
        "ConstantBitrate": int,
        "StatmuxSettings": ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef,
    },
    total=False,
)

ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsTypeDef = TypedDict(
    "ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsTypeDef",
    {
        "ProgramNumber": int,
        "ServiceDescriptor": ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef,
        "VideoSettings": ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef,
    },
    total=False,
)

ClientCreateMultiplexProgramResponseMultiplexProgramPacketIdentifiersMapTypeDef = TypedDict(
    "ClientCreateMultiplexProgramResponseMultiplexProgramPacketIdentifiersMapTypeDef",
    {
        "AudioPids": List[int],
        "DvbSubPids": List[int],
        "DvbTeletextPid": int,
        "EtvPlatformPid": int,
        "EtvSignalPid": int,
        "KlvDataPids": List[int],
        "PcrPid": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "Scte27Pids": List[int],
        "Scte35Pid": int,
        "TimedMetadataPid": int,
        "VideoPid": int,
    },
    total=False,
)

ClientCreateMultiplexProgramResponseMultiplexProgramTypeDef = TypedDict(
    "ClientCreateMultiplexProgramResponseMultiplexProgramTypeDef",
    {
        "ChannelId": str,
        "MultiplexProgramSettings": ClientCreateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsTypeDef,
        "PacketIdentifiersMap": ClientCreateMultiplexProgramResponseMultiplexProgramPacketIdentifiersMapTypeDef,
        "ProgramName": str,
    },
    total=False,
)

ClientCreateMultiplexProgramResponseTypeDef = TypedDict(
    "ClientCreateMultiplexProgramResponseTypeDef",
    {"MultiplexProgram": ClientCreateMultiplexProgramResponseMultiplexProgramTypeDef},
    total=False,
)

ClientCreateMultiplexResponseMultiplexDestinationsMediaConnectSettingsTypeDef = TypedDict(
    "ClientCreateMultiplexResponseMultiplexDestinationsMediaConnectSettingsTypeDef",
    {"EntitlementArn": str},
    total=False,
)

ClientCreateMultiplexResponseMultiplexDestinationsTypeDef = TypedDict(
    "ClientCreateMultiplexResponseMultiplexDestinationsTypeDef",
    {
        "MediaConnectSettings": ClientCreateMultiplexResponseMultiplexDestinationsMediaConnectSettingsTypeDef
    },
    total=False,
)

ClientCreateMultiplexResponseMultiplexMultiplexSettingsTypeDef = TypedDict(
    "ClientCreateMultiplexResponseMultiplexMultiplexSettingsTypeDef",
    {
        "MaximumVideoBufferDelayMilliseconds": int,
        "TransportStreamBitrate": int,
        "TransportStreamId": int,
        "TransportStreamReservedBitrate": int,
    },
    total=False,
)

ClientCreateMultiplexResponseMultiplexTypeDef = TypedDict(
    "ClientCreateMultiplexResponseMultiplexTypeDef",
    {
        "Arn": str,
        "AvailabilityZones": List[str],
        "Destinations": List[ClientCreateMultiplexResponseMultiplexDestinationsTypeDef],
        "Id": str,
        "MultiplexSettings": ClientCreateMultiplexResponseMultiplexMultiplexSettingsTypeDef,
        "Name": str,
        "PipelinesRunningCount": int,
        "ProgramCount": int,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientCreateMultiplexResponseTypeDef = TypedDict(
    "ClientCreateMultiplexResponseTypeDef",
    {"Multiplex": ClientCreateMultiplexResponseMultiplexTypeDef},
    total=False,
)

ClientDeleteChannelResponseDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseDestinationsMediaPackageSettingsTypeDef",
    {"ChannelId": str},
    total=False,
)

ClientDeleteChannelResponseDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientDeleteChannelResponseDestinationsSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientDeleteChannelResponseDestinationsTypeDef = TypedDict(
    "ClientDeleteChannelResponseDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[
            ClientDeleteChannelResponseDestinationsMediaPackageSettingsTypeDef
        ],
        "MultiplexSettings": ClientDeleteChannelResponseDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientDeleteChannelResponseDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientDeleteChannelResponseEgressEndpointsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEgressEndpointsTypeDef", {"SourceIp": str}, total=False
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_1770_1", "ITU_1770_2"],
        "AlgorithmControl": str,
        "TargetLkfs": float,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "InputType": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Profile": Literal["HEV1", "HEV2", "LC"],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": float,
        "Spec": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["HIGH", "LOW", "MEDIUM_HIGH", "MEDIUM_LOW"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY",
            "COMPLETE_MAIN",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DrcProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY", "COMPLETE_MAIN", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["DISABLED", "ENABLED"],
        "Dialnorm": int,
        "DrcLine": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "DrcRf": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["NO_PASSTHROUGH", "WHEN_POSSIBLE"],
        "PhaseControl": Literal["NO_SHIFT", "SHIFT_90_DEGREES"],
        "StereoDownmix": Literal["DPL2", "LO_RO", "LT_RT", "NOT_INDICATED"],
        "SurroundExMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
        "SurroundMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0"],
        "SampleRate": float,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "Eac3Settings": ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "PassThroughSettings": Dict[str, Any],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    {"Gain": int, "InputChannel": int},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    {
        "InputChannelLevels": List[
            ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef
        ],
        "OutputChannel": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMappings": List[
            ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef
        ],
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSelectorName": str,
        "AudioType": Literal[
            "CLEAN_EFFECTS", "HEARING_IMPAIRED", "UNDEFINED", "VISUAL_IMPAIRED_COMMENTARY"
        ],
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef,
        "LanguageCode": str,
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "Name": str,
        "RemixSettings": ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAvailBlankingTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAvailBlankingTypeDef",
    {
        "AvailBlankingImage": ClientDeleteChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    {
        "Scte35SpliceInsert": ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef,
        "Scte35TimeSignalApos": ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsAvailConfigurationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsAvailConfigurationTypeDef",
    {
        "AvailSettings": ClientDeleteChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsBlackoutSlateTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsBlackoutSlateTypeDef",
    {
        "BlackoutSlateImage": ClientDeleteChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef,
        "NetworkEndBlackout": Literal["DISABLED", "ENABLED"],
        "NetworkEndBlackoutImage": ClientDeleteChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef,
        "NetworkId": str,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StyleControl": Literal["PASSTHROUGH", "USE_CONFIGURED"]},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "AribDestinationSettings": Dict[str, Any],
        "BurnInDestinationSettings": ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef,
        "DvbSubDestinationSettings": ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": Dict[str, Any],
        "EmbeddedPlusScte20DestinationSettings": Dict[str, Any],
        "RtmpCaptionInfoDestinationSettings": Dict[str, Any],
        "Scte20PlusEmbeddedDestinationSettings": Dict[str, Any],
        "Scte27DestinationSettings": Dict[str, Any],
        "SmpteTtDestinationSettings": Dict[str, Any],
        "TeletextDestinationSettings": Dict[str, Any],
        "TtmlDestinationSettings": ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
        "WebvttDestinationSettings": Dict[str, Any],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "DestinationSettings": ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": str,
        "LanguageDescription": str,
        "Name": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    {
        "BlackFrameMsec": int,
        "InputLossImageColor": str,
        "InputLossImageSlate": ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef,
        "InputLossImageType": Literal["COLOR", "SLATE"],
        "RepeatFrameMsec": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationTypeDef",
    {
        "InitialAudioGain": int,
        "InputEndAction": Literal["NONE", "SWITCH_AND_LOOP_INPUTS"],
        "InputLossBehavior": ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef,
        "OutputLockingMode": Literal["EPOCH_LOCKING", "PIPELINE_LOCKING"],
        "OutputTimingSource": Literal["INPUT_CLOCK", "SYSTEM_CLOCK"],
        "SupportLowFramerateInputs": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsNielsenConfigurationTypeDef",
    {"DistributorId": str, "NielsenPcmToId3Tagging": Literal["DISABLED", "ENABLED"]},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    {
        "Destination": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef,
        "RolloverInterval": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    {
        "Destination": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {"CaptionChannel": int, "LanguageCode": str, "LanguageDescription": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
        "Salt": str,
        "Token": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "MediaStoreStorageClass": str,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    {
        "HlsAkamaiSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef,
        "HlsBasicPutSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef,
        "HlsMediaStoreSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef,
        "HlsWebdavSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    {
        "KeyProviderServer": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef,
        "StaticKeyValue": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    {
        "StaticKeySettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ADOBE", "ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "BaseUrlContent": str,
        "BaseUrlContent1": str,
        "BaseUrlManifest": str,
        "BaseUrlManifest1": str,
        "CaptionLanguageMappings": List[
            ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "NONE", "OMIT"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_4281", "RFC_6381"],
        "ConstantIv": str,
        "Destination": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "EncryptionType": Literal["AES128", "SAMPLE_AES"],
        "HlsCdnSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef,
        "HlsId3SegmentTagging": Literal["DISABLED", "ENABLED"],
        "IFrameOnlyPlaylists": Literal["DISABLED", "STANDARD"],
        "IndexNSegments": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "IvInManifest": Literal["EXCLUDE", "INCLUDE"],
        "IvSource": Literal["EXPLICIT", "FOLLOWS_SEGMENT_NUMBER"],
        "KeepSegments": int,
        "KeyFormat": str,
        "KeyFormatVersions": str,
        "KeyProviderSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinSegmentLength": int,
        "Mode": Literal["LIVE", "VOD"],
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["EXCLUDE", "INCLUDE"],
        "ProgramDateTimePeriod": int,
        "RedundantManifest": Literal["DISABLED", "ENABLED"],
        "SegmentLength": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["EXCLUDE", "INCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
        "TsFileMode": Literal["SEGMENTED_FILES", "SINGLE_FILE"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    {
        "Destination": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AcquisitionPointId": str,
        "AudioOnlyTimecodeControl": Literal["PASSTHROUGH", "USE_CONFIGURED_CLOCK"],
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef,
        "EventId": str,
        "EventIdMode": Literal["NO_EVENT_ID", "USE_CONFIGURED", "USE_TIMESTAMP"],
        "EventStopBehavior": Literal["NONE", "SEND_EOS"],
        "FilecacheDuration": int,
        "FragmentLength": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "NumRetries": int,
        "RestartDelay": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SendDelayMs": int,
        "SparseTrackType": Literal["NONE", "SCTE_35"],
        "StreamManifestBehavior": Literal["DO_NOT_SEND", "SEND"],
        "TimestampOffset": str,
        "TimestampOffsetMode": Literal["USE_CONFIGURED_OFFSET", "USE_EVENT_START_DATE"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    {
        "AuthenticationScheme": Literal["AKAMAI", "COMMON"],
        "CacheFullBehavior": Literal["DISCONNECT_IMMEDIATELY", "WAIT_FOR_SERVER"],
        "CacheLength": int,
        "CaptionData": Literal["ALL", "FIELD1_608", "FIELD1_AND_FIELD2_608"],
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "RestartDelay": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    {
        "InputLossAction": Literal["DROP_PROGRAM", "DROP_TS", "EMIT_PROGRAM"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "ArchiveGroupSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef,
        "FrameCaptureGroupSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef,
        "HlsGroupSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MediaPackageGroupSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "MultiplexGroupSettings": Dict[str, Any],
        "RtmpGroupSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef,
        "UdpGroupSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    {
        "ContainerSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    {"NameModifier": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyImage": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "SegmentType": Literal["AAC", "FMP4"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    {"AudioRenditionSets": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "EcmPid": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "Scte35Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "Scte35Pid": str,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    {
        "AudioRenditionSets": str,
        "M3u8Settings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioOnlyHlsSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef,
        "Fmp4HlsSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef,
        "StandardHlsSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    {
        "H265PackagingType": Literal["HEV1", "HVC1"],
        "HlsSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef,
        "NameModifier": str,
        "SegmentModifier": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    {"H265PackagingType": Literal["HEV1", "HVC1"], "NameModifier": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    {
        "Destination": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    {
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef,
        "NumRetries": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    {"ColumnDepth": int, "IncludeFec": Literal["COLUMN", "COLUMN_AND_ROW"], "RowLength": int},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    {
        "BufferMsec": int,
        "ContainerSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef,
        "Destination": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef,
        "FecOutputSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "ArchiveOutputSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef,
        "FrameCaptureOutputSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef,
        "HlsOutputSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef,
        "MediaPackageOutputSettings": Dict[str, Any],
        "MsSmoothOutputSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef,
        "MultiplexOutputSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef,
        "RtmpOutputSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef,
        "UdpOutputSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptionNames": List[str],
        "CaptionDescriptionNames": List[str],
        "OutputName": str,
        "OutputSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "VideoDescriptionName": str,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsOutputGroupsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsOutputGroupsTypeDef",
    {
        "Name": str,
        "OutputGroupSettings": ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientDeleteChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsTimecodeConfigTypeDef",
    {"Source": Literal["EMBEDDED", "SYSTEMCLOCK", "ZEROBASED"], "SyncThreshold": int},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    {"CaptureInterval": int, "CaptureIntervalUnits": Literal["MILLISECONDS", "SECONDS"]},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "Bitrate": int,
        "BufFillPct": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef,
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopNumBFrames": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H264_LEVEL_1",
            "H264_LEVEL_1_1",
            "H264_LEVEL_1_2",
            "H264_LEVEL_1_3",
            "H264_LEVEL_2",
            "H264_LEVEL_2_1",
            "H264_LEVEL_2_2",
            "H264_LEVEL_3",
            "H264_LEVEL_3_1",
            "H264_LEVEL_3_2",
            "H264_LEVEL_4",
            "H264_LEVEL_4_1",
            "H264_LEVEL_4_2",
            "H264_LEVEL_5",
            "H264_LEVEL_5_1",
            "H264_LEVEL_5_2",
            "H264_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumRefFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR", "VBR"],
        "ScanType": Literal["INTERLACED", "PROGRESSIVE"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Softness": int,
        "SpatialAq": Literal["DISABLED", "ENABLED"],
        "SubgopLength": Literal["DYNAMIC", "FIXED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "TemporalAq": Literal["DISABLED", "ENABLED"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Hdr10Settings": ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef,
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "AlternativeTransferFunction": Literal["INSERT", "OMIT"],
        "Bitrate": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef,
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H265_LEVEL_1",
            "H265_LEVEL_2",
            "H265_LEVEL_2_1",
            "H265_LEVEL_3",
            "H265_LEVEL_3_1",
            "H265_LEVEL_4",
            "H265_LEVEL_4_1",
            "H265_LEVEL_5",
            "H265_LEVEL_5_1",
            "H265_LEVEL_5_2",
            "H265_LEVEL_6",
            "H265_LEVEL_6_1",
            "H265_LEVEL_6_2",
            "H265_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["MAIN", "MAIN_10BIT"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR"],
        "ScanType": str,
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Tier": Literal["HIGH", "MAIN"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    {
        "FrameCaptureSettings": ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsTypeDef",
    {
        "CodecSettings": ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef,
        "Height": int,
        "Name": str,
        "RespondToAfd": Literal["NONE", "PASSTHROUGH", "RESPOND"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "Width": int,
    },
    total=False,
)

ClientDeleteChannelResponseEncoderSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseEncoderSettingsTypeDef",
    {
        "AudioDescriptions": List[
            ClientDeleteChannelResponseEncoderSettingsAudioDescriptionsTypeDef
        ],
        "AvailBlanking": ClientDeleteChannelResponseEncoderSettingsAvailBlankingTypeDef,
        "AvailConfiguration": ClientDeleteChannelResponseEncoderSettingsAvailConfigurationTypeDef,
        "BlackoutSlate": ClientDeleteChannelResponseEncoderSettingsBlackoutSlateTypeDef,
        "CaptionDescriptions": List[
            ClientDeleteChannelResponseEncoderSettingsCaptionDescriptionsTypeDef
        ],
        "GlobalConfiguration": ClientDeleteChannelResponseEncoderSettingsGlobalConfigurationTypeDef,
        "NielsenConfiguration": ClientDeleteChannelResponseEncoderSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientDeleteChannelResponseEncoderSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientDeleteChannelResponseEncoderSettingsTimecodeConfigTypeDef,
        "VideoDescriptions": List[
            ClientDeleteChannelResponseEncoderSettingsVideoDescriptionsTypeDef
        ],
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str, "LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "Name": str,
        "SelectorSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientDeleteChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientDeleteChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientDeleteChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseInputAttachmentsTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientDeleteChannelResponseInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientDeleteChannelResponseInputSpecificationTypeDef = TypedDict(
    "ClientDeleteChannelResponseInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientDeleteChannelResponsePipelineDetailsTypeDef = TypedDict(
    "ClientDeleteChannelResponsePipelineDetailsTypeDef",
    {"ActiveInputAttachmentName": str, "ActiveInputSwitchActionName": str, "PipelineId": str},
    total=False,
)

ClientDeleteChannelResponseTypeDef = TypedDict(
    "ClientDeleteChannelResponseTypeDef",
    {
        "Arn": str,
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Destinations": List[ClientDeleteChannelResponseDestinationsTypeDef],
        "EgressEndpoints": List[ClientDeleteChannelResponseEgressEndpointsTypeDef],
        "EncoderSettings": ClientDeleteChannelResponseEncoderSettingsTypeDef,
        "Id": str,
        "InputAttachments": List[ClientDeleteChannelResponseInputAttachmentsTypeDef],
        "InputSpecification": ClientDeleteChannelResponseInputSpecificationTypeDef,
        "LogLevel": Literal["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"],
        "Name": str,
        "PipelineDetails": List[ClientDeleteChannelResponsePipelineDetailsTypeDef],
        "PipelinesRunningCount": int,
        "RoleArn": str,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
            "UPDATING",
            "UPDATE_FAILED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsServiceDescriptorTypeDef = TypedDict(
    "ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsServiceDescriptorTypeDef",
    {"ProviderName": str, "ServiceName": str},
    total=False,
)

ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef = TypedDict(
    "ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    {"MaximumBitrate": int, "MinimumBitrate": int},
    total=False,
)

ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsTypeDef = TypedDict(
    "ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsTypeDef",
    {
        "ConstantBitrate": int,
        "StatmuxSettings": ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef,
    },
    total=False,
)

ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsTypeDef = TypedDict(
    "ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsTypeDef",
    {
        "ProgramNumber": int,
        "ServiceDescriptor": ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsServiceDescriptorTypeDef,
        "VideoSettings": ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsTypeDef,
    },
    total=False,
)

ClientDeleteMultiplexProgramResponsePacketIdentifiersMapTypeDef = TypedDict(
    "ClientDeleteMultiplexProgramResponsePacketIdentifiersMapTypeDef",
    {
        "AudioPids": List[int],
        "DvbSubPids": List[int],
        "DvbTeletextPid": int,
        "EtvPlatformPid": int,
        "EtvSignalPid": int,
        "KlvDataPids": List[int],
        "PcrPid": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "Scte27Pids": List[int],
        "Scte35Pid": int,
        "TimedMetadataPid": int,
        "VideoPid": int,
    },
    total=False,
)

ClientDeleteMultiplexProgramResponseTypeDef = TypedDict(
    "ClientDeleteMultiplexProgramResponseTypeDef",
    {
        "ChannelId": str,
        "MultiplexProgramSettings": ClientDeleteMultiplexProgramResponseMultiplexProgramSettingsTypeDef,
        "PacketIdentifiersMap": ClientDeleteMultiplexProgramResponsePacketIdentifiersMapTypeDef,
        "ProgramName": str,
    },
    total=False,
)

ClientDeleteMultiplexResponseDestinationsMediaConnectSettingsTypeDef = TypedDict(
    "ClientDeleteMultiplexResponseDestinationsMediaConnectSettingsTypeDef",
    {"EntitlementArn": str},
    total=False,
)

ClientDeleteMultiplexResponseDestinationsTypeDef = TypedDict(
    "ClientDeleteMultiplexResponseDestinationsTypeDef",
    {"MediaConnectSettings": ClientDeleteMultiplexResponseDestinationsMediaConnectSettingsTypeDef},
    total=False,
)

ClientDeleteMultiplexResponseMultiplexSettingsTypeDef = TypedDict(
    "ClientDeleteMultiplexResponseMultiplexSettingsTypeDef",
    {
        "MaximumVideoBufferDelayMilliseconds": int,
        "TransportStreamBitrate": int,
        "TransportStreamId": int,
        "TransportStreamReservedBitrate": int,
    },
    total=False,
)

ClientDeleteMultiplexResponseTypeDef = TypedDict(
    "ClientDeleteMultiplexResponseTypeDef",
    {
        "Arn": str,
        "AvailabilityZones": List[str],
        "Destinations": List[ClientDeleteMultiplexResponseDestinationsTypeDef],
        "Id": str,
        "MultiplexSettings": ClientDeleteMultiplexResponseMultiplexSettingsTypeDef,
        "Name": str,
        "PipelinesRunningCount": int,
        "ProgramCount": int,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientDeleteReservationResponseResourceSpecificationTypeDef = TypedDict(
    "ClientDeleteReservationResponseResourceSpecificationTypeDef",
    {
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Codec": Literal["MPEG2", "AVC", "HEVC", "AUDIO"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "MaximumFramerate": Literal["MAX_30_FPS", "MAX_60_FPS"],
        "Resolution": Literal["SD", "HD", "FHD", "UHD"],
        "ResourceType": Literal["INPUT", "OUTPUT", "MULTIPLEX", "CHANNEL"],
        "SpecialFeature": Literal["ADVANCED_AUDIO", "AUDIO_NORMALIZATION"],
        "VideoQuality": Literal["STANDARD", "ENHANCED", "PREMIUM"],
    },
    total=False,
)

ClientDeleteReservationResponseTypeDef = TypedDict(
    "ClientDeleteReservationResponseTypeDef",
    {
        "Arn": str,
        "Count": int,
        "CurrencyCode": str,
        "Duration": int,
        "DurationUnits": str,
        "End": str,
        "FixedPrice": float,
        "Name": str,
        "OfferingDescription": str,
        "OfferingId": str,
        "OfferingType": str,
        "Region": str,
        "ReservationId": str,
        "ResourceSpecification": ClientDeleteReservationResponseResourceSpecificationTypeDef,
        "Start": str,
        "State": Literal["ACTIVE", "EXPIRED", "CANCELED", "DELETED"],
        "Tags": Dict[str, str],
        "UsagePrice": float,
    },
    total=False,
)

ClientDescribeChannelResponseDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseDestinationsMediaPackageSettingsTypeDef",
    {"ChannelId": str},
    total=False,
)

ClientDescribeChannelResponseDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientDescribeChannelResponseDestinationsSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientDescribeChannelResponseDestinationsTypeDef = TypedDict(
    "ClientDescribeChannelResponseDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[
            ClientDescribeChannelResponseDestinationsMediaPackageSettingsTypeDef
        ],
        "MultiplexSettings": ClientDescribeChannelResponseDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientDescribeChannelResponseDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientDescribeChannelResponseEgressEndpointsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEgressEndpointsTypeDef", {"SourceIp": str}, total=False
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_1770_1", "ITU_1770_2"],
        "AlgorithmControl": str,
        "TargetLkfs": float,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "InputType": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Profile": Literal["HEV1", "HEV2", "LC"],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": float,
        "Spec": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["HIGH", "LOW", "MEDIUM_HIGH", "MEDIUM_LOW"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY",
            "COMPLETE_MAIN",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DrcProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY", "COMPLETE_MAIN", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["DISABLED", "ENABLED"],
        "Dialnorm": int,
        "DrcLine": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "DrcRf": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["NO_PASSTHROUGH", "WHEN_POSSIBLE"],
        "PhaseControl": Literal["NO_SHIFT", "SHIFT_90_DEGREES"],
        "StereoDownmix": Literal["DPL2", "LO_RO", "LT_RT", "NOT_INDICATED"],
        "SurroundExMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
        "SurroundMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0"],
        "SampleRate": float,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "Eac3Settings": ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "PassThroughSettings": Dict[str, Any],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    {"Gain": int, "InputChannel": int},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    {
        "InputChannelLevels": List[
            ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef
        ],
        "OutputChannel": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMappings": List[
            ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef
        ],
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSelectorName": str,
        "AudioType": Literal[
            "CLEAN_EFFECTS", "HEARING_IMPAIRED", "UNDEFINED", "VISUAL_IMPAIRED_COMMENTARY"
        ],
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef,
        "LanguageCode": str,
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "Name": str,
        "RemixSettings": ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAvailBlankingTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAvailBlankingTypeDef",
    {
        "AvailBlankingImage": ClientDescribeChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    {
        "Scte35SpliceInsert": ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef,
        "Scte35TimeSignalApos": ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsAvailConfigurationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsAvailConfigurationTypeDef",
    {
        "AvailSettings": ClientDescribeChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsBlackoutSlateTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsBlackoutSlateTypeDef",
    {
        "BlackoutSlateImage": ClientDescribeChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef,
        "NetworkEndBlackout": Literal["DISABLED", "ENABLED"],
        "NetworkEndBlackoutImage": ClientDescribeChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef,
        "NetworkId": str,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StyleControl": Literal["PASSTHROUGH", "USE_CONFIGURED"]},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "AribDestinationSettings": Dict[str, Any],
        "BurnInDestinationSettings": ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef,
        "DvbSubDestinationSettings": ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": Dict[str, Any],
        "EmbeddedPlusScte20DestinationSettings": Dict[str, Any],
        "RtmpCaptionInfoDestinationSettings": Dict[str, Any],
        "Scte20PlusEmbeddedDestinationSettings": Dict[str, Any],
        "Scte27DestinationSettings": Dict[str, Any],
        "SmpteTtDestinationSettings": Dict[str, Any],
        "TeletextDestinationSettings": Dict[str, Any],
        "TtmlDestinationSettings": ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
        "WebvttDestinationSettings": Dict[str, Any],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "DestinationSettings": ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": str,
        "LanguageDescription": str,
        "Name": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    {
        "BlackFrameMsec": int,
        "InputLossImageColor": str,
        "InputLossImageSlate": ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef,
        "InputLossImageType": Literal["COLOR", "SLATE"],
        "RepeatFrameMsec": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationTypeDef",
    {
        "InitialAudioGain": int,
        "InputEndAction": Literal["NONE", "SWITCH_AND_LOOP_INPUTS"],
        "InputLossBehavior": ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef,
        "OutputLockingMode": Literal["EPOCH_LOCKING", "PIPELINE_LOCKING"],
        "OutputTimingSource": Literal["INPUT_CLOCK", "SYSTEM_CLOCK"],
        "SupportLowFramerateInputs": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsNielsenConfigurationTypeDef",
    {"DistributorId": str, "NielsenPcmToId3Tagging": Literal["DISABLED", "ENABLED"]},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    {
        "Destination": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef,
        "RolloverInterval": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    {
        "Destination": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {"CaptionChannel": int, "LanguageCode": str, "LanguageDescription": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
        "Salt": str,
        "Token": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "MediaStoreStorageClass": str,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    {
        "HlsAkamaiSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef,
        "HlsBasicPutSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef,
        "HlsMediaStoreSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef,
        "HlsWebdavSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    {
        "KeyProviderServer": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef,
        "StaticKeyValue": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    {
        "StaticKeySettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ADOBE", "ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "BaseUrlContent": str,
        "BaseUrlContent1": str,
        "BaseUrlManifest": str,
        "BaseUrlManifest1": str,
        "CaptionLanguageMappings": List[
            ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "NONE", "OMIT"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_4281", "RFC_6381"],
        "ConstantIv": str,
        "Destination": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "EncryptionType": Literal["AES128", "SAMPLE_AES"],
        "HlsCdnSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef,
        "HlsId3SegmentTagging": Literal["DISABLED", "ENABLED"],
        "IFrameOnlyPlaylists": Literal["DISABLED", "STANDARD"],
        "IndexNSegments": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "IvInManifest": Literal["EXCLUDE", "INCLUDE"],
        "IvSource": Literal["EXPLICIT", "FOLLOWS_SEGMENT_NUMBER"],
        "KeepSegments": int,
        "KeyFormat": str,
        "KeyFormatVersions": str,
        "KeyProviderSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinSegmentLength": int,
        "Mode": Literal["LIVE", "VOD"],
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["EXCLUDE", "INCLUDE"],
        "ProgramDateTimePeriod": int,
        "RedundantManifest": Literal["DISABLED", "ENABLED"],
        "SegmentLength": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["EXCLUDE", "INCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
        "TsFileMode": Literal["SEGMENTED_FILES", "SINGLE_FILE"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    {
        "Destination": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AcquisitionPointId": str,
        "AudioOnlyTimecodeControl": Literal["PASSTHROUGH", "USE_CONFIGURED_CLOCK"],
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef,
        "EventId": str,
        "EventIdMode": Literal["NO_EVENT_ID", "USE_CONFIGURED", "USE_TIMESTAMP"],
        "EventStopBehavior": Literal["NONE", "SEND_EOS"],
        "FilecacheDuration": int,
        "FragmentLength": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "NumRetries": int,
        "RestartDelay": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SendDelayMs": int,
        "SparseTrackType": Literal["NONE", "SCTE_35"],
        "StreamManifestBehavior": Literal["DO_NOT_SEND", "SEND"],
        "TimestampOffset": str,
        "TimestampOffsetMode": Literal["USE_CONFIGURED_OFFSET", "USE_EVENT_START_DATE"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    {
        "AuthenticationScheme": Literal["AKAMAI", "COMMON"],
        "CacheFullBehavior": Literal["DISCONNECT_IMMEDIATELY", "WAIT_FOR_SERVER"],
        "CacheLength": int,
        "CaptionData": Literal["ALL", "FIELD1_608", "FIELD1_AND_FIELD2_608"],
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "RestartDelay": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    {
        "InputLossAction": Literal["DROP_PROGRAM", "DROP_TS", "EMIT_PROGRAM"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "ArchiveGroupSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef,
        "FrameCaptureGroupSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef,
        "HlsGroupSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MediaPackageGroupSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "MultiplexGroupSettings": Dict[str, Any],
        "RtmpGroupSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef,
        "UdpGroupSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    {
        "ContainerSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    {"NameModifier": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyImage": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "SegmentType": Literal["AAC", "FMP4"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    {"AudioRenditionSets": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "EcmPid": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "Scte35Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "Scte35Pid": str,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    {
        "AudioRenditionSets": str,
        "M3u8Settings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioOnlyHlsSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef,
        "Fmp4HlsSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef,
        "StandardHlsSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    {
        "H265PackagingType": Literal["HEV1", "HVC1"],
        "HlsSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef,
        "NameModifier": str,
        "SegmentModifier": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    {"H265PackagingType": Literal["HEV1", "HVC1"], "NameModifier": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    {
        "Destination": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    {
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef,
        "NumRetries": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    {"ColumnDepth": int, "IncludeFec": Literal["COLUMN", "COLUMN_AND_ROW"], "RowLength": int},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    {
        "BufferMsec": int,
        "ContainerSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef,
        "Destination": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef,
        "FecOutputSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "ArchiveOutputSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef,
        "FrameCaptureOutputSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef,
        "HlsOutputSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef,
        "MediaPackageOutputSettings": Dict[str, Any],
        "MsSmoothOutputSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef,
        "MultiplexOutputSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef,
        "RtmpOutputSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef,
        "UdpOutputSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptionNames": List[str],
        "CaptionDescriptionNames": List[str],
        "OutputName": str,
        "OutputSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "VideoDescriptionName": str,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsOutputGroupsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsOutputGroupsTypeDef",
    {
        "Name": str,
        "OutputGroupSettings": ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientDescribeChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsTimecodeConfigTypeDef",
    {"Source": Literal["EMBEDDED", "SYSTEMCLOCK", "ZEROBASED"], "SyncThreshold": int},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    {"CaptureInterval": int, "CaptureIntervalUnits": Literal["MILLISECONDS", "SECONDS"]},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "Bitrate": int,
        "BufFillPct": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef,
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopNumBFrames": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H264_LEVEL_1",
            "H264_LEVEL_1_1",
            "H264_LEVEL_1_2",
            "H264_LEVEL_1_3",
            "H264_LEVEL_2",
            "H264_LEVEL_2_1",
            "H264_LEVEL_2_2",
            "H264_LEVEL_3",
            "H264_LEVEL_3_1",
            "H264_LEVEL_3_2",
            "H264_LEVEL_4",
            "H264_LEVEL_4_1",
            "H264_LEVEL_4_2",
            "H264_LEVEL_5",
            "H264_LEVEL_5_1",
            "H264_LEVEL_5_2",
            "H264_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumRefFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR", "VBR"],
        "ScanType": Literal["INTERLACED", "PROGRESSIVE"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Softness": int,
        "SpatialAq": Literal["DISABLED", "ENABLED"],
        "SubgopLength": Literal["DYNAMIC", "FIXED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "TemporalAq": Literal["DISABLED", "ENABLED"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Hdr10Settings": ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef,
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "AlternativeTransferFunction": Literal["INSERT", "OMIT"],
        "Bitrate": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef,
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H265_LEVEL_1",
            "H265_LEVEL_2",
            "H265_LEVEL_2_1",
            "H265_LEVEL_3",
            "H265_LEVEL_3_1",
            "H265_LEVEL_4",
            "H265_LEVEL_4_1",
            "H265_LEVEL_5",
            "H265_LEVEL_5_1",
            "H265_LEVEL_5_2",
            "H265_LEVEL_6",
            "H265_LEVEL_6_1",
            "H265_LEVEL_6_2",
            "H265_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["MAIN", "MAIN_10BIT"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR"],
        "ScanType": str,
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Tier": Literal["HIGH", "MAIN"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    {
        "FrameCaptureSettings": ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsTypeDef",
    {
        "CodecSettings": ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef,
        "Height": int,
        "Name": str,
        "RespondToAfd": Literal["NONE", "PASSTHROUGH", "RESPOND"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "Width": int,
    },
    total=False,
)

ClientDescribeChannelResponseEncoderSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseEncoderSettingsTypeDef",
    {
        "AudioDescriptions": List[
            ClientDescribeChannelResponseEncoderSettingsAudioDescriptionsTypeDef
        ],
        "AvailBlanking": ClientDescribeChannelResponseEncoderSettingsAvailBlankingTypeDef,
        "AvailConfiguration": ClientDescribeChannelResponseEncoderSettingsAvailConfigurationTypeDef,
        "BlackoutSlate": ClientDescribeChannelResponseEncoderSettingsBlackoutSlateTypeDef,
        "CaptionDescriptions": List[
            ClientDescribeChannelResponseEncoderSettingsCaptionDescriptionsTypeDef
        ],
        "GlobalConfiguration": ClientDescribeChannelResponseEncoderSettingsGlobalConfigurationTypeDef,
        "NielsenConfiguration": ClientDescribeChannelResponseEncoderSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientDescribeChannelResponseEncoderSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientDescribeChannelResponseEncoderSettingsTimecodeConfigTypeDef,
        "VideoDescriptions": List[
            ClientDescribeChannelResponseEncoderSettingsVideoDescriptionsTypeDef
        ],
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str, "LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "Name": str,
        "SelectorSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientDescribeChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientDescribeChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientDescribeChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseInputAttachmentsTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientDescribeChannelResponseInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientDescribeChannelResponseInputSpecificationTypeDef = TypedDict(
    "ClientDescribeChannelResponseInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientDescribeChannelResponsePipelineDetailsTypeDef = TypedDict(
    "ClientDescribeChannelResponsePipelineDetailsTypeDef",
    {"ActiveInputAttachmentName": str, "ActiveInputSwitchActionName": str, "PipelineId": str},
    total=False,
)

ClientDescribeChannelResponseTypeDef = TypedDict(
    "ClientDescribeChannelResponseTypeDef",
    {
        "Arn": str,
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Destinations": List[ClientDescribeChannelResponseDestinationsTypeDef],
        "EgressEndpoints": List[ClientDescribeChannelResponseEgressEndpointsTypeDef],
        "EncoderSettings": ClientDescribeChannelResponseEncoderSettingsTypeDef,
        "Id": str,
        "InputAttachments": List[ClientDescribeChannelResponseInputAttachmentsTypeDef],
        "InputSpecification": ClientDescribeChannelResponseInputSpecificationTypeDef,
        "LogLevel": Literal["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"],
        "Name": str,
        "PipelineDetails": List[ClientDescribeChannelResponsePipelineDetailsTypeDef],
        "PipelinesRunningCount": int,
        "RoleArn": str,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
            "UPDATING",
            "UPDATE_FAILED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientDescribeInputResponseDestinationsVpcTypeDef = TypedDict(
    "ClientDescribeInputResponseDestinationsVpcTypeDef",
    {"AvailabilityZone": str, "NetworkInterfaceId": str},
    total=False,
)

ClientDescribeInputResponseDestinationsTypeDef = TypedDict(
    "ClientDescribeInputResponseDestinationsTypeDef",
    {"Ip": str, "Port": str, "Url": str, "Vpc": ClientDescribeInputResponseDestinationsVpcTypeDef},
    total=False,
)

ClientDescribeInputResponseMediaConnectFlowsTypeDef = TypedDict(
    "ClientDescribeInputResponseMediaConnectFlowsTypeDef", {"FlowArn": str}, total=False
)

ClientDescribeInputResponseSourcesTypeDef = TypedDict(
    "ClientDescribeInputResponseSourcesTypeDef",
    {"PasswordParam": str, "Url": str, "Username": str},
    total=False,
)

ClientDescribeInputResponseTypeDef = TypedDict(
    "ClientDescribeInputResponseTypeDef",
    {
        "Arn": str,
        "AttachedChannels": List[str],
        "Destinations": List[ClientDescribeInputResponseDestinationsTypeDef],
        "Id": str,
        "InputClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "InputSourceType": Literal["STATIC", "DYNAMIC"],
        "MediaConnectFlows": List[ClientDescribeInputResponseMediaConnectFlowsTypeDef],
        "Name": str,
        "RoleArn": str,
        "SecurityGroups": List[str],
        "Sources": List[ClientDescribeInputResponseSourcesTypeDef],
        "State": Literal["CREATING", "DETACHED", "ATTACHED", "DELETING", "DELETED"],
        "Tags": Dict[str, str],
        "Type": Literal[
            "UDP_PUSH", "RTP_PUSH", "RTMP_PUSH", "RTMP_PULL", "URL_PULL", "MP4_FILE", "MEDIACONNECT"
        ],
    },
    total=False,
)

ClientDescribeInputSecurityGroupResponseWhitelistRulesTypeDef = TypedDict(
    "ClientDescribeInputSecurityGroupResponseWhitelistRulesTypeDef", {"Cidr": str}, total=False
)

ClientDescribeInputSecurityGroupResponseTypeDef = TypedDict(
    "ClientDescribeInputSecurityGroupResponseTypeDef",
    {
        "Arn": str,
        "Id": str,
        "Inputs": List[str],
        "State": Literal["IDLE", "IN_USE", "UPDATING", "DELETED"],
        "Tags": Dict[str, str],
        "WhitelistRules": List[ClientDescribeInputSecurityGroupResponseWhitelistRulesTypeDef],
    },
    total=False,
)

ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsServiceDescriptorTypeDef = TypedDict(
    "ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsServiceDescriptorTypeDef",
    {"ProviderName": str, "ServiceName": str},
    total=False,
)

ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef = TypedDict(
    "ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    {"MaximumBitrate": int, "MinimumBitrate": int},
    total=False,
)

ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsTypeDef = TypedDict(
    "ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsTypeDef",
    {
        "ConstantBitrate": int,
        "StatmuxSettings": ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef,
    },
    total=False,
)

ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsTypeDef = TypedDict(
    "ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsTypeDef",
    {
        "ProgramNumber": int,
        "ServiceDescriptor": ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsServiceDescriptorTypeDef,
        "VideoSettings": ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsVideoSettingsTypeDef,
    },
    total=False,
)

ClientDescribeMultiplexProgramResponsePacketIdentifiersMapTypeDef = TypedDict(
    "ClientDescribeMultiplexProgramResponsePacketIdentifiersMapTypeDef",
    {
        "AudioPids": List[int],
        "DvbSubPids": List[int],
        "DvbTeletextPid": int,
        "EtvPlatformPid": int,
        "EtvSignalPid": int,
        "KlvDataPids": List[int],
        "PcrPid": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "Scte27Pids": List[int],
        "Scte35Pid": int,
        "TimedMetadataPid": int,
        "VideoPid": int,
    },
    total=False,
)

ClientDescribeMultiplexProgramResponseTypeDef = TypedDict(
    "ClientDescribeMultiplexProgramResponseTypeDef",
    {
        "ChannelId": str,
        "MultiplexProgramSettings": ClientDescribeMultiplexProgramResponseMultiplexProgramSettingsTypeDef,
        "PacketIdentifiersMap": ClientDescribeMultiplexProgramResponsePacketIdentifiersMapTypeDef,
        "ProgramName": str,
    },
    total=False,
)

ClientDescribeMultiplexResponseDestinationsMediaConnectSettingsTypeDef = TypedDict(
    "ClientDescribeMultiplexResponseDestinationsMediaConnectSettingsTypeDef",
    {"EntitlementArn": str},
    total=False,
)

ClientDescribeMultiplexResponseDestinationsTypeDef = TypedDict(
    "ClientDescribeMultiplexResponseDestinationsTypeDef",
    {
        "MediaConnectSettings": ClientDescribeMultiplexResponseDestinationsMediaConnectSettingsTypeDef
    },
    total=False,
)

ClientDescribeMultiplexResponseMultiplexSettingsTypeDef = TypedDict(
    "ClientDescribeMultiplexResponseMultiplexSettingsTypeDef",
    {
        "MaximumVideoBufferDelayMilliseconds": int,
        "TransportStreamBitrate": int,
        "TransportStreamId": int,
        "TransportStreamReservedBitrate": int,
    },
    total=False,
)

ClientDescribeMultiplexResponseTypeDef = TypedDict(
    "ClientDescribeMultiplexResponseTypeDef",
    {
        "Arn": str,
        "AvailabilityZones": List[str],
        "Destinations": List[ClientDescribeMultiplexResponseDestinationsTypeDef],
        "Id": str,
        "MultiplexSettings": ClientDescribeMultiplexResponseMultiplexSettingsTypeDef,
        "Name": str,
        "PipelinesRunningCount": int,
        "ProgramCount": int,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientDescribeOfferingResponseResourceSpecificationTypeDef = TypedDict(
    "ClientDescribeOfferingResponseResourceSpecificationTypeDef",
    {
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Codec": Literal["MPEG2", "AVC", "HEVC", "AUDIO"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "MaximumFramerate": Literal["MAX_30_FPS", "MAX_60_FPS"],
        "Resolution": Literal["SD", "HD", "FHD", "UHD"],
        "ResourceType": Literal["INPUT", "OUTPUT", "MULTIPLEX", "CHANNEL"],
        "SpecialFeature": Literal["ADVANCED_AUDIO", "AUDIO_NORMALIZATION"],
        "VideoQuality": Literal["STANDARD", "ENHANCED", "PREMIUM"],
    },
    total=False,
)

ClientDescribeOfferingResponseTypeDef = TypedDict(
    "ClientDescribeOfferingResponseTypeDef",
    {
        "Arn": str,
        "CurrencyCode": str,
        "Duration": int,
        "DurationUnits": str,
        "FixedPrice": float,
        "OfferingDescription": str,
        "OfferingId": str,
        "OfferingType": str,
        "Region": str,
        "ResourceSpecification": ClientDescribeOfferingResponseResourceSpecificationTypeDef,
        "UsagePrice": float,
    },
    total=False,
)

ClientDescribeReservationResponseResourceSpecificationTypeDef = TypedDict(
    "ClientDescribeReservationResponseResourceSpecificationTypeDef",
    {
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Codec": Literal["MPEG2", "AVC", "HEVC", "AUDIO"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "MaximumFramerate": Literal["MAX_30_FPS", "MAX_60_FPS"],
        "Resolution": Literal["SD", "HD", "FHD", "UHD"],
        "ResourceType": Literal["INPUT", "OUTPUT", "MULTIPLEX", "CHANNEL"],
        "SpecialFeature": Literal["ADVANCED_AUDIO", "AUDIO_NORMALIZATION"],
        "VideoQuality": Literal["STANDARD", "ENHANCED", "PREMIUM"],
    },
    total=False,
)

ClientDescribeReservationResponseTypeDef = TypedDict(
    "ClientDescribeReservationResponseTypeDef",
    {
        "Arn": str,
        "Count": int,
        "CurrencyCode": str,
        "Duration": int,
        "DurationUnits": str,
        "End": str,
        "FixedPrice": float,
        "Name": str,
        "OfferingDescription": str,
        "OfferingId": str,
        "OfferingType": str,
        "Region": str,
        "ReservationId": str,
        "ResourceSpecification": ClientDescribeReservationResponseResourceSpecificationTypeDef,
        "Start": str,
        "State": Literal["ACTIVE", "EXPIRED", "CANCELED", "DELETED"],
        "Tags": Dict[str, str],
        "UsagePrice": float,
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef",
    {"Tag": str},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef",
    {"Id3": str},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef",
    {"Timecode": str},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef",
    {
        "LastFrameClippingBehavior": Literal["EXCLUDE_LAST_FRAME", "INCLUDE_LAST_FRAME"],
        "Timecode": str,
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef",
    {
        "InputTimecodeSource": Literal["ZEROBASED", "EMBEDDED"],
        "StartTimecode": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStartTimecodeTypeDef,
        "StopTimecode": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsStopTimecodeTypeDef,
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef",
    {
        "InputAttachmentNameReference": str,
        "InputClippingSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsInputClippingSettingsTypeDef,
        "UrlPath": List[str],
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef",
    {"PipelineId": Literal["PIPELINE_0", "PIPELINE_1"]},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef",
    {
        "Pipelines": List[
            ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsPauseStateSettingsPipelinesTypeDef
        ]
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef",
    {"SpliceEventId": int},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef",
    {"Duration": int, "SpliceEventId": int},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef",
    {
        "ArchiveAllowedFlag": Literal["ARCHIVE_NOT_ALLOWED", "ARCHIVE_ALLOWED"],
        "DeviceRestrictions": Literal[
            "NONE", "RESTRICT_GROUP0", "RESTRICT_GROUP1", "RESTRICT_GROUP2"
        ],
        "NoRegionalBlackoutFlag": Literal["REGIONAL_BLACKOUT", "NO_REGIONAL_BLACKOUT"],
        "WebDeliveryAllowedFlag": Literal["WEB_DELIVERY_NOT_ALLOWED", "WEB_DELIVERY_ALLOWED"],
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef",
    {
        "DeliveryRestrictions": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsDeliveryRestrictionsTypeDef,
        "SegmentNum": int,
        "SegmentationCancelIndicator": Literal[
            "SEGMENTATION_EVENT_NOT_CANCELED", "SEGMENTATION_EVENT_CANCELED"
        ],
        "SegmentationDuration": int,
        "SegmentationEventId": int,
        "SegmentationTypeId": int,
        "SegmentationUpid": str,
        "SegmentationUpidType": int,
        "SegmentsExpected": int,
        "SubSegmentNum": int,
        "SubSegmentsExpected": int,
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef",
    {
        "SegmentationDescriptorScte35DescriptorSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsSegmentationDescriptorScte35DescriptorSettingsTypeDef
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef",
    {
        "Scte35DescriptorSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsScte35DescriptorSettingsTypeDef
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef",
    {
        "Scte35Descriptors": List[
            ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsScte35DescriptorsTypeDef
        ]
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "Image": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageActivateSettingsImageTypeDef,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "Width": int,
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef",
    {"FadeOut": int, "Layer": int},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsTypeDef",
    {
        "HlsId3SegmentTaggingSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsHlsId3SegmentTaggingSettingsTypeDef,
        "HlsTimedMetadataSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsHlsTimedMetadataSettingsTypeDef,
        "InputSwitchSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsInputSwitchSettingsTypeDef,
        "PauseStateSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsPauseStateSettingsTypeDef,
        "Scte35ReturnToNetworkSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35ReturnToNetworkSettingsTypeDef,
        "Scte35SpliceInsertSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35SpliceInsertSettingsTypeDef,
        "Scte35TimeSignalSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsScte35TimeSignalSettingsTypeDef,
        "StaticImageActivateSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageActivateSettingsTypeDef,
        "StaticImageDeactivateSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsStaticImageDeactivateSettingsTypeDef,
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef",
    {"Time": str},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef",
    {"FollowPoint": Literal["END", "START"], "ReferenceActionName": str},
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsTypeDef",
    {
        "FixedModeScheduleActionStartSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsFixedModeScheduleActionStartSettingsTypeDef,
        "FollowModeScheduleActionStartSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsFollowModeScheduleActionStartSettingsTypeDef,
        "ImmediateModeScheduleActionStartSettings": Dict[str, Any],
    },
    total=False,
)

ClientDescribeScheduleResponseScheduleActionsTypeDef = TypedDict(
    "ClientDescribeScheduleResponseScheduleActionsTypeDef",
    {
        "ActionName": str,
        "ScheduleActionSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionSettingsTypeDef,
        "ScheduleActionStartSettings": ClientDescribeScheduleResponseScheduleActionsScheduleActionStartSettingsTypeDef,
    },
    total=False,
)

ClientDescribeScheduleResponseTypeDef = TypedDict(
    "ClientDescribeScheduleResponseTypeDef",
    {
        "NextToken": str,
        "ScheduleActions": List[ClientDescribeScheduleResponseScheduleActionsTypeDef],
    },
    total=False,
)

ClientListChannelsResponseChannelsDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsDestinationsMediaPackageSettingsTypeDef",
    {"ChannelId": str},
    total=False,
)

ClientListChannelsResponseChannelsDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientListChannelsResponseChannelsDestinationsSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientListChannelsResponseChannelsDestinationsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[
            ClientListChannelsResponseChannelsDestinationsMediaPackageSettingsTypeDef
        ],
        "MultiplexSettings": ClientListChannelsResponseChannelsDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientListChannelsResponseChannelsDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientListChannelsResponseChannelsEgressEndpointsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsEgressEndpointsTypeDef", {"SourceIp": str}, total=False
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str, "LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "Name": str,
        "SelectorSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientListChannelsResponseChannelsInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientListChannelsResponseChannelsInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientListChannelsResponseChannelsInputAttachmentsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientListChannelsResponseChannelsInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientListChannelsResponseChannelsInputSpecificationTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientListChannelsResponseChannelsTypeDef = TypedDict(
    "ClientListChannelsResponseChannelsTypeDef",
    {
        "Arn": str,
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Destinations": List[ClientListChannelsResponseChannelsDestinationsTypeDef],
        "EgressEndpoints": List[ClientListChannelsResponseChannelsEgressEndpointsTypeDef],
        "Id": str,
        "InputAttachments": List[ClientListChannelsResponseChannelsInputAttachmentsTypeDef],
        "InputSpecification": ClientListChannelsResponseChannelsInputSpecificationTypeDef,
        "LogLevel": Literal["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"],
        "Name": str,
        "PipelinesRunningCount": int,
        "RoleArn": str,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
            "UPDATING",
            "UPDATE_FAILED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientListChannelsResponseTypeDef = TypedDict(
    "ClientListChannelsResponseTypeDef",
    {"Channels": List[ClientListChannelsResponseChannelsTypeDef], "NextToken": str},
    total=False,
)

ClientListInputSecurityGroupsResponseInputSecurityGroupsWhitelistRulesTypeDef = TypedDict(
    "ClientListInputSecurityGroupsResponseInputSecurityGroupsWhitelistRulesTypeDef",
    {"Cidr": str},
    total=False,
)

ClientListInputSecurityGroupsResponseInputSecurityGroupsTypeDef = TypedDict(
    "ClientListInputSecurityGroupsResponseInputSecurityGroupsTypeDef",
    {
        "Arn": str,
        "Id": str,
        "Inputs": List[str],
        "State": Literal["IDLE", "IN_USE", "UPDATING", "DELETED"],
        "Tags": Dict[str, str],
        "WhitelistRules": List[
            ClientListInputSecurityGroupsResponseInputSecurityGroupsWhitelistRulesTypeDef
        ],
    },
    total=False,
)

ClientListInputSecurityGroupsResponseTypeDef = TypedDict(
    "ClientListInputSecurityGroupsResponseTypeDef",
    {
        "InputSecurityGroups": List[
            ClientListInputSecurityGroupsResponseInputSecurityGroupsTypeDef
        ],
        "NextToken": str,
    },
    total=False,
)

ClientListInputsResponseInputsDestinationsVpcTypeDef = TypedDict(
    "ClientListInputsResponseInputsDestinationsVpcTypeDef",
    {"AvailabilityZone": str, "NetworkInterfaceId": str},
    total=False,
)

ClientListInputsResponseInputsDestinationsTypeDef = TypedDict(
    "ClientListInputsResponseInputsDestinationsTypeDef",
    {
        "Ip": str,
        "Port": str,
        "Url": str,
        "Vpc": ClientListInputsResponseInputsDestinationsVpcTypeDef,
    },
    total=False,
)

ClientListInputsResponseInputsMediaConnectFlowsTypeDef = TypedDict(
    "ClientListInputsResponseInputsMediaConnectFlowsTypeDef", {"FlowArn": str}, total=False
)

ClientListInputsResponseInputsSourcesTypeDef = TypedDict(
    "ClientListInputsResponseInputsSourcesTypeDef",
    {"PasswordParam": str, "Url": str, "Username": str},
    total=False,
)

ClientListInputsResponseInputsTypeDef = TypedDict(
    "ClientListInputsResponseInputsTypeDef",
    {
        "Arn": str,
        "AttachedChannels": List[str],
        "Destinations": List[ClientListInputsResponseInputsDestinationsTypeDef],
        "Id": str,
        "InputClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "InputSourceType": Literal["STATIC", "DYNAMIC"],
        "MediaConnectFlows": List[ClientListInputsResponseInputsMediaConnectFlowsTypeDef],
        "Name": str,
        "RoleArn": str,
        "SecurityGroups": List[str],
        "Sources": List[ClientListInputsResponseInputsSourcesTypeDef],
        "State": Literal["CREATING", "DETACHED", "ATTACHED", "DELETING", "DELETED"],
        "Tags": Dict[str, str],
        "Type": Literal[
            "UDP_PUSH", "RTP_PUSH", "RTMP_PUSH", "RTMP_PULL", "URL_PULL", "MP4_FILE", "MEDIACONNECT"
        ],
    },
    total=False,
)

ClientListInputsResponseTypeDef = TypedDict(
    "ClientListInputsResponseTypeDef",
    {"Inputs": List[ClientListInputsResponseInputsTypeDef], "NextToken": str},
    total=False,
)

ClientListMultiplexProgramsResponseMultiplexProgramsTypeDef = TypedDict(
    "ClientListMultiplexProgramsResponseMultiplexProgramsTypeDef",
    {"ChannelId": str, "ProgramName": str},
    total=False,
)

ClientListMultiplexProgramsResponseTypeDef = TypedDict(
    "ClientListMultiplexProgramsResponseTypeDef",
    {
        "MultiplexPrograms": List[ClientListMultiplexProgramsResponseMultiplexProgramsTypeDef],
        "NextToken": str,
    },
    total=False,
)

ClientListMultiplexesResponseMultiplexesMultiplexSettingsTypeDef = TypedDict(
    "ClientListMultiplexesResponseMultiplexesMultiplexSettingsTypeDef",
    {"TransportStreamBitrate": int},
    total=False,
)

ClientListMultiplexesResponseMultiplexesTypeDef = TypedDict(
    "ClientListMultiplexesResponseMultiplexesTypeDef",
    {
        "Arn": str,
        "AvailabilityZones": List[str],
        "Id": str,
        "MultiplexSettings": ClientListMultiplexesResponseMultiplexesMultiplexSettingsTypeDef,
        "Name": str,
        "PipelinesRunningCount": int,
        "ProgramCount": int,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientListMultiplexesResponseTypeDef = TypedDict(
    "ClientListMultiplexesResponseTypeDef",
    {"Multiplexes": List[ClientListMultiplexesResponseMultiplexesTypeDef], "NextToken": str},
    total=False,
)

ClientListOfferingsResponseOfferingsResourceSpecificationTypeDef = TypedDict(
    "ClientListOfferingsResponseOfferingsResourceSpecificationTypeDef",
    {
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Codec": Literal["MPEG2", "AVC", "HEVC", "AUDIO"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "MaximumFramerate": Literal["MAX_30_FPS", "MAX_60_FPS"],
        "Resolution": Literal["SD", "HD", "FHD", "UHD"],
        "ResourceType": Literal["INPUT", "OUTPUT", "MULTIPLEX", "CHANNEL"],
        "SpecialFeature": Literal["ADVANCED_AUDIO", "AUDIO_NORMALIZATION"],
        "VideoQuality": Literal["STANDARD", "ENHANCED", "PREMIUM"],
    },
    total=False,
)

ClientListOfferingsResponseOfferingsTypeDef = TypedDict(
    "ClientListOfferingsResponseOfferingsTypeDef",
    {
        "Arn": str,
        "CurrencyCode": str,
        "Duration": int,
        "DurationUnits": str,
        "FixedPrice": float,
        "OfferingDescription": str,
        "OfferingId": str,
        "OfferingType": str,
        "Region": str,
        "ResourceSpecification": ClientListOfferingsResponseOfferingsResourceSpecificationTypeDef,
        "UsagePrice": float,
    },
    total=False,
)

ClientListOfferingsResponseTypeDef = TypedDict(
    "ClientListOfferingsResponseTypeDef",
    {"NextToken": str, "Offerings": List[ClientListOfferingsResponseOfferingsTypeDef]},
    total=False,
)

ClientListReservationsResponseReservationsResourceSpecificationTypeDef = TypedDict(
    "ClientListReservationsResponseReservationsResourceSpecificationTypeDef",
    {
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Codec": Literal["MPEG2", "AVC", "HEVC", "AUDIO"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "MaximumFramerate": Literal["MAX_30_FPS", "MAX_60_FPS"],
        "Resolution": Literal["SD", "HD", "FHD", "UHD"],
        "ResourceType": Literal["INPUT", "OUTPUT", "MULTIPLEX", "CHANNEL"],
        "SpecialFeature": Literal["ADVANCED_AUDIO", "AUDIO_NORMALIZATION"],
        "VideoQuality": Literal["STANDARD", "ENHANCED", "PREMIUM"],
    },
    total=False,
)

ClientListReservationsResponseReservationsTypeDef = TypedDict(
    "ClientListReservationsResponseReservationsTypeDef",
    {
        "Arn": str,
        "Count": int,
        "CurrencyCode": str,
        "Duration": int,
        "DurationUnits": str,
        "End": str,
        "FixedPrice": float,
        "Name": str,
        "OfferingDescription": str,
        "OfferingId": str,
        "OfferingType": str,
        "Region": str,
        "ReservationId": str,
        "ResourceSpecification": ClientListReservationsResponseReservationsResourceSpecificationTypeDef,
        "Start": str,
        "State": Literal["ACTIVE", "EXPIRED", "CANCELED", "DELETED"],
        "Tags": Dict[str, str],
        "UsagePrice": float,
    },
    total=False,
)

ClientListReservationsResponseTypeDef = TypedDict(
    "ClientListReservationsResponseTypeDef",
    {"NextToken": str, "Reservations": List[ClientListReservationsResponseReservationsTypeDef]},
    total=False,
)

ClientListTagsForResourceResponseTypeDef = TypedDict(
    "ClientListTagsForResourceResponseTypeDef", {"Tags": Dict[str, str]}, total=False
)

ClientPurchaseOfferingResponseReservationResourceSpecificationTypeDef = TypedDict(
    "ClientPurchaseOfferingResponseReservationResourceSpecificationTypeDef",
    {
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Codec": Literal["MPEG2", "AVC", "HEVC", "AUDIO"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "MaximumFramerate": Literal["MAX_30_FPS", "MAX_60_FPS"],
        "Resolution": Literal["SD", "HD", "FHD", "UHD"],
        "ResourceType": Literal["INPUT", "OUTPUT", "MULTIPLEX", "CHANNEL"],
        "SpecialFeature": Literal["ADVANCED_AUDIO", "AUDIO_NORMALIZATION"],
        "VideoQuality": Literal["STANDARD", "ENHANCED", "PREMIUM"],
    },
    total=False,
)

ClientPurchaseOfferingResponseReservationTypeDef = TypedDict(
    "ClientPurchaseOfferingResponseReservationTypeDef",
    {
        "Arn": str,
        "Count": int,
        "CurrencyCode": str,
        "Duration": int,
        "DurationUnits": str,
        "End": str,
        "FixedPrice": float,
        "Name": str,
        "OfferingDescription": str,
        "OfferingId": str,
        "OfferingType": str,
        "Region": str,
        "ReservationId": str,
        "ResourceSpecification": ClientPurchaseOfferingResponseReservationResourceSpecificationTypeDef,
        "Start": str,
        "State": Literal["ACTIVE", "EXPIRED", "CANCELED", "DELETED"],
        "Tags": Dict[str, str],
        "UsagePrice": float,
    },
    total=False,
)

ClientPurchaseOfferingResponseTypeDef = TypedDict(
    "ClientPurchaseOfferingResponseTypeDef",
    {"Reservation": ClientPurchaseOfferingResponseReservationTypeDef},
    total=False,
)

ClientStartChannelResponseDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseDestinationsMediaPackageSettingsTypeDef",
    {"ChannelId": str},
    total=False,
)

ClientStartChannelResponseDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientStartChannelResponseDestinationsSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientStartChannelResponseDestinationsTypeDef = TypedDict(
    "ClientStartChannelResponseDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[
            ClientStartChannelResponseDestinationsMediaPackageSettingsTypeDef
        ],
        "MultiplexSettings": ClientStartChannelResponseDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientStartChannelResponseDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientStartChannelResponseEgressEndpointsTypeDef = TypedDict(
    "ClientStartChannelResponseEgressEndpointsTypeDef", {"SourceIp": str}, total=False
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_1770_1", "ITU_1770_2"],
        "AlgorithmControl": str,
        "TargetLkfs": float,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "InputType": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Profile": Literal["HEV1", "HEV2", "LC"],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": float,
        "Spec": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["HIGH", "LOW", "MEDIUM_HIGH", "MEDIUM_LOW"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY",
            "COMPLETE_MAIN",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DrcProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY", "COMPLETE_MAIN", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["DISABLED", "ENABLED"],
        "Dialnorm": int,
        "DrcLine": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "DrcRf": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["NO_PASSTHROUGH", "WHEN_POSSIBLE"],
        "PhaseControl": Literal["NO_SHIFT", "SHIFT_90_DEGREES"],
        "StereoDownmix": Literal["DPL2", "LO_RO", "LT_RT", "NOT_INDICATED"],
        "SurroundExMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
        "SurroundMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0"],
        "SampleRate": float,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "Eac3Settings": ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "PassThroughSettings": Dict[str, Any],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    {"Gain": int, "InputChannel": int},
    total=False,
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    {
        "InputChannelLevels": List[
            ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef
        ],
        "OutputChannel": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMappings": List[
            ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef
        ],
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientStartChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSelectorName": str,
        "AudioType": Literal[
            "CLEAN_EFFECTS", "HEARING_IMPAIRED", "UNDEFINED", "VISUAL_IMPAIRED_COMMENTARY"
        ],
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientStartChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef,
        "LanguageCode": str,
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "Name": str,
        "RemixSettings": ClientStartChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsAvailBlankingTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAvailBlankingTypeDef",
    {
        "AvailBlankingImage": ClientStartChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    {
        "Scte35SpliceInsert": ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef,
        "Scte35TimeSignalApos": ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsAvailConfigurationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsAvailConfigurationTypeDef",
    {
        "AvailSettings": ClientStartChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsBlackoutSlateTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsBlackoutSlateTypeDef",
    {
        "BlackoutSlateImage": ClientStartChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef,
        "NetworkEndBlackout": Literal["DISABLED", "ENABLED"],
        "NetworkEndBlackoutImage": ClientStartChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef,
        "NetworkId": str,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StyleControl": Literal["PASSTHROUGH", "USE_CONFIGURED"]},
    total=False,
)

ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "AribDestinationSettings": Dict[str, Any],
        "BurnInDestinationSettings": ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef,
        "DvbSubDestinationSettings": ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": Dict[str, Any],
        "EmbeddedPlusScte20DestinationSettings": Dict[str, Any],
        "RtmpCaptionInfoDestinationSettings": Dict[str, Any],
        "Scte20PlusEmbeddedDestinationSettings": Dict[str, Any],
        "Scte27DestinationSettings": Dict[str, Any],
        "SmpteTtDestinationSettings": Dict[str, Any],
        "TeletextDestinationSettings": Dict[str, Any],
        "TtmlDestinationSettings": ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
        "WebvttDestinationSettings": Dict[str, Any],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "DestinationSettings": ClientStartChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": str,
        "LanguageDescription": str,
        "Name": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    {
        "BlackFrameMsec": int,
        "InputLossImageColor": str,
        "InputLossImageSlate": ClientStartChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef,
        "InputLossImageType": Literal["COLOR", "SLATE"],
        "RepeatFrameMsec": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsGlobalConfigurationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsGlobalConfigurationTypeDef",
    {
        "InitialAudioGain": int,
        "InputEndAction": Literal["NONE", "SWITCH_AND_LOOP_INPUTS"],
        "InputLossBehavior": ClientStartChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef,
        "OutputLockingMode": Literal["EPOCH_LOCKING", "PIPELINE_LOCKING"],
        "OutputTimingSource": Literal["INPUT_CLOCK", "SYSTEM_CLOCK"],
        "SupportLowFramerateInputs": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsNielsenConfigurationTypeDef",
    {"DistributorId": str, "NielsenPcmToId3Tagging": Literal["DISABLED", "ENABLED"]},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    {
        "Destination": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef,
        "RolloverInterval": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    {
        "Destination": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {"CaptionChannel": int, "LanguageCode": str, "LanguageDescription": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
        "Salt": str,
        "Token": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "MediaStoreStorageClass": str,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    {
        "HlsAkamaiSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef,
        "HlsBasicPutSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef,
        "HlsMediaStoreSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef,
        "HlsWebdavSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    {
        "KeyProviderServer": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef,
        "StaticKeyValue": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    {
        "StaticKeySettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ADOBE", "ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "BaseUrlContent": str,
        "BaseUrlContent1": str,
        "BaseUrlManifest": str,
        "BaseUrlManifest1": str,
        "CaptionLanguageMappings": List[
            ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "NONE", "OMIT"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_4281", "RFC_6381"],
        "ConstantIv": str,
        "Destination": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "EncryptionType": Literal["AES128", "SAMPLE_AES"],
        "HlsCdnSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef,
        "HlsId3SegmentTagging": Literal["DISABLED", "ENABLED"],
        "IFrameOnlyPlaylists": Literal["DISABLED", "STANDARD"],
        "IndexNSegments": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "IvInManifest": Literal["EXCLUDE", "INCLUDE"],
        "IvSource": Literal["EXPLICIT", "FOLLOWS_SEGMENT_NUMBER"],
        "KeepSegments": int,
        "KeyFormat": str,
        "KeyFormatVersions": str,
        "KeyProviderSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinSegmentLength": int,
        "Mode": Literal["LIVE", "VOD"],
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["EXCLUDE", "INCLUDE"],
        "ProgramDateTimePeriod": int,
        "RedundantManifest": Literal["DISABLED", "ENABLED"],
        "SegmentLength": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["EXCLUDE", "INCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
        "TsFileMode": Literal["SEGMENTED_FILES", "SINGLE_FILE"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    {
        "Destination": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AcquisitionPointId": str,
        "AudioOnlyTimecodeControl": Literal["PASSTHROUGH", "USE_CONFIGURED_CLOCK"],
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef,
        "EventId": str,
        "EventIdMode": Literal["NO_EVENT_ID", "USE_CONFIGURED", "USE_TIMESTAMP"],
        "EventStopBehavior": Literal["NONE", "SEND_EOS"],
        "FilecacheDuration": int,
        "FragmentLength": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "NumRetries": int,
        "RestartDelay": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SendDelayMs": int,
        "SparseTrackType": Literal["NONE", "SCTE_35"],
        "StreamManifestBehavior": Literal["DO_NOT_SEND", "SEND"],
        "TimestampOffset": str,
        "TimestampOffsetMode": Literal["USE_CONFIGURED_OFFSET", "USE_EVENT_START_DATE"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    {
        "AuthenticationScheme": Literal["AKAMAI", "COMMON"],
        "CacheFullBehavior": Literal["DISCONNECT_IMMEDIATELY", "WAIT_FOR_SERVER"],
        "CacheLength": int,
        "CaptionData": Literal["ALL", "FIELD1_608", "FIELD1_AND_FIELD2_608"],
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "RestartDelay": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    {
        "InputLossAction": Literal["DROP_PROGRAM", "DROP_TS", "EMIT_PROGRAM"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "ArchiveGroupSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef,
        "FrameCaptureGroupSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef,
        "HlsGroupSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MediaPackageGroupSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "MultiplexGroupSettings": Dict[str, Any],
        "RtmpGroupSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef,
        "UdpGroupSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    {
        "ContainerSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    {"NameModifier": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyImage": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "SegmentType": Literal["AAC", "FMP4"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    {"AudioRenditionSets": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "EcmPid": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "Scte35Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "Scte35Pid": str,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    {
        "AudioRenditionSets": str,
        "M3u8Settings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioOnlyHlsSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef,
        "Fmp4HlsSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef,
        "StandardHlsSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    {
        "H265PackagingType": Literal["HEV1", "HVC1"],
        "HlsSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef,
        "NameModifier": str,
        "SegmentModifier": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    {"H265PackagingType": Literal["HEV1", "HVC1"], "NameModifier": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    {
        "Destination": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    {
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef,
        "NumRetries": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    {"ColumnDepth": int, "IncludeFec": Literal["COLUMN", "COLUMN_AND_ROW"], "RowLength": int},
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    {
        "BufferMsec": int,
        "ContainerSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef,
        "Destination": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef,
        "FecOutputSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "ArchiveOutputSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef,
        "FrameCaptureOutputSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef,
        "HlsOutputSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef,
        "MediaPackageOutputSettings": Dict[str, Any],
        "MsSmoothOutputSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef,
        "MultiplexOutputSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef,
        "RtmpOutputSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef,
        "UdpOutputSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptionNames": List[str],
        "CaptionDescriptionNames": List[str],
        "OutputName": str,
        "OutputSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "VideoDescriptionName": str,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsOutputGroupsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsOutputGroupsTypeDef",
    {
        "Name": str,
        "OutputGroupSettings": ClientStartChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientStartChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsTimecodeConfigTypeDef",
    {"Source": Literal["EMBEDDED", "SYSTEMCLOCK", "ZEROBASED"], "SyncThreshold": int},
    total=False,
)

ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    {"CaptureInterval": int, "CaptureIntervalUnits": Literal["MILLISECONDS", "SECONDS"]},
    total=False,
)

ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "Bitrate": int,
        "BufFillPct": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef,
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopNumBFrames": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H264_LEVEL_1",
            "H264_LEVEL_1_1",
            "H264_LEVEL_1_2",
            "H264_LEVEL_1_3",
            "H264_LEVEL_2",
            "H264_LEVEL_2_1",
            "H264_LEVEL_2_2",
            "H264_LEVEL_3",
            "H264_LEVEL_3_1",
            "H264_LEVEL_3_2",
            "H264_LEVEL_4",
            "H264_LEVEL_4_1",
            "H264_LEVEL_4_2",
            "H264_LEVEL_5",
            "H264_LEVEL_5_1",
            "H264_LEVEL_5_2",
            "H264_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumRefFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR", "VBR"],
        "ScanType": Literal["INTERLACED", "PROGRESSIVE"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Softness": int,
        "SpatialAq": Literal["DISABLED", "ENABLED"],
        "SubgopLength": Literal["DYNAMIC", "FIXED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "TemporalAq": Literal["DISABLED", "ENABLED"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Hdr10Settings": ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef,
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "AlternativeTransferFunction": Literal["INSERT", "OMIT"],
        "Bitrate": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef,
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H265_LEVEL_1",
            "H265_LEVEL_2",
            "H265_LEVEL_2_1",
            "H265_LEVEL_3",
            "H265_LEVEL_3_1",
            "H265_LEVEL_4",
            "H265_LEVEL_4_1",
            "H265_LEVEL_5",
            "H265_LEVEL_5_1",
            "H265_LEVEL_5_2",
            "H265_LEVEL_6",
            "H265_LEVEL_6_1",
            "H265_LEVEL_6_2",
            "H265_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["MAIN", "MAIN_10BIT"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR"],
        "ScanType": str,
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Tier": Literal["HIGH", "MAIN"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    {
        "FrameCaptureSettings": ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsVideoDescriptionsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsVideoDescriptionsTypeDef",
    {
        "CodecSettings": ClientStartChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef,
        "Height": int,
        "Name": str,
        "RespondToAfd": Literal["NONE", "PASSTHROUGH", "RESPOND"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "Width": int,
    },
    total=False,
)

ClientStartChannelResponseEncoderSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseEncoderSettingsTypeDef",
    {
        "AudioDescriptions": List[
            ClientStartChannelResponseEncoderSettingsAudioDescriptionsTypeDef
        ],
        "AvailBlanking": ClientStartChannelResponseEncoderSettingsAvailBlankingTypeDef,
        "AvailConfiguration": ClientStartChannelResponseEncoderSettingsAvailConfigurationTypeDef,
        "BlackoutSlate": ClientStartChannelResponseEncoderSettingsBlackoutSlateTypeDef,
        "CaptionDescriptions": List[
            ClientStartChannelResponseEncoderSettingsCaptionDescriptionsTypeDef
        ],
        "GlobalConfiguration": ClientStartChannelResponseEncoderSettingsGlobalConfigurationTypeDef,
        "NielsenConfiguration": ClientStartChannelResponseEncoderSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientStartChannelResponseEncoderSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientStartChannelResponseEncoderSettingsTimecodeConfigTypeDef,
        "VideoDescriptions": List[
            ClientStartChannelResponseEncoderSettingsVideoDescriptionsTypeDef
        ],
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str, "LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "Name": str,
        "SelectorSettings": ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientStartChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientStartChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientStartChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientStartChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientStartChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientStartChannelResponseInputAttachmentsTypeDef = TypedDict(
    "ClientStartChannelResponseInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientStartChannelResponseInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientStartChannelResponseInputSpecificationTypeDef = TypedDict(
    "ClientStartChannelResponseInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientStartChannelResponsePipelineDetailsTypeDef = TypedDict(
    "ClientStartChannelResponsePipelineDetailsTypeDef",
    {"ActiveInputAttachmentName": str, "ActiveInputSwitchActionName": str, "PipelineId": str},
    total=False,
)

ClientStartChannelResponseTypeDef = TypedDict(
    "ClientStartChannelResponseTypeDef",
    {
        "Arn": str,
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Destinations": List[ClientStartChannelResponseDestinationsTypeDef],
        "EgressEndpoints": List[ClientStartChannelResponseEgressEndpointsTypeDef],
        "EncoderSettings": ClientStartChannelResponseEncoderSettingsTypeDef,
        "Id": str,
        "InputAttachments": List[ClientStartChannelResponseInputAttachmentsTypeDef],
        "InputSpecification": ClientStartChannelResponseInputSpecificationTypeDef,
        "LogLevel": Literal["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"],
        "Name": str,
        "PipelineDetails": List[ClientStartChannelResponsePipelineDetailsTypeDef],
        "PipelinesRunningCount": int,
        "RoleArn": str,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
            "UPDATING",
            "UPDATE_FAILED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientStartMultiplexResponseDestinationsMediaConnectSettingsTypeDef = TypedDict(
    "ClientStartMultiplexResponseDestinationsMediaConnectSettingsTypeDef",
    {"EntitlementArn": str},
    total=False,
)

ClientStartMultiplexResponseDestinationsTypeDef = TypedDict(
    "ClientStartMultiplexResponseDestinationsTypeDef",
    {"MediaConnectSettings": ClientStartMultiplexResponseDestinationsMediaConnectSettingsTypeDef},
    total=False,
)

ClientStartMultiplexResponseMultiplexSettingsTypeDef = TypedDict(
    "ClientStartMultiplexResponseMultiplexSettingsTypeDef",
    {
        "MaximumVideoBufferDelayMilliseconds": int,
        "TransportStreamBitrate": int,
        "TransportStreamId": int,
        "TransportStreamReservedBitrate": int,
    },
    total=False,
)

ClientStartMultiplexResponseTypeDef = TypedDict(
    "ClientStartMultiplexResponseTypeDef",
    {
        "Arn": str,
        "AvailabilityZones": List[str],
        "Destinations": List[ClientStartMultiplexResponseDestinationsTypeDef],
        "Id": str,
        "MultiplexSettings": ClientStartMultiplexResponseMultiplexSettingsTypeDef,
        "Name": str,
        "PipelinesRunningCount": int,
        "ProgramCount": int,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientStopChannelResponseDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseDestinationsMediaPackageSettingsTypeDef",
    {"ChannelId": str},
    total=False,
)

ClientStopChannelResponseDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientStopChannelResponseDestinationsSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientStopChannelResponseDestinationsTypeDef = TypedDict(
    "ClientStopChannelResponseDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[
            ClientStopChannelResponseDestinationsMediaPackageSettingsTypeDef
        ],
        "MultiplexSettings": ClientStopChannelResponseDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientStopChannelResponseDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientStopChannelResponseEgressEndpointsTypeDef = TypedDict(
    "ClientStopChannelResponseEgressEndpointsTypeDef", {"SourceIp": str}, total=False
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_1770_1", "ITU_1770_2"],
        "AlgorithmControl": str,
        "TargetLkfs": float,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "InputType": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Profile": Literal["HEV1", "HEV2", "LC"],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": float,
        "Spec": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["HIGH", "LOW", "MEDIUM_HIGH", "MEDIUM_LOW"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY",
            "COMPLETE_MAIN",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DrcProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY", "COMPLETE_MAIN", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["DISABLED", "ENABLED"],
        "Dialnorm": int,
        "DrcLine": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "DrcRf": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["NO_PASSTHROUGH", "WHEN_POSSIBLE"],
        "PhaseControl": Literal["NO_SHIFT", "SHIFT_90_DEGREES"],
        "StereoDownmix": Literal["DPL2", "LO_RO", "LT_RT", "NOT_INDICATED"],
        "SurroundExMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
        "SurroundMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0"],
        "SampleRate": float,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "Eac3Settings": ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "PassThroughSettings": Dict[str, Any],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    {"Gain": int, "InputChannel": int},
    total=False,
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    {
        "InputChannelLevels": List[
            ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef
        ],
        "OutputChannel": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMappings": List[
            ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef
        ],
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientStopChannelResponseEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSelectorName": str,
        "AudioType": Literal[
            "CLEAN_EFFECTS", "HEARING_IMPAIRED", "UNDEFINED", "VISUAL_IMPAIRED_COMMENTARY"
        ],
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientStopChannelResponseEncoderSettingsAudioDescriptionsCodecSettingsTypeDef,
        "LanguageCode": str,
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "Name": str,
        "RemixSettings": ClientStopChannelResponseEncoderSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsAvailBlankingTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAvailBlankingTypeDef",
    {
        "AvailBlankingImage": ClientStopChannelResponseEncoderSettingsAvailBlankingAvailBlankingImageTypeDef,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    {
        "Scte35SpliceInsert": ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef,
        "Scte35TimeSignalApos": ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsAvailConfigurationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsAvailConfigurationTypeDef",
    {
        "AvailSettings": ClientStopChannelResponseEncoderSettingsAvailConfigurationAvailSettingsTypeDef
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsBlackoutSlateTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsBlackoutSlateTypeDef",
    {
        "BlackoutSlateImage": ClientStopChannelResponseEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef,
        "NetworkEndBlackout": Literal["DISABLED", "ENABLED"],
        "NetworkEndBlackoutImage": ClientStopChannelResponseEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef,
        "NetworkId": str,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StyleControl": Literal["PASSTHROUGH", "USE_CONFIGURED"]},
    total=False,
)

ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "AribDestinationSettings": Dict[str, Any],
        "BurnInDestinationSettings": ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef,
        "DvbSubDestinationSettings": ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": Dict[str, Any],
        "EmbeddedPlusScte20DestinationSettings": Dict[str, Any],
        "RtmpCaptionInfoDestinationSettings": Dict[str, Any],
        "Scte20PlusEmbeddedDestinationSettings": Dict[str, Any],
        "Scte27DestinationSettings": Dict[str, Any],
        "SmpteTtDestinationSettings": Dict[str, Any],
        "TeletextDestinationSettings": Dict[str, Any],
        "TtmlDestinationSettings": ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
        "WebvttDestinationSettings": Dict[str, Any],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "DestinationSettings": ClientStopChannelResponseEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": str,
        "LanguageDescription": str,
        "Name": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    {
        "BlackFrameMsec": int,
        "InputLossImageColor": str,
        "InputLossImageSlate": ClientStopChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef,
        "InputLossImageType": Literal["COLOR", "SLATE"],
        "RepeatFrameMsec": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsGlobalConfigurationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsGlobalConfigurationTypeDef",
    {
        "InitialAudioGain": int,
        "InputEndAction": Literal["NONE", "SWITCH_AND_LOOP_INPUTS"],
        "InputLossBehavior": ClientStopChannelResponseEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef,
        "OutputLockingMode": Literal["EPOCH_LOCKING", "PIPELINE_LOCKING"],
        "OutputTimingSource": Literal["INPUT_CLOCK", "SYSTEM_CLOCK"],
        "SupportLowFramerateInputs": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsNielsenConfigurationTypeDef",
    {"DistributorId": str, "NielsenPcmToId3Tagging": Literal["DISABLED", "ENABLED"]},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    {
        "Destination": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef,
        "RolloverInterval": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    {
        "Destination": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {"CaptionChannel": int, "LanguageCode": str, "LanguageDescription": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
        "Salt": str,
        "Token": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "MediaStoreStorageClass": str,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    {
        "HlsAkamaiSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef,
        "HlsBasicPutSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef,
        "HlsMediaStoreSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef,
        "HlsWebdavSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    {
        "KeyProviderServer": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef,
        "StaticKeyValue": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    {
        "StaticKeySettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ADOBE", "ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "BaseUrlContent": str,
        "BaseUrlContent1": str,
        "BaseUrlManifest": str,
        "BaseUrlManifest1": str,
        "CaptionLanguageMappings": List[
            ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "NONE", "OMIT"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_4281", "RFC_6381"],
        "ConstantIv": str,
        "Destination": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "EncryptionType": Literal["AES128", "SAMPLE_AES"],
        "HlsCdnSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef,
        "HlsId3SegmentTagging": Literal["DISABLED", "ENABLED"],
        "IFrameOnlyPlaylists": Literal["DISABLED", "STANDARD"],
        "IndexNSegments": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "IvInManifest": Literal["EXCLUDE", "INCLUDE"],
        "IvSource": Literal["EXPLICIT", "FOLLOWS_SEGMENT_NUMBER"],
        "KeepSegments": int,
        "KeyFormat": str,
        "KeyFormatVersions": str,
        "KeyProviderSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinSegmentLength": int,
        "Mode": Literal["LIVE", "VOD"],
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["EXCLUDE", "INCLUDE"],
        "ProgramDateTimePeriod": int,
        "RedundantManifest": Literal["DISABLED", "ENABLED"],
        "SegmentLength": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["EXCLUDE", "INCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
        "TsFileMode": Literal["SEGMENTED_FILES", "SINGLE_FILE"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    {
        "Destination": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AcquisitionPointId": str,
        "AudioOnlyTimecodeControl": Literal["PASSTHROUGH", "USE_CONFIGURED_CLOCK"],
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef,
        "EventId": str,
        "EventIdMode": Literal["NO_EVENT_ID", "USE_CONFIGURED", "USE_TIMESTAMP"],
        "EventStopBehavior": Literal["NONE", "SEND_EOS"],
        "FilecacheDuration": int,
        "FragmentLength": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "NumRetries": int,
        "RestartDelay": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SendDelayMs": int,
        "SparseTrackType": Literal["NONE", "SCTE_35"],
        "StreamManifestBehavior": Literal["DO_NOT_SEND", "SEND"],
        "TimestampOffset": str,
        "TimestampOffsetMode": Literal["USE_CONFIGURED_OFFSET", "USE_EVENT_START_DATE"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    {
        "AuthenticationScheme": Literal["AKAMAI", "COMMON"],
        "CacheFullBehavior": Literal["DISCONNECT_IMMEDIATELY", "WAIT_FOR_SERVER"],
        "CacheLength": int,
        "CaptionData": Literal["ALL", "FIELD1_608", "FIELD1_AND_FIELD2_608"],
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "RestartDelay": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    {
        "InputLossAction": Literal["DROP_PROGRAM", "DROP_TS", "EMIT_PROGRAM"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "ArchiveGroupSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef,
        "FrameCaptureGroupSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef,
        "HlsGroupSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MediaPackageGroupSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "MultiplexGroupSettings": Dict[str, Any],
        "RtmpGroupSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef,
        "UdpGroupSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    {
        "ContainerSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    {"NameModifier": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyImage": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "SegmentType": Literal["AAC", "FMP4"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    {"AudioRenditionSets": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "EcmPid": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "Scte35Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "Scte35Pid": str,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    {
        "AudioRenditionSets": str,
        "M3u8Settings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioOnlyHlsSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef,
        "Fmp4HlsSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef,
        "StandardHlsSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    {
        "H265PackagingType": Literal["HEV1", "HVC1"],
        "HlsSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef,
        "NameModifier": str,
        "SegmentModifier": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    {"H265PackagingType": Literal["HEV1", "HVC1"], "NameModifier": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    {
        "Destination": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    {
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef,
        "NumRetries": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    {"ColumnDepth": int, "IncludeFec": Literal["COLUMN", "COLUMN_AND_ROW"], "RowLength": int},
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    {
        "BufferMsec": int,
        "ContainerSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef,
        "Destination": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef,
        "FecOutputSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "ArchiveOutputSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef,
        "FrameCaptureOutputSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef,
        "HlsOutputSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef,
        "MediaPackageOutputSettings": Dict[str, Any],
        "MsSmoothOutputSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef,
        "MultiplexOutputSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef,
        "RtmpOutputSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef,
        "UdpOutputSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptionNames": List[str],
        "CaptionDescriptionNames": List[str],
        "OutputName": str,
        "OutputSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "VideoDescriptionName": str,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsOutputGroupsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsOutputGroupsTypeDef",
    {
        "Name": str,
        "OutputGroupSettings": ClientStopChannelResponseEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientStopChannelResponseEncoderSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsTimecodeConfigTypeDef",
    {"Source": Literal["EMBEDDED", "SYSTEMCLOCK", "ZEROBASED"], "SyncThreshold": int},
    total=False,
)

ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    {"CaptureInterval": int, "CaptureIntervalUnits": Literal["MILLISECONDS", "SECONDS"]},
    total=False,
)

ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "Bitrate": int,
        "BufFillPct": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef,
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopNumBFrames": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H264_LEVEL_1",
            "H264_LEVEL_1_1",
            "H264_LEVEL_1_2",
            "H264_LEVEL_1_3",
            "H264_LEVEL_2",
            "H264_LEVEL_2_1",
            "H264_LEVEL_2_2",
            "H264_LEVEL_3",
            "H264_LEVEL_3_1",
            "H264_LEVEL_3_2",
            "H264_LEVEL_4",
            "H264_LEVEL_4_1",
            "H264_LEVEL_4_2",
            "H264_LEVEL_5",
            "H264_LEVEL_5_1",
            "H264_LEVEL_5_2",
            "H264_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumRefFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR", "VBR"],
        "ScanType": Literal["INTERLACED", "PROGRESSIVE"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Softness": int,
        "SpatialAq": Literal["DISABLED", "ENABLED"],
        "SubgopLength": Literal["DYNAMIC", "FIXED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "TemporalAq": Literal["DISABLED", "ENABLED"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Hdr10Settings": ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef,
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "AlternativeTransferFunction": Literal["INSERT", "OMIT"],
        "Bitrate": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef,
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H265_LEVEL_1",
            "H265_LEVEL_2",
            "H265_LEVEL_2_1",
            "H265_LEVEL_3",
            "H265_LEVEL_3_1",
            "H265_LEVEL_4",
            "H265_LEVEL_4_1",
            "H265_LEVEL_5",
            "H265_LEVEL_5_1",
            "H265_LEVEL_5_2",
            "H265_LEVEL_6",
            "H265_LEVEL_6_1",
            "H265_LEVEL_6_2",
            "H265_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["MAIN", "MAIN_10BIT"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR"],
        "ScanType": str,
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Tier": Literal["HIGH", "MAIN"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    {
        "FrameCaptureSettings": ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsVideoDescriptionsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsVideoDescriptionsTypeDef",
    {
        "CodecSettings": ClientStopChannelResponseEncoderSettingsVideoDescriptionsCodecSettingsTypeDef,
        "Height": int,
        "Name": str,
        "RespondToAfd": Literal["NONE", "PASSTHROUGH", "RESPOND"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "Width": int,
    },
    total=False,
)

ClientStopChannelResponseEncoderSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseEncoderSettingsTypeDef",
    {
        "AudioDescriptions": List[ClientStopChannelResponseEncoderSettingsAudioDescriptionsTypeDef],
        "AvailBlanking": ClientStopChannelResponseEncoderSettingsAvailBlankingTypeDef,
        "AvailConfiguration": ClientStopChannelResponseEncoderSettingsAvailConfigurationTypeDef,
        "BlackoutSlate": ClientStopChannelResponseEncoderSettingsBlackoutSlateTypeDef,
        "CaptionDescriptions": List[
            ClientStopChannelResponseEncoderSettingsCaptionDescriptionsTypeDef
        ],
        "GlobalConfiguration": ClientStopChannelResponseEncoderSettingsGlobalConfigurationTypeDef,
        "NielsenConfiguration": ClientStopChannelResponseEncoderSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientStopChannelResponseEncoderSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientStopChannelResponseEncoderSettingsTimecodeConfigTypeDef,
        "VideoDescriptions": List[ClientStopChannelResponseEncoderSettingsVideoDescriptionsTypeDef],
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str, "LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "Name": str,
        "SelectorSettings": ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientStopChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientStopChannelResponseInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientStopChannelResponseInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientStopChannelResponseInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientStopChannelResponseInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientStopChannelResponseInputAttachmentsTypeDef = TypedDict(
    "ClientStopChannelResponseInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientStopChannelResponseInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientStopChannelResponseInputSpecificationTypeDef = TypedDict(
    "ClientStopChannelResponseInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientStopChannelResponsePipelineDetailsTypeDef = TypedDict(
    "ClientStopChannelResponsePipelineDetailsTypeDef",
    {"ActiveInputAttachmentName": str, "ActiveInputSwitchActionName": str, "PipelineId": str},
    total=False,
)

ClientStopChannelResponseTypeDef = TypedDict(
    "ClientStopChannelResponseTypeDef",
    {
        "Arn": str,
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Destinations": List[ClientStopChannelResponseDestinationsTypeDef],
        "EgressEndpoints": List[ClientStopChannelResponseEgressEndpointsTypeDef],
        "EncoderSettings": ClientStopChannelResponseEncoderSettingsTypeDef,
        "Id": str,
        "InputAttachments": List[ClientStopChannelResponseInputAttachmentsTypeDef],
        "InputSpecification": ClientStopChannelResponseInputSpecificationTypeDef,
        "LogLevel": Literal["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"],
        "Name": str,
        "PipelineDetails": List[ClientStopChannelResponsePipelineDetailsTypeDef],
        "PipelinesRunningCount": int,
        "RoleArn": str,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
            "UPDATING",
            "UPDATE_FAILED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientStopMultiplexResponseDestinationsMediaConnectSettingsTypeDef = TypedDict(
    "ClientStopMultiplexResponseDestinationsMediaConnectSettingsTypeDef",
    {"EntitlementArn": str},
    total=False,
)

ClientStopMultiplexResponseDestinationsTypeDef = TypedDict(
    "ClientStopMultiplexResponseDestinationsTypeDef",
    {"MediaConnectSettings": ClientStopMultiplexResponseDestinationsMediaConnectSettingsTypeDef},
    total=False,
)

ClientStopMultiplexResponseMultiplexSettingsTypeDef = TypedDict(
    "ClientStopMultiplexResponseMultiplexSettingsTypeDef",
    {
        "MaximumVideoBufferDelayMilliseconds": int,
        "TransportStreamBitrate": int,
        "TransportStreamId": int,
        "TransportStreamReservedBitrate": int,
    },
    total=False,
)

ClientStopMultiplexResponseTypeDef = TypedDict(
    "ClientStopMultiplexResponseTypeDef",
    {
        "Arn": str,
        "AvailabilityZones": List[str],
        "Destinations": List[ClientStopMultiplexResponseDestinationsTypeDef],
        "Id": str,
        "MultiplexSettings": ClientStopMultiplexResponseMultiplexSettingsTypeDef,
        "Name": str,
        "PipelinesRunningCount": int,
        "ProgramCount": int,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientUpdateChannelClassDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassDestinationsMediaPackageSettingsTypeDef",
    {"ChannelId": str},
    total=False,
)

ClientUpdateChannelClassDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientUpdateChannelClassDestinationsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassDestinationsTypeDef = TypedDict(
    "ClientUpdateChannelClassDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[
            ClientUpdateChannelClassDestinationsMediaPackageSettingsTypeDef
        ],
        "MultiplexSettings": ClientUpdateChannelClassDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientUpdateChannelClassDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelDestinationsMediaPackageSettingsTypeDef",
    {"ChannelId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelDestinationsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelDestinationsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[
            ClientUpdateChannelClassResponseChannelDestinationsMediaPackageSettingsTypeDef
        ],
        "MultiplexSettings": ClientUpdateChannelClassResponseChannelDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientUpdateChannelClassResponseChannelDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEgressEndpointsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEgressEndpointsTypeDef", {"SourceIp": str}, total=False
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_1770_1", "ITU_1770_2"],
        "AlgorithmControl": str,
        "TargetLkfs": float,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "InputType": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Profile": Literal["HEV1", "HEV2", "LC"],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": float,
        "Spec": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["HIGH", "LOW", "MEDIUM_HIGH", "MEDIUM_LOW"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY",
            "COMPLETE_MAIN",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DrcProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY", "COMPLETE_MAIN", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["DISABLED", "ENABLED"],
        "Dialnorm": int,
        "DrcLine": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "DrcRf": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["NO_PASSTHROUGH", "WHEN_POSSIBLE"],
        "PhaseControl": Literal["NO_SHIFT", "SHIFT_90_DEGREES"],
        "StereoDownmix": Literal["DPL2", "LO_RO", "LT_RT", "NOT_INDICATED"],
        "SurroundExMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
        "SurroundMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0"],
        "SampleRate": float,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "Eac3Settings": ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "PassThroughSettings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    {"Gain": int, "InputChannel": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    {
        "InputChannelLevels": List[
            ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef
        ],
        "OutputChannel": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMappings": List[
            ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef
        ],
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSelectorName": str,
        "AudioType": Literal[
            "CLEAN_EFFECTS", "HEARING_IMPAIRED", "UNDEFINED", "VISUAL_IMPAIRED_COMMENTARY"
        ],
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef,
        "LanguageCode": str,
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "Name": str,
        "RemixSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAvailBlankingTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailBlankingTypeDef",
    {
        "AvailBlankingImage": ClientUpdateChannelClassResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    {
        "Scte35SpliceInsert": ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef,
        "Scte35TimeSignalApos": ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationTypeDef",
    {
        "AvailSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateTypeDef",
    {
        "BlackoutSlateImage": ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef,
        "NetworkEndBlackout": Literal["DISABLED", "ENABLED"],
        "NetworkEndBlackoutImage": ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef,
        "NetworkId": str,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StyleControl": Literal["PASSTHROUGH", "USE_CONFIGURED"]},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "AribDestinationSettings": Dict[str, Any],
        "BurnInDestinationSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef,
        "DvbSubDestinationSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": Dict[str, Any],
        "EmbeddedPlusScte20DestinationSettings": Dict[str, Any],
        "RtmpCaptionInfoDestinationSettings": Dict[str, Any],
        "Scte20PlusEmbeddedDestinationSettings": Dict[str, Any],
        "Scte27DestinationSettings": Dict[str, Any],
        "SmpteTtDestinationSettings": Dict[str, Any],
        "TeletextDestinationSettings": Dict[str, Any],
        "TtmlDestinationSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
        "WebvttDestinationSettings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "DestinationSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": str,
        "LanguageDescription": str,
        "Name": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    {
        "BlackFrameMsec": int,
        "InputLossImageColor": str,
        "InputLossImageSlate": ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef,
        "InputLossImageType": Literal["COLOR", "SLATE"],
        "RepeatFrameMsec": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationTypeDef",
    {
        "InitialAudioGain": int,
        "InputEndAction": Literal["NONE", "SWITCH_AND_LOOP_INPUTS"],
        "InputLossBehavior": ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef,
        "OutputLockingMode": Literal["EPOCH_LOCKING", "PIPELINE_LOCKING"],
        "OutputTimingSource": Literal["INPUT_CLOCK", "SYSTEM_CLOCK"],
        "SupportLowFramerateInputs": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsNielsenConfigurationTypeDef",
    {"DistributorId": str, "NielsenPcmToId3Tagging": Literal["DISABLED", "ENABLED"]},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef,
        "RolloverInterval": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {"CaptionChannel": int, "LanguageCode": str, "LanguageDescription": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
        "Salt": str,
        "Token": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "MediaStoreStorageClass": str,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    {
        "HlsAkamaiSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef,
        "HlsBasicPutSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef,
        "HlsMediaStoreSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef,
        "HlsWebdavSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    {
        "KeyProviderServer": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef,
        "StaticKeyValue": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    {
        "StaticKeySettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ADOBE", "ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "BaseUrlContent": str,
        "BaseUrlContent1": str,
        "BaseUrlManifest": str,
        "BaseUrlManifest1": str,
        "CaptionLanguageMappings": List[
            ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "NONE", "OMIT"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_4281", "RFC_6381"],
        "ConstantIv": str,
        "Destination": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "EncryptionType": Literal["AES128", "SAMPLE_AES"],
        "HlsCdnSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef,
        "HlsId3SegmentTagging": Literal["DISABLED", "ENABLED"],
        "IFrameOnlyPlaylists": Literal["DISABLED", "STANDARD"],
        "IndexNSegments": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "IvInManifest": Literal["EXCLUDE", "INCLUDE"],
        "IvSource": Literal["EXPLICIT", "FOLLOWS_SEGMENT_NUMBER"],
        "KeepSegments": int,
        "KeyFormat": str,
        "KeyFormatVersions": str,
        "KeyProviderSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinSegmentLength": int,
        "Mode": Literal["LIVE", "VOD"],
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["EXCLUDE", "INCLUDE"],
        "ProgramDateTimePeriod": int,
        "RedundantManifest": Literal["DISABLED", "ENABLED"],
        "SegmentLength": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["EXCLUDE", "INCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
        "TsFileMode": Literal["SEGMENTED_FILES", "SINGLE_FILE"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AcquisitionPointId": str,
        "AudioOnlyTimecodeControl": Literal["PASSTHROUGH", "USE_CONFIGURED_CLOCK"],
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef,
        "EventId": str,
        "EventIdMode": Literal["NO_EVENT_ID", "USE_CONFIGURED", "USE_TIMESTAMP"],
        "EventStopBehavior": Literal["NONE", "SEND_EOS"],
        "FilecacheDuration": int,
        "FragmentLength": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "NumRetries": int,
        "RestartDelay": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SendDelayMs": int,
        "SparseTrackType": Literal["NONE", "SCTE_35"],
        "StreamManifestBehavior": Literal["DO_NOT_SEND", "SEND"],
        "TimestampOffset": str,
        "TimestampOffsetMode": Literal["USE_CONFIGURED_OFFSET", "USE_EVENT_START_DATE"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    {
        "AuthenticationScheme": Literal["AKAMAI", "COMMON"],
        "CacheFullBehavior": Literal["DISCONNECT_IMMEDIATELY", "WAIT_FOR_SERVER"],
        "CacheLength": int,
        "CaptionData": Literal["ALL", "FIELD1_608", "FIELD1_AND_FIELD2_608"],
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    {
        "InputLossAction": Literal["DROP_PROGRAM", "DROP_TS", "EMIT_PROGRAM"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "ArchiveGroupSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef,
        "FrameCaptureGroupSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef,
        "HlsGroupSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MediaPackageGroupSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "MultiplexGroupSettings": Dict[str, Any],
        "RtmpGroupSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef,
        "UdpGroupSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    {
        "ContainerSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    {"NameModifier": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyImage": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "SegmentType": Literal["AAC", "FMP4"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    {"AudioRenditionSets": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "EcmPid": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "Scte35Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "Scte35Pid": str,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    {
        "AudioRenditionSets": str,
        "M3u8Settings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioOnlyHlsSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef,
        "Fmp4HlsSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef,
        "StandardHlsSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    {
        "H265PackagingType": Literal["HEV1", "HVC1"],
        "HlsSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef,
        "NameModifier": str,
        "SegmentModifier": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    {"H265PackagingType": Literal["HEV1", "HVC1"], "NameModifier": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    {
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef,
        "NumRetries": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    {"ColumnDepth": int, "IncludeFec": Literal["COLUMN", "COLUMN_AND_ROW"], "RowLength": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    {
        "BufferMsec": int,
        "ContainerSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef,
        "Destination": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef,
        "FecOutputSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "ArchiveOutputSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef,
        "FrameCaptureOutputSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef,
        "HlsOutputSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef,
        "MediaPackageOutputSettings": Dict[str, Any],
        "MsSmoothOutputSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef,
        "MultiplexOutputSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef,
        "RtmpOutputSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef,
        "UdpOutputSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptionNames": List[str],
        "CaptionDescriptionNames": List[str],
        "OutputName": str,
        "OutputSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "VideoDescriptionName": str,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsTypeDef",
    {
        "Name": str,
        "OutputGroupSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[
            ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef
        ],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsTimecodeConfigTypeDef",
    {"Source": Literal["EMBEDDED", "SYSTEMCLOCK", "ZEROBASED"], "SyncThreshold": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    {"CaptureInterval": int, "CaptureIntervalUnits": Literal["MILLISECONDS", "SECONDS"]},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "Bitrate": int,
        "BufFillPct": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef,
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopNumBFrames": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H264_LEVEL_1",
            "H264_LEVEL_1_1",
            "H264_LEVEL_1_2",
            "H264_LEVEL_1_3",
            "H264_LEVEL_2",
            "H264_LEVEL_2_1",
            "H264_LEVEL_2_2",
            "H264_LEVEL_3",
            "H264_LEVEL_3_1",
            "H264_LEVEL_3_2",
            "H264_LEVEL_4",
            "H264_LEVEL_4_1",
            "H264_LEVEL_4_2",
            "H264_LEVEL_5",
            "H264_LEVEL_5_1",
            "H264_LEVEL_5_2",
            "H264_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumRefFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR", "VBR"],
        "ScanType": Literal["INTERLACED", "PROGRESSIVE"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Softness": int,
        "SpatialAq": Literal["DISABLED", "ENABLED"],
        "SubgopLength": Literal["DYNAMIC", "FIXED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "TemporalAq": Literal["DISABLED", "ENABLED"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Hdr10Settings": ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef,
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "AlternativeTransferFunction": Literal["INSERT", "OMIT"],
        "Bitrate": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef,
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H265_LEVEL_1",
            "H265_LEVEL_2",
            "H265_LEVEL_2_1",
            "H265_LEVEL_3",
            "H265_LEVEL_3_1",
            "H265_LEVEL_4",
            "H265_LEVEL_4_1",
            "H265_LEVEL_5",
            "H265_LEVEL_5_1",
            "H265_LEVEL_5_2",
            "H265_LEVEL_6",
            "H265_LEVEL_6_1",
            "H265_LEVEL_6_2",
            "H265_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["MAIN", "MAIN_10BIT"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR"],
        "ScanType": str,
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Tier": Literal["HIGH", "MAIN"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    {
        "FrameCaptureSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsTypeDef",
    {
        "CodecSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef,
        "Height": int,
        "Name": str,
        "RespondToAfd": Literal["NONE", "PASSTHROUGH", "RESPOND"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "Width": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelEncoderSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelEncoderSettingsTypeDef",
    {
        "AudioDescriptions": List[
            ClientUpdateChannelClassResponseChannelEncoderSettingsAudioDescriptionsTypeDef
        ],
        "AvailBlanking": ClientUpdateChannelClassResponseChannelEncoderSettingsAvailBlankingTypeDef,
        "AvailConfiguration": ClientUpdateChannelClassResponseChannelEncoderSettingsAvailConfigurationTypeDef,
        "BlackoutSlate": ClientUpdateChannelClassResponseChannelEncoderSettingsBlackoutSlateTypeDef,
        "CaptionDescriptions": List[
            ClientUpdateChannelClassResponseChannelEncoderSettingsCaptionDescriptionsTypeDef
        ],
        "GlobalConfiguration": ClientUpdateChannelClassResponseChannelEncoderSettingsGlobalConfigurationTypeDef,
        "NielsenConfiguration": ClientUpdateChannelClassResponseChannelEncoderSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[
            ClientUpdateChannelClassResponseChannelEncoderSettingsOutputGroupsTypeDef
        ],
        "TimecodeConfig": ClientUpdateChannelClassResponseChannelEncoderSettingsTimecodeConfigTypeDef,
        "VideoDescriptions": List[
            ClientUpdateChannelClassResponseChannelEncoderSettingsVideoDescriptionsTypeDef
        ],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str, "LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "Name": str,
        "SelectorSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputAttachmentsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientUpdateChannelClassResponseChannelInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelInputSpecificationTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientUpdateChannelClassResponseChannelPipelineDetailsTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelPipelineDetailsTypeDef",
    {"ActiveInputAttachmentName": str, "ActiveInputSwitchActionName": str, "PipelineId": str},
    total=False,
)

ClientUpdateChannelClassResponseChannelTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseChannelTypeDef",
    {
        "Arn": str,
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Destinations": List[ClientUpdateChannelClassResponseChannelDestinationsTypeDef],
        "EgressEndpoints": List[ClientUpdateChannelClassResponseChannelEgressEndpointsTypeDef],
        "EncoderSettings": ClientUpdateChannelClassResponseChannelEncoderSettingsTypeDef,
        "Id": str,
        "InputAttachments": List[ClientUpdateChannelClassResponseChannelInputAttachmentsTypeDef],
        "InputSpecification": ClientUpdateChannelClassResponseChannelInputSpecificationTypeDef,
        "LogLevel": Literal["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"],
        "Name": str,
        "PipelineDetails": List[ClientUpdateChannelClassResponseChannelPipelineDetailsTypeDef],
        "PipelinesRunningCount": int,
        "RoleArn": str,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
            "UPDATING",
            "UPDATE_FAILED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientUpdateChannelClassResponseTypeDef = TypedDict(
    "ClientUpdateChannelClassResponseTypeDef",
    {"Channel": ClientUpdateChannelClassResponseChannelTypeDef},
    total=False,
)

ClientUpdateChannelDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientUpdateChannelDestinationsMediaPackageSettingsTypeDef", {"ChannelId": str}, total=False
)

ClientUpdateChannelDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientUpdateChannelDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientUpdateChannelDestinationsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientUpdateChannelDestinationsTypeDef = TypedDict(
    "ClientUpdateChannelDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[ClientUpdateChannelDestinationsMediaPackageSettingsTypeDef],
        "MultiplexSettings": ClientUpdateChannelDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientUpdateChannelDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_1770_1", "ITU_1770_2"],
        "AlgorithmControl": str,
        "TargetLkfs": float,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "InputType": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Profile": Literal["HEV1", "HEV2", "LC"],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": float,
        "Spec": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["HIGH", "LOW", "MEDIUM_HIGH", "MEDIUM_LOW"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY",
            "COMPLETE_MAIN",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DrcProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY", "COMPLETE_MAIN", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["DISABLED", "ENABLED"],
        "Dialnorm": int,
        "DrcLine": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "DrcRf": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["NO_PASSTHROUGH", "WHEN_POSSIBLE"],
        "PhaseControl": Literal["NO_SHIFT", "SHIFT_90_DEGREES"],
        "StereoDownmix": Literal["DPL2", "LO_RO", "LT_RT", "NOT_INDICATED"],
        "SurroundExMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
        "SurroundMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0"],
        "SampleRate": float,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "Eac3Settings": ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "PassThroughSettings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    {"Gain": int, "InputChannel": int},
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    {
        "InputChannelLevels": List[
            ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef
        ],
        "OutputChannel": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMappings": List[
            ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef
        ],
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientUpdateChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSelectorName": str,
        "AudioType": Literal[
            "CLEAN_EFFECTS", "HEARING_IMPAIRED", "UNDEFINED", "VISUAL_IMPAIRED_COMMENTARY"
        ],
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientUpdateChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef,
        "LanguageCode": str,
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "Name": str,
        "RemixSettings": ClientUpdateChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsAvailBlankingTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAvailBlankingTypeDef",
    {
        "AvailBlankingImage": ClientUpdateChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    {
        "Scte35SpliceInsert": ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef,
        "Scte35TimeSignalApos": ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsAvailConfigurationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsAvailConfigurationTypeDef",
    {"AvailSettings": ClientUpdateChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef},
    total=False,
)

ClientUpdateChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsBlackoutSlateTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsBlackoutSlateTypeDef",
    {
        "BlackoutSlateImage": ClientUpdateChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef,
        "NetworkEndBlackout": Literal["DISABLED", "ENABLED"],
        "NetworkEndBlackoutImage": ClientUpdateChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef,
        "NetworkId": str,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StyleControl": Literal["PASSTHROUGH", "USE_CONFIGURED"]},
    total=False,
)

ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "AribDestinationSettings": Dict[str, Any],
        "BurnInDestinationSettings": ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef,
        "DvbSubDestinationSettings": ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": Dict[str, Any],
        "EmbeddedPlusScte20DestinationSettings": Dict[str, Any],
        "RtmpCaptionInfoDestinationSettings": Dict[str, Any],
        "Scte20PlusEmbeddedDestinationSettings": Dict[str, Any],
        "Scte27DestinationSettings": Dict[str, Any],
        "SmpteTtDestinationSettings": Dict[str, Any],
        "TeletextDestinationSettings": Dict[str, Any],
        "TtmlDestinationSettings": ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
        "WebvttDestinationSettings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "DestinationSettings": ClientUpdateChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": str,
        "LanguageDescription": str,
        "Name": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    {
        "BlackFrameMsec": int,
        "InputLossImageColor": str,
        "InputLossImageSlate": ClientUpdateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef,
        "InputLossImageType": Literal["COLOR", "SLATE"],
        "RepeatFrameMsec": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsGlobalConfigurationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsGlobalConfigurationTypeDef",
    {
        "InitialAudioGain": int,
        "InputEndAction": Literal["NONE", "SWITCH_AND_LOOP_INPUTS"],
        "InputLossBehavior": ClientUpdateChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef,
        "OutputLockingMode": Literal["EPOCH_LOCKING", "PIPELINE_LOCKING"],
        "OutputTimingSource": Literal["INPUT_CLOCK", "SYSTEM_CLOCK"],
        "SupportLowFramerateInputs": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsNielsenConfigurationTypeDef",
    {"DistributorId": str, "NielsenPcmToId3Tagging": Literal["DISABLED", "ENABLED"]},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef,
        "RolloverInterval": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {"CaptionChannel": int, "LanguageCode": str, "LanguageDescription": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
        "Salt": str,
        "Token": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "MediaStoreStorageClass": str,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    {
        "HlsAkamaiSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef,
        "HlsBasicPutSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef,
        "HlsMediaStoreSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef,
        "HlsWebdavSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    {
        "KeyProviderServer": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef,
        "StaticKeyValue": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    {
        "StaticKeySettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ADOBE", "ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "BaseUrlContent": str,
        "BaseUrlContent1": str,
        "BaseUrlManifest": str,
        "BaseUrlManifest1": str,
        "CaptionLanguageMappings": List[
            ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "NONE", "OMIT"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_4281", "RFC_6381"],
        "ConstantIv": str,
        "Destination": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "EncryptionType": Literal["AES128", "SAMPLE_AES"],
        "HlsCdnSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef,
        "HlsId3SegmentTagging": Literal["DISABLED", "ENABLED"],
        "IFrameOnlyPlaylists": Literal["DISABLED", "STANDARD"],
        "IndexNSegments": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "IvInManifest": Literal["EXCLUDE", "INCLUDE"],
        "IvSource": Literal["EXPLICIT", "FOLLOWS_SEGMENT_NUMBER"],
        "KeepSegments": int,
        "KeyFormat": str,
        "KeyFormatVersions": str,
        "KeyProviderSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinSegmentLength": int,
        "Mode": Literal["LIVE", "VOD"],
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["EXCLUDE", "INCLUDE"],
        "ProgramDateTimePeriod": int,
        "RedundantManifest": Literal["DISABLED", "ENABLED"],
        "SegmentLength": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["EXCLUDE", "INCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
        "TsFileMode": Literal["SEGMENTED_FILES", "SINGLE_FILE"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AcquisitionPointId": str,
        "AudioOnlyTimecodeControl": Literal["PASSTHROUGH", "USE_CONFIGURED_CLOCK"],
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef,
        "EventId": str,
        "EventIdMode": Literal["NO_EVENT_ID", "USE_CONFIGURED", "USE_TIMESTAMP"],
        "EventStopBehavior": Literal["NONE", "SEND_EOS"],
        "FilecacheDuration": int,
        "FragmentLength": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "NumRetries": int,
        "RestartDelay": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SendDelayMs": int,
        "SparseTrackType": Literal["NONE", "SCTE_35"],
        "StreamManifestBehavior": Literal["DO_NOT_SEND", "SEND"],
        "TimestampOffset": str,
        "TimestampOffsetMode": Literal["USE_CONFIGURED_OFFSET", "USE_EVENT_START_DATE"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    {
        "AuthenticationScheme": Literal["AKAMAI", "COMMON"],
        "CacheFullBehavior": Literal["DISCONNECT_IMMEDIATELY", "WAIT_FOR_SERVER"],
        "CacheLength": int,
        "CaptionData": Literal["ALL", "FIELD1_608", "FIELD1_AND_FIELD2_608"],
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    {
        "InputLossAction": Literal["DROP_PROGRAM", "DROP_TS", "EMIT_PROGRAM"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "ArchiveGroupSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef,
        "FrameCaptureGroupSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef,
        "HlsGroupSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MediaPackageGroupSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "MultiplexGroupSettings": Dict[str, Any],
        "RtmpGroupSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef,
        "UdpGroupSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    {
        "ContainerSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    {"NameModifier": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyImage": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "SegmentType": Literal["AAC", "FMP4"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    {"AudioRenditionSets": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "EcmPid": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "Scte35Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "Scte35Pid": str,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    {
        "AudioRenditionSets": str,
        "M3u8Settings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioOnlyHlsSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef,
        "Fmp4HlsSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef,
        "StandardHlsSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    {
        "H265PackagingType": Literal["HEV1", "HVC1"],
        "HlsSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef,
        "NameModifier": str,
        "SegmentModifier": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    {"H265PackagingType": Literal["HEV1", "HVC1"], "NameModifier": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    {
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef,
        "NumRetries": int,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    {"ColumnDepth": int, "IncludeFec": Literal["COLUMN", "COLUMN_AND_ROW"], "RowLength": int},
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    {
        "BufferMsec": int,
        "ContainerSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef,
        "Destination": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef,
        "FecOutputSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "ArchiveOutputSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef,
        "FrameCaptureOutputSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef,
        "HlsOutputSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef,
        "MediaPackageOutputSettings": Dict[str, Any],
        "MsSmoothOutputSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef,
        "MultiplexOutputSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef,
        "RtmpOutputSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef,
        "UdpOutputSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptionNames": List[str],
        "CaptionDescriptionNames": List[str],
        "OutputName": str,
        "OutputSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "VideoDescriptionName": str,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsOutputGroupsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsOutputGroupsTypeDef",
    {
        "Name": str,
        "OutputGroupSettings": ClientUpdateChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[ClientUpdateChannelEncoderSettingsOutputGroupsOutputsTypeDef],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsTimecodeConfigTypeDef",
    {"Source": Literal["EMBEDDED", "SYSTEMCLOCK", "ZEROBASED"], "SyncThreshold": int},
    total=False,
)

ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    {"CaptureInterval": int, "CaptureIntervalUnits": Literal["MILLISECONDS", "SECONDS"]},
    total=False,
)

ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "Bitrate": int,
        "BufFillPct": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef,
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopNumBFrames": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H264_LEVEL_1",
            "H264_LEVEL_1_1",
            "H264_LEVEL_1_2",
            "H264_LEVEL_1_3",
            "H264_LEVEL_2",
            "H264_LEVEL_2_1",
            "H264_LEVEL_2_2",
            "H264_LEVEL_3",
            "H264_LEVEL_3_1",
            "H264_LEVEL_3_2",
            "H264_LEVEL_4",
            "H264_LEVEL_4_1",
            "H264_LEVEL_4_2",
            "H264_LEVEL_5",
            "H264_LEVEL_5_1",
            "H264_LEVEL_5_2",
            "H264_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumRefFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR", "VBR"],
        "ScanType": Literal["INTERLACED", "PROGRESSIVE"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Softness": int,
        "SpatialAq": Literal["DISABLED", "ENABLED"],
        "SubgopLength": Literal["DYNAMIC", "FIXED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "TemporalAq": Literal["DISABLED", "ENABLED"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Hdr10Settings": ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef,
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "AlternativeTransferFunction": Literal["INSERT", "OMIT"],
        "Bitrate": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef,
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H265_LEVEL_1",
            "H265_LEVEL_2",
            "H265_LEVEL_2_1",
            "H265_LEVEL_3",
            "H265_LEVEL_3_1",
            "H265_LEVEL_4",
            "H265_LEVEL_4_1",
            "H265_LEVEL_5",
            "H265_LEVEL_5_1",
            "H265_LEVEL_5_2",
            "H265_LEVEL_6",
            "H265_LEVEL_6_1",
            "H265_LEVEL_6_2",
            "H265_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["MAIN", "MAIN_10BIT"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR"],
        "ScanType": str,
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Tier": Literal["HIGH", "MAIN"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    {
        "FrameCaptureSettings": ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelEncoderSettingsVideoDescriptionsTypeDef = TypedDict(
    "ClientUpdateChannelEncoderSettingsVideoDescriptionsTypeDef",
    {
        "CodecSettings": ClientUpdateChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef,
        "Height": int,
        "Name": str,
        "RespondToAfd": Literal["NONE", "PASSTHROUGH", "RESPOND"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "Width": int,
    },
    total=False,
)

_RequiredClientUpdateChannelEncoderSettingsTypeDef = TypedDict(
    "_RequiredClientUpdateChannelEncoderSettingsTypeDef",
    {"AudioDescriptions": List[ClientUpdateChannelEncoderSettingsAudioDescriptionsTypeDef]},
)
_OptionalClientUpdateChannelEncoderSettingsTypeDef = TypedDict(
    "_OptionalClientUpdateChannelEncoderSettingsTypeDef",
    {
        "AvailBlanking": ClientUpdateChannelEncoderSettingsAvailBlankingTypeDef,
        "AvailConfiguration": ClientUpdateChannelEncoderSettingsAvailConfigurationTypeDef,
        "BlackoutSlate": ClientUpdateChannelEncoderSettingsBlackoutSlateTypeDef,
        "CaptionDescriptions": List[ClientUpdateChannelEncoderSettingsCaptionDescriptionsTypeDef],
        "GlobalConfiguration": ClientUpdateChannelEncoderSettingsGlobalConfigurationTypeDef,
        "NielsenConfiguration": ClientUpdateChannelEncoderSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientUpdateChannelEncoderSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientUpdateChannelEncoderSettingsTimecodeConfigTypeDef,
        "VideoDescriptions": List[ClientUpdateChannelEncoderSettingsVideoDescriptionsTypeDef],
    },
    total=False,
)


class ClientUpdateChannelEncoderSettingsTypeDef(
    _RequiredClientUpdateChannelEncoderSettingsTypeDef,
    _OptionalClientUpdateChannelEncoderSettingsTypeDef,
):
    pass


_RequiredClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "_RequiredClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str},
)
_OptionalClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "_OptionalClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)


class ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef(
    _RequiredClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
    _OptionalClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
):
    pass


ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

_RequiredClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "_RequiredClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef", {"Name": str}
)
_OptionalClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "_OptionalClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "SelectorSettings": ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef
    },
    total=False,
)


class ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef(
    _RequiredClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef,
    _OptionalClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef,
):
    pass


ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientUpdateChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientUpdateChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientUpdateChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientUpdateChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientUpdateChannelInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientUpdateChannelInputAttachmentsTypeDef = TypedDict(
    "ClientUpdateChannelInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientUpdateChannelInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelInputSpecificationTypeDef = TypedDict(
    "ClientUpdateChannelInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelDestinationsMediaPackageSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelDestinationsMediaPackageSettingsTypeDef",
    {"ChannelId": str},
    total=False,
)

ClientUpdateChannelResponseChannelDestinationsMultiplexSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelDestinationsMultiplexSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

ClientUpdateChannelResponseChannelDestinationsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelDestinationsSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

ClientUpdateChannelResponseChannelDestinationsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelDestinationsTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[
            ClientUpdateChannelResponseChannelDestinationsMediaPackageSettingsTypeDef
        ],
        "MultiplexSettings": ClientUpdateChannelResponseChannelDestinationsMultiplexSettingsTypeDef,
        "Settings": List[ClientUpdateChannelResponseChannelDestinationsSettingsTypeDef],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEgressEndpointsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEgressEndpointsTypeDef", {"SourceIp": str}, total=False
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef",
    {
        "Algorithm": Literal["ITU_1770_1", "ITU_1770_2"],
        "AlgorithmControl": str,
        "TargetLkfs": float,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal[
            "AD_RECEIVER_MIX",
            "CODING_MODE_1_0",
            "CODING_MODE_1_1",
            "CODING_MODE_2_0",
            "CODING_MODE_5_1",
        ],
        "InputType": Literal["BROADCASTER_MIXED_AD", "NORMAL"],
        "Profile": Literal["HEV1", "HEV2", "LC"],
        "RateControlMode": Literal["CBR", "VBR"],
        "RawFormat": Literal["LATM_LOAS", "NONE"],
        "SampleRate": float,
        "Spec": Literal["MPEG2", "MPEG4"],
        "VbrQuality": Literal["HIGH", "LOW", "MEDIUM_HIGH", "MEDIUM_LOW"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef",
    {
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY",
            "COMPLETE_MAIN",
            "DIALOGUE",
            "EMERGENCY",
            "HEARING_IMPAIRED",
            "MUSIC_AND_EFFECTS",
            "VISUALLY_IMPAIRED",
            "VOICE_OVER",
        ],
        "CodingMode": Literal[
            "CODING_MODE_1_0", "CODING_MODE_1_1", "CODING_MODE_2_0", "CODING_MODE_3_2_LFE"
        ],
        "Dialnorm": int,
        "DrcProfile": Literal["FILM_STANDARD", "NONE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef",
    {
        "AttenuationControl": Literal["ATTENUATE_3_DB", "NONE"],
        "Bitrate": float,
        "BitstreamMode": Literal[
            "COMMENTARY", "COMPLETE_MAIN", "EMERGENCY", "HEARING_IMPAIRED", "VISUALLY_IMPAIRED"
        ],
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0", "CODING_MODE_3_2"],
        "DcFilter": Literal["DISABLED", "ENABLED"],
        "Dialnorm": int,
        "DrcLine": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "DrcRf": Literal[
            "FILM_LIGHT", "FILM_STANDARD", "MUSIC_LIGHT", "MUSIC_STANDARD", "NONE", "SPEECH"
        ],
        "LfeControl": Literal["LFE", "NO_LFE"],
        "LfeFilter": Literal["DISABLED", "ENABLED"],
        "LoRoCenterMixLevel": float,
        "LoRoSurroundMixLevel": float,
        "LtRtCenterMixLevel": float,
        "LtRtSurroundMixLevel": float,
        "MetadataControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "PassthroughControl": Literal["NO_PASSTHROUGH", "WHEN_POSSIBLE"],
        "PhaseControl": Literal["NO_SHIFT", "SHIFT_90_DEGREES"],
        "StereoDownmix": Literal["DPL2", "LO_RO", "LT_RT", "NOT_INDICATED"],
        "SurroundExMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
        "SurroundMode": Literal["DISABLED", "ENABLED", "NOT_INDICATED"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef",
    {
        "Bitrate": float,
        "CodingMode": Literal["CODING_MODE_1_0", "CODING_MODE_2_0"],
        "SampleRate": float,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef",
    {
        "AacSettings": ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAacSettingsTypeDef,
        "Ac3Settings": ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsAc3SettingsTypeDef,
        "Eac3Settings": ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsEac3SettingsTypeDef,
        "Mp2Settings": ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsMp2SettingsTypeDef,
        "PassThroughSettings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef",
    {"Gain": int, "InputChannel": int},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef",
    {
        "InputChannelLevels": List[
            ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsInputChannelLevelsTypeDef
        ],
        "OutputChannel": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef",
    {
        "ChannelMappings": List[
            ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsChannelMappingsTypeDef
        ],
        "ChannelsIn": int,
        "ChannelsOut": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsTypeDef",
    {
        "AudioNormalizationSettings": ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsAudioNormalizationSettingsTypeDef,
        "AudioSelectorName": str,
        "AudioType": Literal[
            "CLEAN_EFFECTS", "HEARING_IMPAIRED", "UNDEFINED", "VISUAL_IMPAIRED_COMMENTARY"
        ],
        "AudioTypeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "CodecSettings": ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsCodecSettingsTypeDef,
        "LanguageCode": str,
        "LanguageCodeControl": Literal["FOLLOW_INPUT", "USE_CONFIGURED"],
        "Name": str,
        "RemixSettings": ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsRemixSettingsTypeDef,
        "StreamName": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAvailBlankingTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailBlankingTypeDef",
    {
        "AvailBlankingImage": ClientUpdateChannelResponseChannelEncoderSettingsAvailBlankingAvailBlankingImageTypeDef,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef",
    {
        "AdAvailOffset": int,
        "NoRegionalBlackoutFlag": Literal["FOLLOW", "IGNORE"],
        "WebDeliveryAllowedFlag": Literal["FOLLOW", "IGNORE"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef",
    {
        "Scte35SpliceInsert": ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35SpliceInsertTypeDef,
        "Scte35TimeSignalApos": ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsScte35TimeSignalAposTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationTypeDef",
    {
        "AvailSettings": ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationAvailSettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateTypeDef",
    {
        "BlackoutSlateImage": ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateBlackoutSlateImageTypeDef,
        "NetworkEndBlackout": Literal["DISABLED", "ENABLED"],
        "NetworkEndBlackoutImage": ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateNetworkEndBlackoutImageTypeDef,
        "NetworkId": str,
        "State": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef",
    {
        "Alignment": Literal["CENTERED", "LEFT", "SMART"],
        "BackgroundColor": Literal["BLACK", "NONE", "WHITE"],
        "BackgroundOpacity": int,
        "Font": ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsFontTypeDef,
        "FontColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "FontOpacity": int,
        "FontResolution": int,
        "FontSize": str,
        "OutlineColor": Literal["BLACK", "BLUE", "GREEN", "RED", "WHITE", "YELLOW"],
        "OutlineSize": int,
        "ShadowColor": Literal["BLACK", "NONE", "WHITE"],
        "ShadowOpacity": int,
        "ShadowXOffset": int,
        "ShadowYOffset": int,
        "TeletextGridControl": Literal["FIXED", "SCALED"],
        "XPosition": int,
        "YPosition": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef",
    {"StyleControl": Literal["PASSTHROUGH", "USE_CONFIGURED"]},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef",
    {
        "AribDestinationSettings": Dict[str, Any],
        "BurnInDestinationSettings": ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsBurnInDestinationSettingsTypeDef,
        "DvbSubDestinationSettings": ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsDvbSubDestinationSettingsTypeDef,
        "EmbeddedDestinationSettings": Dict[str, Any],
        "EmbeddedPlusScte20DestinationSettings": Dict[str, Any],
        "RtmpCaptionInfoDestinationSettings": Dict[str, Any],
        "Scte20PlusEmbeddedDestinationSettings": Dict[str, Any],
        "Scte27DestinationSettings": Dict[str, Any],
        "SmpteTtDestinationSettings": Dict[str, Any],
        "TeletextDestinationSettings": Dict[str, Any],
        "TtmlDestinationSettings": ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTtmlDestinationSettingsTypeDef,
        "WebvttDestinationSettings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsTypeDef",
    {
        "CaptionSelectorName": str,
        "DestinationSettings": ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsDestinationSettingsTypeDef,
        "LanguageCode": str,
        "LanguageDescription": str,
        "Name": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef",
    {
        "BlackFrameMsec": int,
        "InputLossImageColor": str,
        "InputLossImageSlate": ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorInputLossImageSlateTypeDef,
        "InputLossImageType": Literal["COLOR", "SLATE"],
        "RepeatFrameMsec": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationTypeDef",
    {
        "InitialAudioGain": int,
        "InputEndAction": Literal["NONE", "SWITCH_AND_LOOP_INPUTS"],
        "InputLossBehavior": ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationInputLossBehaviorTypeDef,
        "OutputLockingMode": Literal["EPOCH_LOCKING", "PIPELINE_LOCKING"],
        "OutputTimingSource": Literal["INPUT_CLOCK", "SYSTEM_CLOCK"],
        "SupportLowFramerateInputs": Literal["DISABLED", "ENABLED"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsNielsenConfigurationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsNielsenConfigurationTypeDef",
    {"DistributorId": str, "NielsenPcmToId3Tagging": Literal["DISABLED", "ENABLED"]},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsDestinationTypeDef,
        "RolloverInterval": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef",
    {"CaptionChannel": int, "LanguageCode": str, "LanguageDescription": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
        "Salt": str,
        "Token": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "MediaStoreStorageClass": str,
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef",
    {
        "ConnectionRetryInterval": int,
        "FilecacheDuration": int,
        "HttpTransferMode": Literal["CHUNKED", "NON_CHUNKED"],
        "NumRetries": int,
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef",
    {
        "HlsAkamaiSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsAkamaiSettingsTypeDef,
        "HlsBasicPutSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsBasicPutSettingsTypeDef,
        "HlsMediaStoreSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsMediaStoreSettingsTypeDef,
        "HlsWebdavSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsHlsWebdavSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef",
    {
        "KeyProviderServer": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsKeyProviderServerTypeDef,
        "StaticKeyValue": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef",
    {
        "StaticKeySettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsStaticKeySettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef",
    {
        "AdMarkers": List[Literal["ADOBE", "ELEMENTAL", "ELEMENTAL_SCTE35"]],
        "BaseUrlContent": str,
        "BaseUrlContent1": str,
        "BaseUrlManifest": str,
        "BaseUrlManifest1": str,
        "CaptionLanguageMappings": List[
            ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsCaptionLanguageMappingsTypeDef
        ],
        "CaptionLanguageSetting": Literal["INSERT", "NONE", "OMIT"],
        "ClientCache": Literal["DISABLED", "ENABLED"],
        "CodecSpecification": Literal["RFC_4281", "RFC_6381"],
        "ConstantIv": str,
        "Destination": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsDestinationTypeDef,
        "DirectoryStructure": Literal["SINGLE_DIRECTORY", "SUBDIRECTORY_PER_STREAM"],
        "EncryptionType": Literal["AES128", "SAMPLE_AES"],
        "HlsCdnSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsHlsCdnSettingsTypeDef,
        "HlsId3SegmentTagging": Literal["DISABLED", "ENABLED"],
        "IFrameOnlyPlaylists": Literal["DISABLED", "STANDARD"],
        "IndexNSegments": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "IvInManifest": Literal["EXCLUDE", "INCLUDE"],
        "IvSource": Literal["EXPLICIT", "FOLLOWS_SEGMENT_NUMBER"],
        "KeepSegments": int,
        "KeyFormat": str,
        "KeyFormatVersions": str,
        "KeyProviderSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsKeyProviderSettingsTypeDef,
        "ManifestCompression": Literal["GZIP", "NONE"],
        "ManifestDurationFormat": Literal["FLOATING_POINT", "INTEGER"],
        "MinSegmentLength": int,
        "Mode": Literal["LIVE", "VOD"],
        "OutputSelection": Literal["MANIFESTS_AND_SEGMENTS", "SEGMENTS_ONLY"],
        "ProgramDateTime": Literal["EXCLUDE", "INCLUDE"],
        "ProgramDateTimePeriod": int,
        "RedundantManifest": Literal["DISABLED", "ENABLED"],
        "SegmentLength": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SegmentsPerSubdirectory": int,
        "StreamInfResolution": Literal["EXCLUDE", "INCLUDE"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
        "TimestampDeltaMilliseconds": int,
        "TsFileMode": Literal["SEGMENTED_FILES", "SINGLE_FILE"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsDestinationTypeDef
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef",
    {
        "AcquisitionPointId": str,
        "AudioOnlyTimecodeControl": Literal["PASSTHROUGH", "USE_CONFIGURED_CLOCK"],
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsDestinationTypeDef,
        "EventId": str,
        "EventIdMode": Literal["NO_EVENT_ID", "USE_CONFIGURED", "USE_TIMESTAMP"],
        "EventStopBehavior": Literal["NONE", "SEND_EOS"],
        "FilecacheDuration": int,
        "FragmentLength": int,
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "NumRetries": int,
        "RestartDelay": int,
        "SegmentationMode": Literal["USE_INPUT_SEGMENTATION", "USE_SEGMENT_DURATION"],
        "SendDelayMs": int,
        "SparseTrackType": Literal["NONE", "SCTE_35"],
        "StreamManifestBehavior": Literal["DO_NOT_SEND", "SEND"],
        "TimestampOffset": str,
        "TimestampOffsetMode": Literal["USE_CONFIGURED_OFFSET", "USE_EVENT_START_DATE"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef",
    {
        "AuthenticationScheme": Literal["AKAMAI", "COMMON"],
        "CacheFullBehavior": Literal["DISCONNECT_IMMEDIATELY", "WAIT_FOR_SERVER"],
        "CacheLength": int,
        "CaptionData": Literal["ALL", "FIELD1_608", "FIELD1_AND_FIELD2_608"],
        "InputLossAction": Literal["EMIT_OUTPUT", "PAUSE_OUTPUT"],
        "RestartDelay": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef",
    {
        "InputLossAction": Literal["DROP_PROGRAM", "DROP_TS", "EMIT_PROGRAM"],
        "TimedMetadataId3Frame": Literal["NONE", "PRIV", "TDRL"],
        "TimedMetadataId3Period": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef",
    {
        "ArchiveGroupSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsArchiveGroupSettingsTypeDef,
        "FrameCaptureGroupSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsFrameCaptureGroupSettingsTypeDef,
        "HlsGroupSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsHlsGroupSettingsTypeDef,
        "MediaPackageGroupSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMediaPackageGroupSettingsTypeDef,
        "MsSmoothGroupSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsMsSmoothGroupSettingsTypeDef,
        "MultiplexGroupSettings": Dict[str, Any],
        "RtmpGroupSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsRtmpGroupSettingsTypeDef,
        "UdpGroupSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsUdpGroupSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef",
    {
        "ContainerSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsContainerSettingsTypeDef,
        "Extension": str,
        "NameModifier": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef",
    {"NameModifier": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef",
    {"PasswordParam": str, "Uri": str, "Username": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef",
    {
        "AudioGroupId": str,
        "AudioOnlyImage": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsAudioOnlyImageTypeDef,
        "AudioTrackType": Literal[
            "ALTERNATE_AUDIO_AUTO_SELECT",
            "ALTERNATE_AUDIO_AUTO_SELECT_DEFAULT",
            "ALTERNATE_AUDIO_NOT_AUTO_SELECT",
            "AUDIO_ONLY_VARIANT_STREAM",
        ],
        "SegmentType": Literal["AAC", "FMP4"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef",
    {"AudioRenditionSets": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef",
    {
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "EcmPid": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "Scte35Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "Scte35Pid": str,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef",
    {
        "AudioRenditionSets": str,
        "M3u8Settings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsM3u8SettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef",
    {
        "AudioOnlyHlsSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsAudioOnlyHlsSettingsTypeDef,
        "Fmp4HlsSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsFmp4HlsSettingsTypeDef,
        "StandardHlsSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsStandardHlsSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef",
    {
        "H265PackagingType": Literal["HEV1", "HVC1"],
        "HlsSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsHlsSettingsTypeDef,
        "NameModifier": str,
        "SegmentModifier": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef",
    {"H265PackagingType": Literal["HEV1", "HVC1"], "NameModifier": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef",
    {
        "Destination": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsDestinationTypeDef
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef",
    {
        "CertificateMode": Literal["SELF_SIGNED", "VERIFY_AUTHENTICITY"],
        "ConnectionRetryInterval": int,
        "Destination": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsDestinationTypeDef,
        "NumRetries": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef",
    {"NetworkId": int, "NetworkName": str, "RepInterval": int},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef",
    {
        "OutputSdt": Literal["SDT_FOLLOW", "SDT_FOLLOW_IF_PRESENT", "SDT_MANUAL", "SDT_NONE"],
        "RepInterval": int,
        "ServiceName": str,
        "ServiceProviderName": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef",
    {"RepInterval": int},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef",
    {
        "AbsentInputAudioBehavior": Literal["DROP", "ENCODE_SILENCE"],
        "Arib": Literal["DISABLED", "ENABLED"],
        "AribCaptionsPid": str,
        "AribCaptionsPidControl": Literal["AUTO", "USE_CONFIGURED"],
        "AudioBufferModel": Literal["ATSC", "DVB"],
        "AudioFramesPerPes": int,
        "AudioPids": str,
        "AudioStreamType": Literal["ATSC", "DVB"],
        "Bitrate": int,
        "BufferModel": Literal["MULTIPLEX", "NONE"],
        "CcDescriptor": Literal["DISABLED", "ENABLED"],
        "DvbNitSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbNitSettingsTypeDef,
        "DvbSdtSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbSdtSettingsTypeDef,
        "DvbSubPids": str,
        "DvbTdtSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsDvbTdtSettingsTypeDef,
        "DvbTeletextPid": str,
        "Ebif": Literal["NONE", "PASSTHROUGH"],
        "EbpAudioInterval": Literal["VIDEO_AND_FIXED_INTERVALS", "VIDEO_INTERVAL"],
        "EbpLookaheadMs": int,
        "EbpPlacement": Literal["VIDEO_AND_AUDIO_PIDS", "VIDEO_PID"],
        "EcmPid": str,
        "EsRateInPes": Literal["EXCLUDE", "INCLUDE"],
        "EtvPlatformPid": str,
        "EtvSignalPid": str,
        "FragmentTime": float,
        "Klv": Literal["NONE", "PASSTHROUGH"],
        "KlvDataPids": str,
        "NielsenId3Behavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "NullPacketBitrate": float,
        "PatInterval": int,
        "PcrControl": Literal["CONFIGURED_PCR_PERIOD", "PCR_EVERY_PES_PACKET"],
        "PcrPeriod": int,
        "PcrPid": str,
        "PmtInterval": int,
        "PmtPid": str,
        "ProgramNum": int,
        "RateMode": Literal["CBR", "VBR"],
        "Scte27Pids": str,
        "Scte35Control": Literal["NONE", "PASSTHROUGH"],
        "Scte35Pid": str,
        "SegmentationMarkers": Literal[
            "EBP", "EBP_LEGACY", "NONE", "PSI_SEGSTART", "RAI_ADAPT", "RAI_SEGSTART"
        ],
        "SegmentationStyle": Literal["MAINTAIN_CADENCE", "RESET_CADENCE"],
        "SegmentationTime": float,
        "TimedMetadataBehavior": Literal["NO_PASSTHROUGH", "PASSTHROUGH"],
        "TimedMetadataPid": str,
        "TransportStreamId": int,
        "VideoPid": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef",
    {
        "M2tsSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsM2tsSettingsTypeDef
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef",
    {"DestinationRefId": str},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef",
    {"ColumnDepth": int, "IncludeFec": Literal["COLUMN", "COLUMN_AND_ROW"], "RowLength": int},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef",
    {
        "BufferMsec": int,
        "ContainerSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsContainerSettingsTypeDef,
        "Destination": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsDestinationTypeDef,
        "FecOutputSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsFecOutputSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef",
    {
        "ArchiveOutputSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsArchiveOutputSettingsTypeDef,
        "FrameCaptureOutputSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsFrameCaptureOutputSettingsTypeDef,
        "HlsOutputSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsHlsOutputSettingsTypeDef,
        "MediaPackageOutputSettings": Dict[str, Any],
        "MsSmoothOutputSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMsSmoothOutputSettingsTypeDef,
        "MultiplexOutputSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsMultiplexOutputSettingsTypeDef,
        "RtmpOutputSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsRtmpOutputSettingsTypeDef,
        "UdpOutputSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsUdpOutputSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef",
    {
        "AudioDescriptionNames": List[str],
        "CaptionDescriptionNames": List[str],
        "OutputName": str,
        "OutputSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsOutputSettingsTypeDef,
        "VideoDescriptionName": str,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsTypeDef",
    {
        "Name": str,
        "OutputGroupSettings": ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputGroupSettingsTypeDef,
        "Outputs": List[
            ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsOutputsTypeDef
        ],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsTimecodeConfigTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsTimecodeConfigTypeDef",
    {"Source": Literal["EMBEDDED", "SYSTEMCLOCK", "ZEROBASED"], "SyncThreshold": int},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef",
    {"CaptureInterval": int, "CaptureIntervalUnits": Literal["MILLISECONDS", "SECONDS"]},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "Bitrate": int,
        "BufFillPct": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsColorSpaceSettingsTypeDef,
        "EntropyEncoding": Literal["CABAC", "CAVLC"],
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopBReference": Literal["DISABLED", "ENABLED"],
        "GopClosedCadence": int,
        "GopNumBFrames": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H264_LEVEL_1",
            "H264_LEVEL_1_1",
            "H264_LEVEL_1_2",
            "H264_LEVEL_1_3",
            "H264_LEVEL_2",
            "H264_LEVEL_2_1",
            "H264_LEVEL_2_2",
            "H264_LEVEL_3",
            "H264_LEVEL_3_1",
            "H264_LEVEL_3_2",
            "H264_LEVEL_4",
            "H264_LEVEL_4_1",
            "H264_LEVEL_4_2",
            "H264_LEVEL_5",
            "H264_LEVEL_5_1",
            "H264_LEVEL_5_2",
            "H264_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "NumRefFrames": int,
        "ParControl": Literal["INITIALIZE_FROM_SOURCE", "SPECIFIED"],
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["BASELINE", "HIGH", "HIGH_10BIT", "HIGH_422", "HIGH_422_10BIT", "MAIN"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR", "VBR"],
        "ScanType": Literal["INTERLACED", "PROGRESSIVE"],
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Softness": int,
        "SpatialAq": Literal["DISABLED", "ENABLED"],
        "SubgopLength": Literal["DYNAMIC", "FIXED"],
        "Syntax": Literal["DEFAULT", "RP2027"],
        "TemporalAq": Literal["DISABLED", "ENABLED"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef",
    {"MaxCll": int, "MaxFall": int},
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef",
    {
        "ColorSpacePassthroughSettings": Dict[str, Any],
        "Hdr10Settings": ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsHdr10SettingsTypeDef,
        "Rec601Settings": Dict[str, Any],
        "Rec709Settings": Dict[str, Any],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef",
    {
        "AdaptiveQuantization": Literal["HIGH", "HIGHER", "LOW", "MAX", "MEDIUM", "OFF"],
        "AfdSignaling": Literal["AUTO", "FIXED", "NONE"],
        "AlternativeTransferFunction": Literal["INSERT", "OMIT"],
        "Bitrate": int,
        "BufSize": int,
        "ColorMetadata": Literal["IGNORE", "INSERT"],
        "ColorSpaceSettings": ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsColorSpaceSettingsTypeDef,
        "FixedAfd": Literal[
            "AFD_0000",
            "AFD_0010",
            "AFD_0011",
            "AFD_0100",
            "AFD_1000",
            "AFD_1001",
            "AFD_1010",
            "AFD_1011",
            "AFD_1101",
            "AFD_1110",
            "AFD_1111",
        ],
        "FlickerAq": Literal["DISABLED", "ENABLED"],
        "FramerateDenominator": int,
        "FramerateNumerator": int,
        "GopClosedCadence": int,
        "GopSize": float,
        "GopSizeUnits": Literal["FRAMES", "SECONDS"],
        "Level": Literal[
            "H265_LEVEL_1",
            "H265_LEVEL_2",
            "H265_LEVEL_2_1",
            "H265_LEVEL_3",
            "H265_LEVEL_3_1",
            "H265_LEVEL_4",
            "H265_LEVEL_4_1",
            "H265_LEVEL_5",
            "H265_LEVEL_5_1",
            "H265_LEVEL_5_2",
            "H265_LEVEL_6",
            "H265_LEVEL_6_1",
            "H265_LEVEL_6_2",
            "H265_LEVEL_AUTO",
        ],
        "LookAheadRateControl": Literal["HIGH", "LOW", "MEDIUM"],
        "MaxBitrate": int,
        "MinIInterval": int,
        "ParDenominator": int,
        "ParNumerator": int,
        "Profile": Literal["MAIN", "MAIN_10BIT"],
        "QvbrQualityLevel": int,
        "RateControlMode": Literal["CBR", "MULTIPLEX", "QVBR"],
        "ScanType": str,
        "SceneChangeDetect": Literal["DISABLED", "ENABLED"],
        "Slices": int,
        "Tier": Literal["HIGH", "MAIN"],
        "TimecodeInsertion": Literal["DISABLED", "PIC_TIMING_SEI"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef",
    {
        "FrameCaptureSettings": ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsFrameCaptureSettingsTypeDef,
        "H264Settings": ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH264SettingsTypeDef,
        "H265Settings": ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsH265SettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsTypeDef",
    {
        "CodecSettings": ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsCodecSettingsTypeDef,
        "Height": int,
        "Name": str,
        "RespondToAfd": Literal["NONE", "PASSTHROUGH", "RESPOND"],
        "ScalingBehavior": Literal["DEFAULT", "STRETCH_TO_OUTPUT"],
        "Sharpness": int,
        "Width": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelEncoderSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelEncoderSettingsTypeDef",
    {
        "AudioDescriptions": List[
            ClientUpdateChannelResponseChannelEncoderSettingsAudioDescriptionsTypeDef
        ],
        "AvailBlanking": ClientUpdateChannelResponseChannelEncoderSettingsAvailBlankingTypeDef,
        "AvailConfiguration": ClientUpdateChannelResponseChannelEncoderSettingsAvailConfigurationTypeDef,
        "BlackoutSlate": ClientUpdateChannelResponseChannelEncoderSettingsBlackoutSlateTypeDef,
        "CaptionDescriptions": List[
            ClientUpdateChannelResponseChannelEncoderSettingsCaptionDescriptionsTypeDef
        ],
        "GlobalConfiguration": ClientUpdateChannelResponseChannelEncoderSettingsGlobalConfigurationTypeDef,
        "NielsenConfiguration": ClientUpdateChannelResponseChannelEncoderSettingsNielsenConfigurationTypeDef,
        "OutputGroups": List[ClientUpdateChannelResponseChannelEncoderSettingsOutputGroupsTypeDef],
        "TimecodeConfig": ClientUpdateChannelResponseChannelEncoderSettingsTimecodeConfigTypeDef,
        "VideoDescriptions": List[
            ClientUpdateChannelResponseChannelEncoderSettingsVideoDescriptionsTypeDef
        ],
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef",
    {"LanguageCode": str, "LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioLanguageSelectionTypeDef,
        "AudioPidSelection": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsAudioPidSelectionTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef",
    {
        "Name": str,
        "SelectorSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef",
    {"PageNumber": str},
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsDvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsEmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte20SourceSettingsTypeDef,
        "Scte27SourceSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsScte27SourceSettingsTypeDef,
        "TeletextSourceSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTeletextSourceSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef",
    {
        "LanguageCode": str,
        "Name": str,
        "SelectorSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsSelectorSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsHlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef",
    {"Pid": int},
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef",
    {"ProgramId": int},
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorPidTypeDef,
        "VideoSelectorProgramId": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsVideoSelectorProgramIdTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorSelectorSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsTypeDef",
    {
        "AudioSelectors": List[
            ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsAudioSelectorsTypeDef
        ],
        "CaptionSelectors": List[
            ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsCaptionSelectorsTypeDef
        ],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsNetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsVideoSelectorTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputAttachmentsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputAttachmentsTypeDef",
    {
        "InputAttachmentName": str,
        "InputId": str,
        "InputSettings": ClientUpdateChannelResponseChannelInputAttachmentsInputSettingsTypeDef,
    },
    total=False,
)

ClientUpdateChannelResponseChannelInputSpecificationTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelInputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

ClientUpdateChannelResponseChannelPipelineDetailsTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelPipelineDetailsTypeDef",
    {"ActiveInputAttachmentName": str, "ActiveInputSwitchActionName": str, "PipelineId": str},
    total=False,
)

ClientUpdateChannelResponseChannelTypeDef = TypedDict(
    "ClientUpdateChannelResponseChannelTypeDef",
    {
        "Arn": str,
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Destinations": List[ClientUpdateChannelResponseChannelDestinationsTypeDef],
        "EgressEndpoints": List[ClientUpdateChannelResponseChannelEgressEndpointsTypeDef],
        "EncoderSettings": ClientUpdateChannelResponseChannelEncoderSettingsTypeDef,
        "Id": str,
        "InputAttachments": List[ClientUpdateChannelResponseChannelInputAttachmentsTypeDef],
        "InputSpecification": ClientUpdateChannelResponseChannelInputSpecificationTypeDef,
        "LogLevel": Literal["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"],
        "Name": str,
        "PipelineDetails": List[ClientUpdateChannelResponseChannelPipelineDetailsTypeDef],
        "PipelinesRunningCount": int,
        "RoleArn": str,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
            "UPDATING",
            "UPDATE_FAILED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientUpdateChannelResponseTypeDef = TypedDict(
    "ClientUpdateChannelResponseTypeDef",
    {"Channel": ClientUpdateChannelResponseChannelTypeDef},
    total=False,
)

ClientUpdateInputDestinationsTypeDef = TypedDict(
    "ClientUpdateInputDestinationsTypeDef", {"StreamName": str}, total=False
)

ClientUpdateInputMediaConnectFlowsTypeDef = TypedDict(
    "ClientUpdateInputMediaConnectFlowsTypeDef", {"FlowArn": str}, total=False
)

ClientUpdateInputResponseInputDestinationsVpcTypeDef = TypedDict(
    "ClientUpdateInputResponseInputDestinationsVpcTypeDef",
    {"AvailabilityZone": str, "NetworkInterfaceId": str},
    total=False,
)

ClientUpdateInputResponseInputDestinationsTypeDef = TypedDict(
    "ClientUpdateInputResponseInputDestinationsTypeDef",
    {
        "Ip": str,
        "Port": str,
        "Url": str,
        "Vpc": ClientUpdateInputResponseInputDestinationsVpcTypeDef,
    },
    total=False,
)

ClientUpdateInputResponseInputMediaConnectFlowsTypeDef = TypedDict(
    "ClientUpdateInputResponseInputMediaConnectFlowsTypeDef", {"FlowArn": str}, total=False
)

ClientUpdateInputResponseInputSourcesTypeDef = TypedDict(
    "ClientUpdateInputResponseInputSourcesTypeDef",
    {"PasswordParam": str, "Url": str, "Username": str},
    total=False,
)

ClientUpdateInputResponseInputTypeDef = TypedDict(
    "ClientUpdateInputResponseInputTypeDef",
    {
        "Arn": str,
        "AttachedChannels": List[str],
        "Destinations": List[ClientUpdateInputResponseInputDestinationsTypeDef],
        "Id": str,
        "InputClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "InputSourceType": Literal["STATIC", "DYNAMIC"],
        "MediaConnectFlows": List[ClientUpdateInputResponseInputMediaConnectFlowsTypeDef],
        "Name": str,
        "RoleArn": str,
        "SecurityGroups": List[str],
        "Sources": List[ClientUpdateInputResponseInputSourcesTypeDef],
        "State": Literal["CREATING", "DETACHED", "ATTACHED", "DELETING", "DELETED"],
        "Tags": Dict[str, str],
        "Type": Literal[
            "UDP_PUSH", "RTP_PUSH", "RTMP_PUSH", "RTMP_PULL", "URL_PULL", "MP4_FILE", "MEDIACONNECT"
        ],
    },
    total=False,
)

ClientUpdateInputResponseTypeDef = TypedDict(
    "ClientUpdateInputResponseTypeDef",
    {"Input": ClientUpdateInputResponseInputTypeDef},
    total=False,
)

ClientUpdateInputSecurityGroupResponseSecurityGroupWhitelistRulesTypeDef = TypedDict(
    "ClientUpdateInputSecurityGroupResponseSecurityGroupWhitelistRulesTypeDef",
    {"Cidr": str},
    total=False,
)

ClientUpdateInputSecurityGroupResponseSecurityGroupTypeDef = TypedDict(
    "ClientUpdateInputSecurityGroupResponseSecurityGroupTypeDef",
    {
        "Arn": str,
        "Id": str,
        "Inputs": List[str],
        "State": Literal["IDLE", "IN_USE", "UPDATING", "DELETED"],
        "Tags": Dict[str, str],
        "WhitelistRules": List[
            ClientUpdateInputSecurityGroupResponseSecurityGroupWhitelistRulesTypeDef
        ],
    },
    total=False,
)

ClientUpdateInputSecurityGroupResponseTypeDef = TypedDict(
    "ClientUpdateInputSecurityGroupResponseTypeDef",
    {"SecurityGroup": ClientUpdateInputSecurityGroupResponseSecurityGroupTypeDef},
    total=False,
)

ClientUpdateInputSecurityGroupWhitelistRulesTypeDef = TypedDict(
    "ClientUpdateInputSecurityGroupWhitelistRulesTypeDef", {"Cidr": str}, total=False
)

ClientUpdateInputSourcesTypeDef = TypedDict(
    "ClientUpdateInputSourcesTypeDef",
    {"PasswordParam": str, "Url": str, "Username": str},
    total=False,
)

_RequiredClientUpdateMultiplexMultiplexSettingsTypeDef = TypedDict(
    "_RequiredClientUpdateMultiplexMultiplexSettingsTypeDef",
    {"TransportStreamBitrate": int, "TransportStreamId": int},
)
_OptionalClientUpdateMultiplexMultiplexSettingsTypeDef = TypedDict(
    "_OptionalClientUpdateMultiplexMultiplexSettingsTypeDef",
    {"MaximumVideoBufferDelayMilliseconds": int, "TransportStreamReservedBitrate": int},
    total=False,
)


class ClientUpdateMultiplexMultiplexSettingsTypeDef(
    _RequiredClientUpdateMultiplexMultiplexSettingsTypeDef,
    _OptionalClientUpdateMultiplexMultiplexSettingsTypeDef,
):
    pass


ClientUpdateMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef",
    {"ProviderName": str, "ServiceName": str},
)

ClientUpdateMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    {"MaximumBitrate": int, "MinimumBitrate": int},
    total=False,
)

ClientUpdateMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef",
    {
        "ConstantBitrate": int,
        "StatmuxSettings": ClientUpdateMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef,
    },
    total=False,
)

_RequiredClientUpdateMultiplexProgramMultiplexProgramSettingsTypeDef = TypedDict(
    "_RequiredClientUpdateMultiplexProgramMultiplexProgramSettingsTypeDef", {"ProgramNumber": int}
)
_OptionalClientUpdateMultiplexProgramMultiplexProgramSettingsTypeDef = TypedDict(
    "_OptionalClientUpdateMultiplexProgramMultiplexProgramSettingsTypeDef",
    {
        "ServiceDescriptor": ClientUpdateMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef,
        "VideoSettings": ClientUpdateMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef,
    },
    total=False,
)


class ClientUpdateMultiplexProgramMultiplexProgramSettingsTypeDef(
    _RequiredClientUpdateMultiplexProgramMultiplexProgramSettingsTypeDef,
    _OptionalClientUpdateMultiplexProgramMultiplexProgramSettingsTypeDef,
):
    pass


ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef",
    {"ProviderName": str, "ServiceName": str},
    total=False,
)

ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef",
    {"MaximumBitrate": int, "MinimumBitrate": int},
    total=False,
)

ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef",
    {
        "ConstantBitrate": int,
        "StatmuxSettings": ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsStatmuxSettingsTypeDef,
    },
    total=False,
)

ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsTypeDef",
    {
        "ProgramNumber": int,
        "ServiceDescriptor": ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsServiceDescriptorTypeDef,
        "VideoSettings": ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsVideoSettingsTypeDef,
    },
    total=False,
)

ClientUpdateMultiplexProgramResponseMultiplexProgramPacketIdentifiersMapTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramResponseMultiplexProgramPacketIdentifiersMapTypeDef",
    {
        "AudioPids": List[int],
        "DvbSubPids": List[int],
        "DvbTeletextPid": int,
        "EtvPlatformPid": int,
        "EtvSignalPid": int,
        "KlvDataPids": List[int],
        "PcrPid": int,
        "PmtPid": int,
        "PrivateMetadataPid": int,
        "Scte27Pids": List[int],
        "Scte35Pid": int,
        "TimedMetadataPid": int,
        "VideoPid": int,
    },
    total=False,
)

ClientUpdateMultiplexProgramResponseMultiplexProgramTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramResponseMultiplexProgramTypeDef",
    {
        "ChannelId": str,
        "MultiplexProgramSettings": ClientUpdateMultiplexProgramResponseMultiplexProgramMultiplexProgramSettingsTypeDef,
        "PacketIdentifiersMap": ClientUpdateMultiplexProgramResponseMultiplexProgramPacketIdentifiersMapTypeDef,
        "ProgramName": str,
    },
    total=False,
)

ClientUpdateMultiplexProgramResponseTypeDef = TypedDict(
    "ClientUpdateMultiplexProgramResponseTypeDef",
    {"MultiplexProgram": ClientUpdateMultiplexProgramResponseMultiplexProgramTypeDef},
    total=False,
)

ClientUpdateMultiplexResponseMultiplexDestinationsMediaConnectSettingsTypeDef = TypedDict(
    "ClientUpdateMultiplexResponseMultiplexDestinationsMediaConnectSettingsTypeDef",
    {"EntitlementArn": str},
    total=False,
)

ClientUpdateMultiplexResponseMultiplexDestinationsTypeDef = TypedDict(
    "ClientUpdateMultiplexResponseMultiplexDestinationsTypeDef",
    {
        "MediaConnectSettings": ClientUpdateMultiplexResponseMultiplexDestinationsMediaConnectSettingsTypeDef
    },
    total=False,
)

ClientUpdateMultiplexResponseMultiplexMultiplexSettingsTypeDef = TypedDict(
    "ClientUpdateMultiplexResponseMultiplexMultiplexSettingsTypeDef",
    {
        "MaximumVideoBufferDelayMilliseconds": int,
        "TransportStreamBitrate": int,
        "TransportStreamId": int,
        "TransportStreamReservedBitrate": int,
    },
    total=False,
)

ClientUpdateMultiplexResponseMultiplexTypeDef = TypedDict(
    "ClientUpdateMultiplexResponseMultiplexTypeDef",
    {
        "Arn": str,
        "AvailabilityZones": List[str],
        "Destinations": List[ClientUpdateMultiplexResponseMultiplexDestinationsTypeDef],
        "Id": str,
        "MultiplexSettings": ClientUpdateMultiplexResponseMultiplexMultiplexSettingsTypeDef,
        "Name": str,
        "PipelinesRunningCount": int,
        "ProgramCount": int,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ClientUpdateMultiplexResponseTypeDef = TypedDict(
    "ClientUpdateMultiplexResponseTypeDef",
    {"Multiplex": ClientUpdateMultiplexResponseMultiplexTypeDef},
    total=False,
)

ClientUpdateReservationResponseReservationResourceSpecificationTypeDef = TypedDict(
    "ClientUpdateReservationResponseReservationResourceSpecificationTypeDef",
    {
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Codec": Literal["MPEG2", "AVC", "HEVC", "AUDIO"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "MaximumFramerate": Literal["MAX_30_FPS", "MAX_60_FPS"],
        "Resolution": Literal["SD", "HD", "FHD", "UHD"],
        "ResourceType": Literal["INPUT", "OUTPUT", "MULTIPLEX", "CHANNEL"],
        "SpecialFeature": Literal["ADVANCED_AUDIO", "AUDIO_NORMALIZATION"],
        "VideoQuality": Literal["STANDARD", "ENHANCED", "PREMIUM"],
    },
    total=False,
)

ClientUpdateReservationResponseReservationTypeDef = TypedDict(
    "ClientUpdateReservationResponseReservationTypeDef",
    {
        "Arn": str,
        "Count": int,
        "CurrencyCode": str,
        "Duration": int,
        "DurationUnits": str,
        "End": str,
        "FixedPrice": float,
        "Name": str,
        "OfferingDescription": str,
        "OfferingId": str,
        "OfferingType": str,
        "Region": str,
        "ReservationId": str,
        "ResourceSpecification": ClientUpdateReservationResponseReservationResourceSpecificationTypeDef,
        "Start": str,
        "State": Literal["ACTIVE", "EXPIRED", "CANCELED", "DELETED"],
        "Tags": Dict[str, str],
        "UsagePrice": float,
    },
    total=False,
)

ClientUpdateReservationResponseTypeDef = TypedDict(
    "ClientUpdateReservationResponseTypeDef",
    {"Reservation": ClientUpdateReservationResponseReservationTypeDef},
    total=False,
)

HlsId3SegmentTaggingScheduleActionSettingsTypeDef = TypedDict(
    "HlsId3SegmentTaggingScheduleActionSettingsTypeDef", {"Tag": str}
)

HlsTimedMetadataScheduleActionSettingsTypeDef = TypedDict(
    "HlsTimedMetadataScheduleActionSettingsTypeDef", {"Id3": str}
)

StartTimecodeTypeDef = TypedDict("StartTimecodeTypeDef", {"Timecode": str}, total=False)

StopTimecodeTypeDef = TypedDict(
    "StopTimecodeTypeDef",
    {
        "LastFrameClippingBehavior": Literal["EXCLUDE_LAST_FRAME", "INCLUDE_LAST_FRAME"],
        "Timecode": str,
    },
    total=False,
)

_RequiredInputClippingSettingsTypeDef = TypedDict(
    "_RequiredInputClippingSettingsTypeDef",
    {"InputTimecodeSource": Literal["ZEROBASED", "EMBEDDED"]},
)
_OptionalInputClippingSettingsTypeDef = TypedDict(
    "_OptionalInputClippingSettingsTypeDef",
    {"StartTimecode": StartTimecodeTypeDef, "StopTimecode": StopTimecodeTypeDef},
    total=False,
)


class InputClippingSettingsTypeDef(
    _RequiredInputClippingSettingsTypeDef, _OptionalInputClippingSettingsTypeDef
):
    pass


_RequiredInputSwitchScheduleActionSettingsTypeDef = TypedDict(
    "_RequiredInputSwitchScheduleActionSettingsTypeDef", {"InputAttachmentNameReference": str}
)
_OptionalInputSwitchScheduleActionSettingsTypeDef = TypedDict(
    "_OptionalInputSwitchScheduleActionSettingsTypeDef",
    {"InputClippingSettings": InputClippingSettingsTypeDef, "UrlPath": List[str]},
    total=False,
)


class InputSwitchScheduleActionSettingsTypeDef(
    _RequiredInputSwitchScheduleActionSettingsTypeDef,
    _OptionalInputSwitchScheduleActionSettingsTypeDef,
):
    pass


PipelinePauseStateSettingsTypeDef = TypedDict(
    "PipelinePauseStateSettingsTypeDef", {"PipelineId": Literal["PIPELINE_0", "PIPELINE_1"]}
)

PauseStateScheduleActionSettingsTypeDef = TypedDict(
    "PauseStateScheduleActionSettingsTypeDef",
    {"Pipelines": List[PipelinePauseStateSettingsTypeDef]},
    total=False,
)

Scte35ReturnToNetworkScheduleActionSettingsTypeDef = TypedDict(
    "Scte35ReturnToNetworkScheduleActionSettingsTypeDef", {"SpliceEventId": int}
)

_RequiredScte35SpliceInsertScheduleActionSettingsTypeDef = TypedDict(
    "_RequiredScte35SpliceInsertScheduleActionSettingsTypeDef", {"SpliceEventId": int}
)
_OptionalScte35SpliceInsertScheduleActionSettingsTypeDef = TypedDict(
    "_OptionalScte35SpliceInsertScheduleActionSettingsTypeDef", {"Duration": int}, total=False
)


class Scte35SpliceInsertScheduleActionSettingsTypeDef(
    _RequiredScte35SpliceInsertScheduleActionSettingsTypeDef,
    _OptionalScte35SpliceInsertScheduleActionSettingsTypeDef,
):
    pass


Scte35DeliveryRestrictionsTypeDef = TypedDict(
    "Scte35DeliveryRestrictionsTypeDef",
    {
        "ArchiveAllowedFlag": Literal["ARCHIVE_NOT_ALLOWED", "ARCHIVE_ALLOWED"],
        "DeviceRestrictions": Literal[
            "NONE", "RESTRICT_GROUP0", "RESTRICT_GROUP1", "RESTRICT_GROUP2"
        ],
        "NoRegionalBlackoutFlag": Literal["REGIONAL_BLACKOUT", "NO_REGIONAL_BLACKOUT"],
        "WebDeliveryAllowedFlag": Literal["WEB_DELIVERY_NOT_ALLOWED", "WEB_DELIVERY_ALLOWED"],
    },
)

_RequiredScte35SegmentationDescriptorTypeDef = TypedDict(
    "_RequiredScte35SegmentationDescriptorTypeDef",
    {
        "SegmentationCancelIndicator": Literal[
            "SEGMENTATION_EVENT_NOT_CANCELED", "SEGMENTATION_EVENT_CANCELED"
        ],
        "SegmentationEventId": int,
    },
)
_OptionalScte35SegmentationDescriptorTypeDef = TypedDict(
    "_OptionalScte35SegmentationDescriptorTypeDef",
    {
        "DeliveryRestrictions": Scte35DeliveryRestrictionsTypeDef,
        "SegmentNum": int,
        "SegmentationDuration": int,
        "SegmentationTypeId": int,
        "SegmentationUpid": str,
        "SegmentationUpidType": int,
        "SegmentsExpected": int,
        "SubSegmentNum": int,
        "SubSegmentsExpected": int,
    },
    total=False,
)


class Scte35SegmentationDescriptorTypeDef(
    _RequiredScte35SegmentationDescriptorTypeDef, _OptionalScte35SegmentationDescriptorTypeDef
):
    pass


Scte35DescriptorSettingsTypeDef = TypedDict(
    "Scte35DescriptorSettingsTypeDef",
    {"SegmentationDescriptorScte35DescriptorSettings": Scte35SegmentationDescriptorTypeDef},
)

Scte35DescriptorTypeDef = TypedDict(
    "Scte35DescriptorTypeDef", {"Scte35DescriptorSettings": Scte35DescriptorSettingsTypeDef}
)

Scte35TimeSignalScheduleActionSettingsTypeDef = TypedDict(
    "Scte35TimeSignalScheduleActionSettingsTypeDef",
    {"Scte35Descriptors": List[Scte35DescriptorTypeDef]},
)

_RequiredInputLocationTypeDef = TypedDict("_RequiredInputLocationTypeDef", {"Uri": str})
_OptionalInputLocationTypeDef = TypedDict(
    "_OptionalInputLocationTypeDef", {"PasswordParam": str, "Username": str}, total=False
)


class InputLocationTypeDef(_RequiredInputLocationTypeDef, _OptionalInputLocationTypeDef):
    pass


_RequiredStaticImageActivateScheduleActionSettingsTypeDef = TypedDict(
    "_RequiredStaticImageActivateScheduleActionSettingsTypeDef", {"Image": InputLocationTypeDef}
)
_OptionalStaticImageActivateScheduleActionSettingsTypeDef = TypedDict(
    "_OptionalStaticImageActivateScheduleActionSettingsTypeDef",
    {
        "Duration": int,
        "FadeIn": int,
        "FadeOut": int,
        "Height": int,
        "ImageX": int,
        "ImageY": int,
        "Layer": int,
        "Opacity": int,
        "Width": int,
    },
    total=False,
)


class StaticImageActivateScheduleActionSettingsTypeDef(
    _RequiredStaticImageActivateScheduleActionSettingsTypeDef,
    _OptionalStaticImageActivateScheduleActionSettingsTypeDef,
):
    pass


StaticImageDeactivateScheduleActionSettingsTypeDef = TypedDict(
    "StaticImageDeactivateScheduleActionSettingsTypeDef",
    {"FadeOut": int, "Layer": int},
    total=False,
)

ScheduleActionSettingsTypeDef = TypedDict(
    "ScheduleActionSettingsTypeDef",
    {
        "HlsId3SegmentTaggingSettings": HlsId3SegmentTaggingScheduleActionSettingsTypeDef,
        "HlsTimedMetadataSettings": HlsTimedMetadataScheduleActionSettingsTypeDef,
        "InputSwitchSettings": InputSwitchScheduleActionSettingsTypeDef,
        "PauseStateSettings": PauseStateScheduleActionSettingsTypeDef,
        "Scte35ReturnToNetworkSettings": Scte35ReturnToNetworkScheduleActionSettingsTypeDef,
        "Scte35SpliceInsertSettings": Scte35SpliceInsertScheduleActionSettingsTypeDef,
        "Scte35TimeSignalSettings": Scte35TimeSignalScheduleActionSettingsTypeDef,
        "StaticImageActivateSettings": StaticImageActivateScheduleActionSettingsTypeDef,
        "StaticImageDeactivateSettings": StaticImageDeactivateScheduleActionSettingsTypeDef,
    },
    total=False,
)

FixedModeScheduleActionStartSettingsTypeDef = TypedDict(
    "FixedModeScheduleActionStartSettingsTypeDef", {"Time": str}
)

FollowModeScheduleActionStartSettingsTypeDef = TypedDict(
    "FollowModeScheduleActionStartSettingsTypeDef",
    {"FollowPoint": Literal["END", "START"], "ReferenceActionName": str},
)

ScheduleActionStartSettingsTypeDef = TypedDict(
    "ScheduleActionStartSettingsTypeDef",
    {
        "FixedModeScheduleActionStartSettings": FixedModeScheduleActionStartSettingsTypeDef,
        "FollowModeScheduleActionStartSettings": FollowModeScheduleActionStartSettingsTypeDef,
        "ImmediateModeScheduleActionStartSettings": Dict[str, Any],
    },
    total=False,
)

ScheduleActionTypeDef = TypedDict(
    "ScheduleActionTypeDef",
    {
        "ActionName": str,
        "ScheduleActionSettings": ScheduleActionSettingsTypeDef,
        "ScheduleActionStartSettings": ScheduleActionStartSettingsTypeDef,
    },
)

DescribeScheduleResponseTypeDef = TypedDict(
    "DescribeScheduleResponseTypeDef",
    {"NextToken": str, "ScheduleActions": List[ScheduleActionTypeDef]},
    total=False,
)

ChannelEgressEndpointTypeDef = TypedDict(
    "ChannelEgressEndpointTypeDef", {"SourceIp": str}, total=False
)

_RequiredAudioLanguageSelectionTypeDef = TypedDict(
    "_RequiredAudioLanguageSelectionTypeDef", {"LanguageCode": str}
)
_OptionalAudioLanguageSelectionTypeDef = TypedDict(
    "_OptionalAudioLanguageSelectionTypeDef",
    {"LanguageSelectionPolicy": Literal["LOOSE", "STRICT"]},
    total=False,
)


class AudioLanguageSelectionTypeDef(
    _RequiredAudioLanguageSelectionTypeDef, _OptionalAudioLanguageSelectionTypeDef
):
    pass


AudioPidSelectionTypeDef = TypedDict("AudioPidSelectionTypeDef", {"Pid": int})

AudioSelectorSettingsTypeDef = TypedDict(
    "AudioSelectorSettingsTypeDef",
    {
        "AudioLanguageSelection": AudioLanguageSelectionTypeDef,
        "AudioPidSelection": AudioPidSelectionTypeDef,
    },
    total=False,
)

_RequiredAudioSelectorTypeDef = TypedDict("_RequiredAudioSelectorTypeDef", {"Name": str})
_OptionalAudioSelectorTypeDef = TypedDict(
    "_OptionalAudioSelectorTypeDef", {"SelectorSettings": AudioSelectorSettingsTypeDef}, total=False
)


class AudioSelectorTypeDef(_RequiredAudioSelectorTypeDef, _OptionalAudioSelectorTypeDef):
    pass


DvbSubSourceSettingsTypeDef = TypedDict("DvbSubSourceSettingsTypeDef", {"Pid": int}, total=False)

EmbeddedSourceSettingsTypeDef = TypedDict(
    "EmbeddedSourceSettingsTypeDef",
    {
        "Convert608To708": Literal["DISABLED", "UPCONVERT"],
        "Scte20Detection": Literal["AUTO", "OFF"],
        "Source608ChannelNumber": int,
        "Source608TrackNumber": int,
    },
    total=False,
)

Scte20SourceSettingsTypeDef = TypedDict(
    "Scte20SourceSettingsTypeDef",
    {"Convert608To708": Literal["DISABLED", "UPCONVERT"], "Source608ChannelNumber": int},
    total=False,
)

Scte27SourceSettingsTypeDef = TypedDict("Scte27SourceSettingsTypeDef", {"Pid": int}, total=False)

TeletextSourceSettingsTypeDef = TypedDict(
    "TeletextSourceSettingsTypeDef", {"PageNumber": str}, total=False
)

CaptionSelectorSettingsTypeDef = TypedDict(
    "CaptionSelectorSettingsTypeDef",
    {
        "AribSourceSettings": Dict[str, Any],
        "DvbSubSourceSettings": DvbSubSourceSettingsTypeDef,
        "EmbeddedSourceSettings": EmbeddedSourceSettingsTypeDef,
        "Scte20SourceSettings": Scte20SourceSettingsTypeDef,
        "Scte27SourceSettings": Scte27SourceSettingsTypeDef,
        "TeletextSourceSettings": TeletextSourceSettingsTypeDef,
    },
    total=False,
)

_RequiredCaptionSelectorTypeDef = TypedDict("_RequiredCaptionSelectorTypeDef", {"Name": str})
_OptionalCaptionSelectorTypeDef = TypedDict(
    "_OptionalCaptionSelectorTypeDef",
    {"LanguageCode": str, "SelectorSettings": CaptionSelectorSettingsTypeDef},
    total=False,
)


class CaptionSelectorTypeDef(_RequiredCaptionSelectorTypeDef, _OptionalCaptionSelectorTypeDef):
    pass


HlsInputSettingsTypeDef = TypedDict(
    "HlsInputSettingsTypeDef",
    {"Bandwidth": int, "BufferSegments": int, "Retries": int, "RetryInterval": int},
    total=False,
)

NetworkInputSettingsTypeDef = TypedDict(
    "NetworkInputSettingsTypeDef",
    {
        "HlsInputSettings": HlsInputSettingsTypeDef,
        "ServerValidation": Literal[
            "CHECK_CRYPTOGRAPHY_AND_VALIDATE_NAME", "CHECK_CRYPTOGRAPHY_ONLY"
        ],
    },
    total=False,
)

VideoSelectorPidTypeDef = TypedDict("VideoSelectorPidTypeDef", {"Pid": int}, total=False)

VideoSelectorProgramIdTypeDef = TypedDict(
    "VideoSelectorProgramIdTypeDef", {"ProgramId": int}, total=False
)

VideoSelectorSettingsTypeDef = TypedDict(
    "VideoSelectorSettingsTypeDef",
    {
        "VideoSelectorPid": VideoSelectorPidTypeDef,
        "VideoSelectorProgramId": VideoSelectorProgramIdTypeDef,
    },
    total=False,
)

VideoSelectorTypeDef = TypedDict(
    "VideoSelectorTypeDef",
    {
        "ColorSpace": Literal["FOLLOW", "REC_601", "REC_709"],
        "ColorSpaceUsage": Literal["FALLBACK", "FORCE"],
        "SelectorSettings": VideoSelectorSettingsTypeDef,
    },
    total=False,
)

InputSettingsTypeDef = TypedDict(
    "InputSettingsTypeDef",
    {
        "AudioSelectors": List[AudioSelectorTypeDef],
        "CaptionSelectors": List[CaptionSelectorTypeDef],
        "DeblockFilter": Literal["DISABLED", "ENABLED"],
        "DenoiseFilter": Literal["DISABLED", "ENABLED"],
        "FilterStrength": int,
        "InputFilter": Literal["AUTO", "DISABLED", "FORCED"],
        "NetworkInputSettings": NetworkInputSettingsTypeDef,
        "SourceEndBehavior": Literal["CONTINUE", "LOOP"],
        "VideoSelector": VideoSelectorTypeDef,
    },
    total=False,
)

InputAttachmentTypeDef = TypedDict(
    "InputAttachmentTypeDef",
    {"InputAttachmentName": str, "InputId": str, "InputSettings": InputSettingsTypeDef},
    total=False,
)

InputSpecificationTypeDef = TypedDict(
    "InputSpecificationTypeDef",
    {
        "Codec": Literal["MPEG2", "AVC", "HEVC"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "Resolution": Literal["SD", "HD", "UHD"],
    },
    total=False,
)

MediaPackageOutputDestinationSettingsTypeDef = TypedDict(
    "MediaPackageOutputDestinationSettingsTypeDef", {"ChannelId": str}, total=False
)

MultiplexProgramChannelDestinationSettingsTypeDef = TypedDict(
    "MultiplexProgramChannelDestinationSettingsTypeDef",
    {"MultiplexId": str, "ProgramName": str},
    total=False,
)

OutputDestinationSettingsTypeDef = TypedDict(
    "OutputDestinationSettingsTypeDef",
    {"PasswordParam": str, "StreamName": str, "Url": str, "Username": str},
    total=False,
)

OutputDestinationTypeDef = TypedDict(
    "OutputDestinationTypeDef",
    {
        "Id": str,
        "MediaPackageSettings": List[MediaPackageOutputDestinationSettingsTypeDef],
        "MultiplexSettings": MultiplexProgramChannelDestinationSettingsTypeDef,
        "Settings": List[OutputDestinationSettingsTypeDef],
    },
    total=False,
)

ChannelSummaryTypeDef = TypedDict(
    "ChannelSummaryTypeDef",
    {
        "Arn": str,
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Destinations": List[OutputDestinationTypeDef],
        "EgressEndpoints": List[ChannelEgressEndpointTypeDef],
        "Id": str,
        "InputAttachments": List[InputAttachmentTypeDef],
        "InputSpecification": InputSpecificationTypeDef,
        "LogLevel": Literal["ERROR", "WARNING", "INFO", "DEBUG", "DISABLED"],
        "Name": str,
        "PipelinesRunningCount": int,
        "RoleArn": str,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
            "UPDATING",
            "UPDATE_FAILED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ListChannelsResponseTypeDef = TypedDict(
    "ListChannelsResponseTypeDef",
    {"Channels": List[ChannelSummaryTypeDef], "NextToken": str},
    total=False,
)

InputWhitelistRuleTypeDef = TypedDict("InputWhitelistRuleTypeDef", {"Cidr": str}, total=False)

InputSecurityGroupTypeDef = TypedDict(
    "InputSecurityGroupTypeDef",
    {
        "Arn": str,
        "Id": str,
        "Inputs": List[str],
        "State": Literal["IDLE", "IN_USE", "UPDATING", "DELETED"],
        "Tags": Dict[str, str],
        "WhitelistRules": List[InputWhitelistRuleTypeDef],
    },
    total=False,
)

ListInputSecurityGroupsResponseTypeDef = TypedDict(
    "ListInputSecurityGroupsResponseTypeDef",
    {"InputSecurityGroups": List[InputSecurityGroupTypeDef], "NextToken": str},
    total=False,
)

InputDestinationVpcTypeDef = TypedDict(
    "InputDestinationVpcTypeDef", {"AvailabilityZone": str, "NetworkInterfaceId": str}, total=False
)

InputDestinationTypeDef = TypedDict(
    "InputDestinationTypeDef",
    {"Ip": str, "Port": str, "Url": str, "Vpc": InputDestinationVpcTypeDef},
    total=False,
)

InputSourceTypeDef = TypedDict(
    "InputSourceTypeDef", {"PasswordParam": str, "Url": str, "Username": str}, total=False
)

MediaConnectFlowTypeDef = TypedDict("MediaConnectFlowTypeDef", {"FlowArn": str}, total=False)

InputTypeDef = TypedDict(
    "InputTypeDef",
    {
        "Arn": str,
        "AttachedChannels": List[str],
        "Destinations": List[InputDestinationTypeDef],
        "Id": str,
        "InputClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "InputSourceType": Literal["STATIC", "DYNAMIC"],
        "MediaConnectFlows": List[MediaConnectFlowTypeDef],
        "Name": str,
        "RoleArn": str,
        "SecurityGroups": List[str],
        "Sources": List[InputSourceTypeDef],
        "State": Literal["CREATING", "DETACHED", "ATTACHED", "DELETING", "DELETED"],
        "Tags": Dict[str, str],
        "Type": Literal[
            "UDP_PUSH", "RTP_PUSH", "RTMP_PUSH", "RTMP_PULL", "URL_PULL", "MP4_FILE", "MEDIACONNECT"
        ],
    },
    total=False,
)

ListInputsResponseTypeDef = TypedDict(
    "ListInputsResponseTypeDef", {"Inputs": List[InputTypeDef], "NextToken": str}, total=False
)

MultiplexProgramSummaryTypeDef = TypedDict(
    "MultiplexProgramSummaryTypeDef", {"ChannelId": str, "ProgramName": str}, total=False
)

ListMultiplexProgramsResponseTypeDef = TypedDict(
    "ListMultiplexProgramsResponseTypeDef",
    {"MultiplexPrograms": List[MultiplexProgramSummaryTypeDef], "NextToken": str},
    total=False,
)

MultiplexSettingsSummaryTypeDef = TypedDict(
    "MultiplexSettingsSummaryTypeDef", {"TransportStreamBitrate": int}, total=False
)

MultiplexSummaryTypeDef = TypedDict(
    "MultiplexSummaryTypeDef",
    {
        "Arn": str,
        "AvailabilityZones": List[str],
        "Id": str,
        "MultiplexSettings": MultiplexSettingsSummaryTypeDef,
        "Name": str,
        "PipelinesRunningCount": int,
        "ProgramCount": int,
        "State": Literal[
            "CREATING",
            "CREATE_FAILED",
            "IDLE",
            "STARTING",
            "RUNNING",
            "RECOVERING",
            "STOPPING",
            "DELETING",
            "DELETED",
        ],
        "Tags": Dict[str, str],
    },
    total=False,
)

ListMultiplexesResponseTypeDef = TypedDict(
    "ListMultiplexesResponseTypeDef",
    {"Multiplexes": List[MultiplexSummaryTypeDef], "NextToken": str},
    total=False,
)

ReservationResourceSpecificationTypeDef = TypedDict(
    "ReservationResourceSpecificationTypeDef",
    {
        "ChannelClass": Literal["STANDARD", "SINGLE_PIPELINE"],
        "Codec": Literal["MPEG2", "AVC", "HEVC", "AUDIO"],
        "MaximumBitrate": Literal["MAX_10_MBPS", "MAX_20_MBPS", "MAX_50_MBPS"],
        "MaximumFramerate": Literal["MAX_30_FPS", "MAX_60_FPS"],
        "Resolution": Literal["SD", "HD", "FHD", "UHD"],
        "ResourceType": Literal["INPUT", "OUTPUT", "MULTIPLEX", "CHANNEL"],
        "SpecialFeature": Literal["ADVANCED_AUDIO", "AUDIO_NORMALIZATION"],
        "VideoQuality": Literal["STANDARD", "ENHANCED", "PREMIUM"],
    },
    total=False,
)

OfferingTypeDef = TypedDict(
    "OfferingTypeDef",
    {
        "Arn": str,
        "CurrencyCode": str,
        "Duration": int,
        "DurationUnits": Literal["MONTHS"],
        "FixedPrice": float,
        "OfferingDescription": str,
        "OfferingId": str,
        "OfferingType": Literal["NO_UPFRONT"],
        "Region": str,
        "ResourceSpecification": ReservationResourceSpecificationTypeDef,
        "UsagePrice": float,
    },
    total=False,
)

ListOfferingsResponseTypeDef = TypedDict(
    "ListOfferingsResponseTypeDef",
    {"NextToken": str, "Offerings": List[OfferingTypeDef]},
    total=False,
)

ReservationTypeDef = TypedDict(
    "ReservationTypeDef",
    {
        "Arn": str,
        "Count": int,
        "CurrencyCode": str,
        "Duration": int,
        "DurationUnits": Literal["MONTHS"],
        "End": str,
        "FixedPrice": float,
        "Name": str,
        "OfferingDescription": str,
        "OfferingId": str,
        "OfferingType": Literal["NO_UPFRONT"],
        "Region": str,
        "ReservationId": str,
        "ResourceSpecification": ReservationResourceSpecificationTypeDef,
        "Start": str,
        "State": Literal["ACTIVE", "EXPIRED", "CANCELED", "DELETED"],
        "Tags": Dict[str, str],
        "UsagePrice": float,
    },
    total=False,
)

ListReservationsResponseTypeDef = TypedDict(
    "ListReservationsResponseTypeDef",
    {"NextToken": str, "Reservations": List[ReservationTypeDef]},
    total=False,
)

PaginatorConfigTypeDef = TypedDict(
    "PaginatorConfigTypeDef", {"MaxItems": int, "PageSize": int, "StartingToken": str}, total=False
)

WaiterConfigTypeDef = TypedDict(
    "WaiterConfigTypeDef", {"Delay": int, "MaxAttempts": int}, total=False
)
