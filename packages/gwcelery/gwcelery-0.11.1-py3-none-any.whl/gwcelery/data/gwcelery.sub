#!/usr/bin/env condor_submit
accounting_group_user = leo.singer
universe = local
getenv = true
executable = /usr/bin/env
log = gwcelery-condor.log
on_exit_remove = false
JobBatchName = gwcelery

arguments = "gwcelery beat"
description = gwcelery-beat
error = gwcelery-beat.log
output = gwcelery-beat.log
queue

arguments = "gwcelery flask run --with-threads --host 127.0.0.1"
description = gwcelery-flask
error = gwcelery-flask.log
output = gwcelery-flask.log
queue

arguments = "gwcelery flower --address=127.0.0.1"
description = gwcelery-flower
error = gwcelery-flower.log
output = gwcelery-flower.log
queue

# FIXME: The GraceDB tasks are not very computationally intensive, but take a
# very long time to execute. Manually bump up the concurrency well past the
# number of hardware threads until the GraceDB API throughput is improved.
arguments = "gwcelery worker -l info -n gwcelery-worker -Q celery --lvalert --autoscale 64,4"
description = gwcelery-worker
error = gwcelery-worker.log
output = gwcelery-worker.log
queue

arguments = "gwcelery worker -l info -n gwcelery-exttrig-worker -Q exttrig -c 1"
description = gwcelery-exttrig-worker
error = gwcelery-exttrig-worker.log
output = gwcelery-exttrig-worker.log
queue

arguments = "gwcelery worker -l info -n gwcelery-superevent-worker -Q superevent -c 1"
description = gwcelery-superevent-worker
error = gwcelery-superevent-worker.log
output = gwcelery-superevent-worker.log
queue

arguments = "gwcelery worker -l info -n gwcelery-voevent-worker -Q voevent -P solo"
description = gwcelery-voevent-worker
error = gwcelery-voevent-worker.log
output = gwcelery-voevent-worker.log
queue


# Jobs defined below this point will run on specially configured cluster nodes.
+Online_EMFollow = True
Requirements = (TARGET.Online_EMFollow =?= True)
request_cpus = TARGET.Cpus
request_memory = 3700
universe = vanilla
# FIXME: workaround for https://www-auth.cs.wisc.edu/lists/htcondor-users/2019-October/msg00051.shtml
executable = /bin/env


arguments = "--unset OMP_NUM_THREADS gwcelery-condor-submit-helper gwcelery worker -l info -n gwcelery-openmp-worker-$(Process) -Q openmp -c 1"
description = gwcelery-openmp-worker-$(Process)
error = gwcelery-openmp-worker-$(Process).log
output = gwcelery-openmp-worker-$(Process).log
queue 16
