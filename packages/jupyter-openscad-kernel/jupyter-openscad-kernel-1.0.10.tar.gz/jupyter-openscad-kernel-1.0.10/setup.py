import pathlib, os, distutils.core, setuptools, sys, json, base64
from setuptools import setup
from setuptools.command import easy_install
from setuptools.command.install import install
from jupyter_client.kernelspec import KernelSpecManager
from IPython.utils.tempdir import TemporaryDirectory

# The directory containing this file
HERE = pathlib.Path(__file__).parent

# The text of the README file
README = (HERE / "README.md").read_text()

PNG64 = b""
PNG32 = b"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"

kernel_json = {"argv":[sys.executable,"-m","iopenscad", "-f", "{connection_file}"],
    "display_name":"OpenSCAD",
    "language":"openscad",
    "codemirror_mode":"shell",
    "env":{"PS1": "$"}
}


# Extended install which also installs the kernel
class InstallKernel(install):
    def run(self):
        install.run(self)
        self.installKernel()

    def installKernel(self):
        with TemporaryDirectory() as td:
            os.chmod(td, 0o755) # Starts off as 700, not user readable
            with open(os.path.join(td, 'kernel.json'), 'w') as f:
                json.dump(kernel_json, f, sort_keys=True)

            with open("logo-64x64.png", "wb") as fh:
                fh.write(base64.decodebytes(PNG64))

            with open("logo-32x32.png", "wb") as fh:
                fh.write(base64.decodebytes(PNG32))

            print('Installing IPython kernel spec')
            KernelSpecManager().install_kernel_spec(td, 'openscad')

# This call to setup() does all the work
setup(
    name="jupyter-openscad-kernel",
    version="1.0.10",
    description="Jupyter kernel for OpenSCAD",
    long_description=README,
    long_description_content_type="text/markdown",
    url="https://github.com/pschatzmann/openscad-kernel",
    author="Phil Schatzmann",
    author_email="phil.schatzmann@gmail.com",
    license="MIT",
    classifiers=[
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.7",
    ],
    packages=["iopenscad"],
    include_package_data=True,
    install_requires=["jupyter"],
    cmdclass={'install': InstallKernel}

)

