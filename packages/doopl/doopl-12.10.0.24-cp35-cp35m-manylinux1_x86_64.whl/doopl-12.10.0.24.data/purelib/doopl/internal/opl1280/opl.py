# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from . import _opl
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

try:
    import weakref
    weakref_proxy = weakref.proxy
except __builtin__.Exception:
    weakref_proxy = lambda x: x



IloException = _opl.IloException;

class IloEnv(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloEnv, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloEnv, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _opl.new_IloEnv()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def end(self) -> "void":
        return _opl.IloEnv_end(self)

    def makeSymbol(self, key: 'char const *') -> "IloSymbol":
        return _opl.IloEnv_makeSymbol(self, key)

    def _createOplModel(self, modelSource: 'IloOplModelSource') -> "IloOplModel":
        return _opl.IloEnv__createOplModel(self, modelSource)
    __swig_destroy__ = _opl.delete_IloEnv
    __del__ = lambda self: None
IloEnv_swigregister = _opl.IloEnv_swigregister
IloEnv_swigregister(IloEnv)

class IloSymbol(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloSymbol, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloSymbol, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getString(self) -> "char const *":
        return _opl.IloSymbol_getString(self)
    __swig_destroy__ = _opl.delete_IloSymbol
    __del__ = lambda self: None
IloSymbol_swigregister = _opl.IloSymbol_swigregister
IloSymbol_swigregister(IloSymbol)

class IloStringArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloStringArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloStringArray, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getSize(self) -> "long":
        return _opl.IloStringArray_getSize(self)

    def end(self) -> "void":
        return _opl.IloStringArray_end(self)

    def get_String(self, index: 'long') -> "char const *":
        return _opl.IloStringArray_get_String(self, index)
    __swig_destroy__ = _opl.delete_IloStringArray
    __del__ = lambda self: None
IloStringArray_swigregister = _opl.IloStringArray_swigregister
IloStringArray_swigregister(IloStringArray)

class IloAnyArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloAnyArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloAnyArray, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getSize(self) -> "long":
        return _opl.IloAnyArray_getSize(self)

    def get_String(self, index: 'long') -> "char const *":
        return _opl.IloAnyArray_get_String(self, index)
    __swig_destroy__ = _opl.delete_IloAnyArray
    __del__ = lambda self: None
IloAnyArray_swigregister = _opl.IloAnyArray_swigregister
IloAnyArray_swigregister(IloAnyArray)

class IloNumArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloNumArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloNumArray, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getSize(self) -> "long":
        return _opl.IloNumArray_getSize(self)

    def end(self) -> "void":
        return _opl.IloNumArray_end(self)

    def get_Num(self, index: 'long') -> "double":
        return _opl.IloNumArray_get_Num(self, index)
    __swig_destroy__ = _opl.delete_IloNumArray
    __del__ = lambda self: None
IloNumArray_swigregister = _opl.IloNumArray_swigregister
IloNumArray_swigregister(IloNumArray)

class IloIntArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloIntArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloIntArray, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getSize(self) -> "long":
        return _opl.IloIntArray_getSize(self)

    def end(self) -> "void":
        return _opl.IloIntArray_end(self)

    def get_Int(self, index: 'long') -> "long":
        return _opl.IloIntArray_get_Int(self, index)
    __swig_destroy__ = _opl.delete_IloIntArray
    __del__ = lambda self: None
IloIntArray_swigregister = _opl.IloIntArray_swigregister
IloIntArray_swigregister(IloIntArray)

class IloDiscreteDataCollection(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloDiscreteDataCollection, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloDiscreteDataCollection, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def isTupleSet(self) -> "IloBool":
        return _opl.IloDiscreteDataCollection_isTupleSet(self)
    __swig_destroy__ = _opl.delete_IloDiscreteDataCollection
    __del__ = lambda self: None
IloDiscreteDataCollection_swigregister = _opl.IloDiscreteDataCollection_swigregister
IloDiscreteDataCollection_swigregister(IloDiscreteDataCollection)

class IloOplDataSourceBaseI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplDataSourceBaseI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplDataSourceBaseI, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _opl.delete_IloOplDataSourceBaseI
    __del__ = lambda self: None

    def read(self) -> "void":
        return _opl.IloOplDataSourceBaseI_read(self)

    def getDataHandler(self) -> "IloOplDataHandler":
        return _opl.IloOplDataSourceBaseI_getDataHandler(self)
IloOplDataSourceBaseI_swigregister = _opl.IloOplDataSourceBaseI_swigregister
IloOplDataSourceBaseI_swigregister(IloOplDataSourceBaseI)

class IloOplDataSourceWrapper(IloOplDataSourceBaseI):
    __swig_setmethods__ = {}
    for _s in [IloOplDataSourceBaseI]:
        __swig_setmethods__.update(getattr(_s, '__swig_setmethods__', {}))
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplDataSourceWrapper, name, value)
    __swig_getmethods__ = {}
    for _s in [IloOplDataSourceBaseI]:
        __swig_getmethods__.update(getattr(_s, '__swig_getmethods__', {}))
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplDataSourceWrapper, name)
    __repr__ = _swig_repr

    def __init__(self, env: 'IloEnv'):
        if self.__class__ == IloOplDataSourceWrapper:
            _self = None
        else:
            _self = self
        this = _opl.new_IloOplDataSourceWrapper(_self, env)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _opl.delete_IloOplDataSourceWrapper
    __del__ = lambda self: None

    def read(self) -> "void":
        return _opl.IloOplDataSourceWrapper_read(self)
    def __disown__(self):
        self.this.disown()
        _opl.disown_IloOplDataSourceWrapper(self)
        return weakref_proxy(self)
IloOplDataSourceWrapper_swigregister = _opl.IloOplDataSourceWrapper_swigregister
IloOplDataSourceWrapper_swigregister(IloOplDataSourceWrapper)

class IloOplDataSource(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplDataSource, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplDataSource, name)
    __repr__ = _swig_repr

    def getEnv(self) -> "IloEnv":
        return _opl.IloOplDataSource_getEnv(self)

    def __init__(self, *args):
        this = _opl.new_IloOplDataSource(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def setDataHandler(self, handler: 'IloOplDataHandler') -> "void":
        return _opl.IloOplDataSource_setDataHandler(self, handler)

    def getDataHandler(self) -> "IloOplDataHandler":
        return _opl.IloOplDataSource_getDataHandler(self)

    def setErrorHandler(self, handler: 'IloOplErrorHandler') -> "void":
        return _opl.IloOplDataSource_setErrorHandler(self, handler)

    def getErrorHandler(self) -> "IloOplErrorHandler":
        return _opl.IloOplDataSource_getErrorHandler(self)

    def read(self) -> "void":
        return _opl.IloOplDataSource_read(self)

    def getDataSourceName(self) -> "char const *":
        return _opl.IloOplDataSource_getDataSourceName(self)
    __swig_destroy__ = _opl.delete_IloOplDataSource
    __del__ = lambda self: None
IloOplDataSource_swigregister = _opl.IloOplDataSource_swigregister
IloOplDataSource_swigregister(IloOplDataSource)

class IloOplModelDefinition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplModelDefinition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplModelDefinition, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def hasElementDefinition(self, name: 'char const *') -> "IloBool":
        return _opl.IloOplModelDefinition_hasElementDefinition(self, name)

    def getElementDefinition(self, name: 'char const *') -> "IloOplElementDefinition":
        return _opl.IloOplModelDefinition_getElementDefinition(self, name)
    __swig_destroy__ = _opl.delete_IloOplModelDefinition
    __del__ = lambda self: None
IloOplModelDefinition_swigregister = _opl.IloOplModelDefinition_swigregister
IloOplModelDefinition_swigregister(IloOplModelDefinition)

class IloTupleSet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloTupleSet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloTupleSet, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getSchema(self) -> "IloTupleSchema":
        return _opl.IloTupleSet_getSchema(self)

    def getSize(self) -> "long":
        return _opl.IloTupleSet_getSize(self)

    def commit(self, line: 'IloTupleCellArray', check: 'IloBool') -> "long":
        return _opl.IloTupleSet_commit(self, line, check)

    def end(self) -> "void":
        return _opl.IloTupleSet_end(self)

    def commit2HashTable(self, array: 'IloTupleCellArray', check: 'IloBool') -> "long":
        return _opl.IloTupleSet_commit2HashTable(self, array, check)

    def fillColumns(self) -> "void":
        return _opl.IloTupleSet_fillColumns(self)

    def setIntColumnValues(self, idx: 'long', values: 'long *', size: 'long') -> "void":
        return _opl.IloTupleSet_setIntColumnValues(self, idx, values, size)

    def setNumColumnValues(self, idx: 'long', values: 'double *', size: 'long') -> "void":
        return _opl.IloTupleSet_setNumColumnValues(self, idx, values, size)

    def setStringColumnValues(self, idx: 'long', values: 'char **', size: 'long') -> "void":
        return _opl.IloTupleSet_setStringColumnValues(self, idx, values, size)

    def getIntColumnValues(self, i: 'long') -> "IloIntArray":
        return _opl.IloTupleSet_getIntColumnValues(self, i)

    def getNumColumnValues(self, i: 'long') -> "IloNumArray":
        return _opl.IloTupleSet_getNumColumnValues(self, i)

    def getSymbolColumnValues(self, i: 'long') -> "IloAnyArray":
        return _opl.IloTupleSet_getSymbolColumnValues(self, i)

    def fillTupleHash(self) -> "void":
        return _opl.IloTupleSet_fillTupleHash(self)
    __swig_destroy__ = _opl.delete_IloTupleSet
    __del__ = lambda self: None
IloTupleSet_swigregister = _opl.IloTupleSet_swigregister
IloTupleSet_swigregister(IloTupleSet)

class IloTupleSchema(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloTupleSchema, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloTupleSchema, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getColumnName(self, idx: 'long') -> "char const *":
        return _opl.IloTupleSchema_getColumnName(self, idx)

    def getSize(self) -> "long":
        return _opl.IloTupleSchema_getSize(self)

    def getName(self) -> "char const *":
        return _opl.IloTupleSchema_getName(self)

    def _getColumnTypes(self) -> "IloIntArray":
        return _opl.IloTupleSchema__getColumnTypes(self)

    def _hasSubTuple(self) -> "IloBool":
        return _opl.IloTupleSchema__hasSubTuple(self)

    def _getTupleColumn(self, i: 'long') -> "IloTupleSchema":
        return _opl.IloTupleSchema__getTupleColumn(self, i)

    def _isTuple(self, i: 'long') -> "IloBool":
        return _opl.IloTupleSchema__isTuple(self, i)

    def hasKey(self) -> "IloBool":
        return _opl.IloTupleSchema_hasKey(self)
    __swig_destroy__ = _opl.delete_IloTupleSchema
    __del__ = lambda self: None
IloTupleSchema_swigregister = _opl.IloTupleSchema_swigregister
IloTupleSchema_swigregister(IloTupleSchema)

class IloTupleCellArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloTupleCellArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloTupleCellArray, name)
    __repr__ = _swig_repr

    def __init__(self, *args):
        this = _opl.new_IloTupleCellArray(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def end(self) -> "void":
        return _opl.IloTupleCellArray_end(self)

    def getSize(self) -> "long":
        return _opl.IloTupleCellArray_getSize(self)

    def setIntValue(self, index: 'long', value: 'long') -> "void":
        return _opl.IloTupleCellArray_setIntValue(self, index, value)

    def setNumValue(self, index: 'long', value: 'double') -> "void":
        return _opl.IloTupleCellArray_setNumValue(self, index, value)

    def setSymbolValue(self, index: 'long', value: 'IloSymbol') -> "void":
        return _opl.IloTupleCellArray_setSymbolValue(self, index, value)

    def getIntValue(self, index: 'long') -> "long":
        return _opl.IloTupleCellArray_getIntValue(self, index)

    def getNumValue(self, index: 'long') -> "double":
        return _opl.IloTupleCellArray_getNumValue(self, index)

    def getSymbolValue(self, index: 'long') -> "IloSymbol":
        return _opl.IloTupleCellArray_getSymbolValue(self, index)

    def isIntValue(self, index: 'long') -> "IloBool":
        return _opl.IloTupleCellArray_isIntValue(self, index)

    def isNumValue(self, index: 'long') -> "IloBool":
        return _opl.IloTupleCellArray_isNumValue(self, index)

    def isSymbolValue(self, index: 'long') -> "IloBool":
        return _opl.IloTupleCellArray_isSymbolValue(self, index)

    def setStringValue(self, index: 'long', value: 'char *') -> "void":
        return _opl.IloTupleCellArray_setStringValue(self, index, value)
    __swig_destroy__ = _opl.delete_IloTupleCellArray
    __del__ = lambda self: None
IloTupleCellArray_swigregister = _opl.IloTupleCellArray_swigregister
IloTupleCellArray_swigregister(IloTupleCellArray)

class IloOplModel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplModel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplModel, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def main(self) -> "long":
        return _opl.IloOplModel_main(self)

    def getEnv(self) -> "IloEnv":
        return _opl.IloOplModel_getEnv(self)

    def getModelDefinition(self) -> "IloOplModelDefinition":
        return _opl.IloOplModel_getModelDefinition(self)

    def addDataSource(self, source: 'IloOplDataSource') -> "void":
        return _opl.IloOplModel_addDataSource(self, source)

    def getElement(self, name: 'char const *') -> "IloOplElement":
        return _opl.IloOplModel_getElement(self, name)

    def getElementNamesInPostProcessing(self) -> "IloStringArray":
        return _opl.IloOplModel_getElementNamesInPostProcessing(self)

    def getModel(self) -> "IloModel":
        return _opl.IloOplModel_getModel(self)

    def getObjective(self) -> "IloObjective":
        return _opl.IloOplModel_getObjective(self)

    def convertAllIntVars(self) -> "void":
        return _opl.IloOplModel_convertAllIntVars(self)

    def unconvertAllIntVars(self) -> "void":
        return _opl.IloOplModel_unconvertAllIntVars(self)

    def getCplex(self) -> "IloCplex":
        return _opl.IloOplModel_getCplex(self)

    def getCP(self) -> "IloCP":
        return _opl.IloOplModel_getCP(self)

    def hasCplex(self) -> "IloBool":
        return _opl.IloOplModel_hasCplex(self)

    def hasCP(self) -> "IloBool":
        return _opl.IloOplModel_hasCP(self)

    def isUsingCplex(self) -> "IloBool":
        return _opl.IloOplModel_isUsingCplex(self)

    def isUsingCP(self) -> "IloBool":
        return _opl.IloOplModel_isUsingCP(self)

    def generate(self) -> "void":
        return _opl.IloOplModel_generate(self)

    def isGenerated(self) -> "IloBool":
        return _opl.IloOplModel_isGenerated(self)

    def postProcess(self) -> "void":
        return _opl.IloOplModel_postProcess(self)

    def getSettings(self) -> "IloOplSettings":
        return _opl.IloOplModel_getSettings(self)

    def runSeed(self, n: 'long') -> "void":
        return _opl.IloOplModel_runSeed(self, n)
    if _newclass:
        _makeModelSourceFromString = staticmethod(_opl.IloOplModel__makeModelSourceFromString)
    else:
        _makeModelSourceFromString = _opl.IloOplModel__makeModelSourceFromString

    def _compile(self, name: 'char const *') -> "void":
        return _opl.IloOplModel__compile(self, name)

    def _getDuals(self, name: 'char const *') -> "IloNumArray":
        return _opl.IloOplModel__getDuals(self, name)

    def _getSlacks(self, name: 'char const *') -> "IloNumArray":
        return _opl.IloOplModel__getSlacks(self, name)

    def _getReducedCosts(self, name: 'char const *') -> "IloNumArray":
        return _opl.IloOplModel__getReducedCosts(self, name)

    def _getNames(self, name: 'char const *') -> "IloStringArray":
        return _opl.IloOplModel__getNames(self, name)

    def _installEngineLog(self, path: 'char const *') -> "void":
        return _opl.IloOplModel__installEngineLog(self, path)

    def _flushEngineLogs(self) -> "void":
        return _opl.IloOplModel__flushEngineLogs(self)

    def _printConflict(self) -> "long":
        return _opl.IloOplModel__printConflict(self)

    def _printRelaxation(self) -> "long":
        return _opl.IloOplModel__printRelaxation(self)

    def applyOpsSettings(self, opsFile: 'char const *') -> "void":
        return _opl.IloOplModel_applyOpsSettings(self, opsFile)

    def mute(self) -> "void":
        return _opl.IloOplModel_mute(self)

    def unmute(self) -> "void":
        return _opl.IloOplModel_unmute(self)

    def hasMain(self, *args) -> "IloBool":
        return _opl.IloOplModel_hasMain(self, *args)
    __swig_destroy__ = _opl.delete_IloOplModel
    __del__ = lambda self: None
IloOplModel_swigregister = _opl.IloOplModel_swigregister
IloOplModel_swigregister(IloOplModel)

def IloOplModel__makeModelSourceFromString(env: 'IloEnv', model: 'char const *') -> "IloOplModelSource":
    return _opl.IloOplModel__makeModelSourceFromString(env, model)
IloOplModel__makeModelSourceFromString = _opl.IloOplModel__makeModelSourceFromString

class IloOplElement(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplElement, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplElement, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getEnv(self) -> "IloEnv":
        return _opl.IloOplElement_getEnv(self)

    def getName(self) -> "char const *":
        return _opl.IloOplElement_getName(self)

    def getElementType(self) -> "IloOplElementType::Type":
        return _opl.IloOplElement_getElementType(self)

    def asNum(self) -> "double":
        return _opl.IloOplElement_asNum(self)

    def asInt(self) -> "long":
        return _opl.IloOplElement_asInt(self)

    def asString(self) -> "char const *":
        return _opl.IloOplElement_asString(self)

    def asTupleSet(self) -> "IloTupleSet":
        return _opl.IloOplElement_asTupleSet(self)

    def asDiscreteDataCollection(self) -> "IloDiscreteDataCollection":
        return _opl.IloOplElement_asDiscreteDataCollection(self)

    def isDiscreteDataCollection(self) -> "IloBool":
        return _opl.IloOplElement_isDiscreteDataCollection(self)

    def isDecisionExpression(self) -> "IloBool":
        return _opl.IloOplElement_isDecisionExpression(self)

    def isExternalData(self) -> "IloBool":
        return _opl.IloOplElement_isExternalData(self)

    def isInternalData(self) -> "IloBool":
        return _opl.IloOplElement_isInternalData(self)

    def isPostProcessing(self) -> "IloBool":
        return _opl.IloOplElement_isPostProcessing(self)
    __swig_destroy__ = _opl.delete_IloOplElement
    __del__ = lambda self: None
IloOplElement_swigregister = _opl.IloOplElement_swigregister
IloOplElement_swigregister(IloOplElement)

class IloOplElementDefinition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplElementDefinition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplElementDefinition, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def asSet(self) -> "IloOplSetDefinition":
        return _opl.IloOplElementDefinition_asSet(self)

    def getElementDefinitionType_asInt(self) -> "long":
        return _opl.IloOplElementDefinition_getElementDefinitionType_asInt(self)

    def asTuple(self) -> "IloOplTupleDefinition":
        return _opl.IloOplElementDefinition_asTuple(self)

    def getName(self) -> "char const *":
        return _opl.IloOplElementDefinition_getName(self)

    def isExternalData(self) -> "IloBool":
        return _opl.IloOplElementDefinition_isExternalData(self)

    def isTupleSet(self) -> "IloBool":
        return _opl.IloOplElementDefinition_isTupleSet(self)
    __swig_destroy__ = _opl.delete_IloOplElementDefinition
    __del__ = lambda self: None
IloOplElementDefinition_swigregister = _opl.IloOplElementDefinition_swigregister
IloOplElementDefinition_swigregister(IloOplElementDefinition)

class IloOplSetDefinition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplSetDefinition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplSetDefinition, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getItem(self) -> "IloOplElementDefinition":
        return _opl.IloOplSetDefinition_getItem(self)
    __swig_destroy__ = _opl.delete_IloOplSetDefinition
    __del__ = lambda self: None
IloOplSetDefinition_swigregister = _opl.IloOplSetDefinition_swigregister
IloOplSetDefinition_swigregister(IloOplSetDefinition)

class IloOplTupleDefinition(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplTupleDefinition, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplTupleDefinition, name)

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def getTupleSchema(self) -> "IloOplTupleSchemaDefinition":
        return _opl.IloOplTupleDefinition_getTupleSchema(self)
    __swig_destroy__ = _opl.delete_IloOplTupleDefinition
    __del__ = lambda self: None
IloOplTupleDefinition_swigregister = _opl.IloOplTupleDefinition_swigregister
IloOplTupleDefinition_swigregister(IloOplTupleDefinition)

class IloOplDataHandler(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplDataHandler, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplDataHandler, name)
    __repr__ = _swig_repr

    def getEnv(self) -> "IloEnv":
        return _opl.IloOplDataHandler_getEnv(self)

    def __init__(self, *args):
        this = _opl.new_IloOplDataHandler(*args)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def startElement(self, name: 'char const *') -> "void":
        return _opl.IloOplDataHandler_startElement(self, name)

    def endElement(self) -> "void":
        return _opl.IloOplDataHandler_endElement(self)

    def startSet(self) -> "void":
        return _opl.IloOplDataHandler_startSet(self)

    def endSet(self) -> "void":
        return _opl.IloOplDataHandler_endSet(self)

    def getElement(self, name: 'char const *') -> "IloOplElement":
        return _opl.IloOplDataHandler_getElement(self, name)

    def _prepareSet(self, name: 'char const *') -> "IloTupleSet":
        return _opl.IloOplDataHandler__prepareSet(self, name)
    __swig_destroy__ = _opl.delete_IloOplDataHandler
    __del__ = lambda self: None
IloOplDataHandler_swigregister = _opl.IloOplDataHandler_swigregister
IloOplDataHandler_swigregister(IloOplDataHandler)

class IloOplErrorHandler(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplErrorHandler, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplErrorHandler, name)
    __repr__ = _swig_repr

    def __init__(self, env: 'IloEnv'):
        this = _opl.new_IloOplErrorHandler(env)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _opl.delete_IloOplErrorHandler
    __del__ = lambda self: None
IloOplErrorHandler_swigregister = _opl.IloOplErrorHandler_swigregister
IloOplErrorHandler_swigregister(IloOplErrorHandler)

class IloOplModelSource(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplModelSource, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplModelSource, name)
    __repr__ = _swig_repr

    def __init__(self, env: 'IloEnv', filename: 'char const *'):
        this = _opl.new_IloOplModelSource(env, filename)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _opl.delete_IloOplModelSource
    __del__ = lambda self: None
IloOplModelSource_swigregister = _opl.IloOplModelSource_swigregister
IloOplModelSource_swigregister(IloOplModelSource)

class IloOplProfiler(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplProfiler, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplProfiler, name)
    __repr__ = _swig_repr

    def __init__(self, env: 'IloEnv'):
        this = _opl.new_IloOplProfiler(env)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def setIgnoreUserSection(self, arg2: 'IloBool') -> "void":
        return _opl.IloOplProfiler_setIgnoreUserSection(self, arg2)

    def printReport(self) -> "void":
        return _opl.IloOplProfiler_printReport(self)
    __swig_destroy__ = _opl.delete_IloOplProfiler
    __del__ = lambda self: None
IloOplProfiler_swigregister = _opl.IloOplProfiler_swigregister
IloOplProfiler_swigregister(IloOplProfiler)

class IloOplSettings(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloOplSettings, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloOplSettings, name)
    __repr__ = _swig_repr

    def __init__(self, env: 'IloEnv', handler: 'IloOplErrorHandler'):
        this = _opl.new_IloOplSettings(env, handler)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def setSkipWarnNeverUsedElements(self, value: 'IloBool') -> "void":
        return _opl.IloOplSettings_setSkipWarnNeverUsedElements(self, value)

    def setProfiler(self, profiler: 'IloOplProfiler') -> "void":
        return _opl.IloOplSettings_setProfiler(self, profiler)

    def hasProfiler(self) -> "IloBool":
        return _opl.IloOplSettings_hasProfiler(self)

    def getProfiler(self) -> "IloOplProfiler":
        return _opl.IloOplSettings_getProfiler(self)

    def setExportExternalData(self, path: 'char const *') -> "void":
        return _opl.IloOplSettings_setExportExternalData(self, path)

    def setExportInternalData(self, path: 'char const *') -> "void":
        return _opl.IloOplSettings_setExportInternalData(self, path)

    def setWithNames(self, arg2: 'IloBool') -> "void":
        return _opl.IloOplSettings_setWithNames(self, arg2)

    def getErrorHandler(self) -> "IloOplErrorHandler":
        return _opl.IloOplSettings_getErrorHandler(self)
    __swig_destroy__ = _opl.delete_IloOplSettings
    __del__ = lambda self: None
IloOplSettings_swigregister = _opl.IloOplSettings_swigregister
IloOplSettings_swigregister(IloOplSettings)

class IloCP(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloCP, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloCP, name)
    __repr__ = _swig_repr

    def __init__(self, env: 'IloEnv'):
        this = _opl.new_IloCP(env)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def solve(self) -> "IloBool":
        return _opl.IloCP_solve(self)

    def getObjValue(self) -> "double":
        return _opl.IloCP_getObjValue(self)

    def exportModel(self, filename: 'char const *') -> "void":
        return _opl.IloCP_exportModel(self, filename)
    __swig_destroy__ = _opl.delete_IloCP
    __del__ = lambda self: None
IloCP_swigregister = _opl.IloCP_swigregister
IloCP_swigregister(IloCP)

class IloCplex(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IloCplex, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IloCplex, name)
    __repr__ = _swig_repr

    def __init__(self, env: 'IloEnv'):
        this = _opl.new_IloCplex(env)
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this

    def solve(self) -> "IloBool":
        return _opl.IloCplex_solve(self)

    def exportModel(self, filename: 'char const *') -> "void":
        return _opl.IloCplex_exportModel(self, filename)

    def getObjValue(self) -> "double":
        return _opl.IloCplex_getObjValue(self)

    def getNiterations(self) -> "long":
        return _opl.IloCplex_getNiterations(self)

    def getNbarrierIterations(self) -> "long":
        return _opl.IloCplex_getNbarrierIterations(self)

    def getNsiftingIterations(self) -> "long":
        return _opl.IloCplex_getNsiftingIterations(self)

    def getNsiftingPhaseOneIterations(self) -> "long":
        return _opl.IloCplex_getNsiftingPhaseOneIterations(self)

    def getNcols(self) -> "long":
        return _opl.IloCplex_getNcols(self)

    def getNrows(self) -> "long":
        return _opl.IloCplex_getNrows(self)

    def getNQCs(self) -> "long":
        return _opl.IloCplex_getNQCs(self)

    def getNSOSs(self) -> "long":
        return _opl.IloCplex_getNSOSs(self)

    def getNindicators(self) -> "long":
        return _opl.IloCplex_getNindicators(self)

    def getNLCs(self) -> "long":
        return _opl.IloCplex_getNLCs(self)

    def getNUCs(self) -> "long":
        return _opl.IloCplex_getNUCs(self)

    def getNNZs(self) -> "long":
        return _opl.IloCplex_getNNZs(self)

    def getNintVars(self) -> "long":
        return _opl.IloCplex_getNintVars(self)

    def getNbinVars(self) -> "long":
        return _opl.IloCplex_getNbinVars(self)

    def getNsemiContVars(self) -> "long":
        return _opl.IloCplex_getNsemiContVars(self)

    def getNsemiIntVars(self) -> "long":
        return _opl.IloCplex_getNsemiIntVars(self)

    def getBestObjValue(self) -> "double":
        return _opl.IloCplex_getBestObjValue(self)

    def getIncumbentNode(self) -> "long":
        return _opl.IloCplex_getIncumbentNode(self)

    def getNprimalSuperbasics(self) -> "long":
        return _opl.IloCplex_getNprimalSuperbasics(self)

    def getNdualSuperbasics(self) -> "long":
        return _opl.IloCplex_getNdualSuperbasics(self)

    def getNphaseOneIterations(self) -> "long":
        return _opl.IloCplex_getNphaseOneIterations(self)

    def getNnodes(self) -> "long":
        return _opl.IloCplex_getNnodes(self)

    def getNnodesLeft(self) -> "long":
        return _opl.IloCplex_getNnodesLeft(self)

    def getNcrossPPush(self) -> "long":
        return _opl.IloCplex_getNcrossPPush(self)

    def getNcrossPExch(self) -> "long":
        return _opl.IloCplex_getNcrossPExch(self)

    def getNcrossDPush(self) -> "long":
        return _opl.IloCplex_getNcrossDPush(self)

    def getNcrossDExch(self) -> "long":
        return _opl.IloCplex_getNcrossDExch(self)

    def getNMIPStarts(self) -> "int":
        return _opl.IloCplex_getNMIPStarts(self)

    def isPrimalFeasible(self) -> "IloBool":
        return _opl.IloCplex_isPrimalFeasible(self)

    def isDualFeasible(self) -> "IloBool":
        return _opl.IloCplex_isDualFeasible(self)

    def isMIP(self) -> "IloBool":
        return _opl.IloCplex_isMIP(self)

    def getMIPRelativeGap(self) -> "double":
        return _opl.IloCplex_getMIPRelativeGap(self)

    def getCutoff(self) -> "double":
        return _opl.IloCplex_getCutoff(self)

    def getCplexStatus_asInt(self) -> "long":
        return _opl.IloCplex_getCplexStatus_asInt(self)

    def _getQualityNames(self) -> "char const **":
        return _opl.IloCplex__getQualityNames(self)

    def _getQualityEnumName(self, index: 'long') -> "char const *":
        return _opl.IloCplex__getQualityEnumName(self, index)

    def _getQualityEnumSize(self) -> "long":
        return _opl.IloCplex__getQualityEnumSize(self)

    def _getQuality(self, index: 'int') -> "double":
        return _opl.IloCplex__getQuality(self, index)
    __swig_destroy__ = _opl.delete_IloCplex
    __del__ = lambda self: None
IloCplex_swigregister = _opl.IloCplex_swigregister
IloCplex_swigregister(IloCplex)

# This file is compatible with both classic and new-style classes.


