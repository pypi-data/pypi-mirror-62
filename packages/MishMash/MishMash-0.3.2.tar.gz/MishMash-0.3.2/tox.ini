[tox]
envlist = py{37,38}-postgres{12,11,10,9}
skip_missing_interpreters = true
ignore_basepython_conflict = true

[default]
python = python3.7
postgresql = 11-alpine

[testenv:default]
basepython = {[default]python}
setenv =
    PYTEST_ADDOPTS=--pg-image postgres:{[default]postgresql} --pg-env POSTGRES_HOST_AUTH_METHOD=trust

[testenv:clean]
commands = coverage erase

[testenv]
setenv =
    postgres12: PYTEST_ADDOPTS=--pg-image postgres:12-alpine --pg-env POSTGRES_HOST_AUTH_METHOD=trust
    postgres11: PYTEST_ADDOPTS=--pg-image postgres:11-alpine --pg-env POSTGRES_HOST_AUTH_METHOD=trust
    postgres10: PYTEST_ADDOPTS=--pg-image postgres:10-alpine --pg-env POSTGRES_HOST_AUTH_METHOD=trust
    postgres9: PYTEST_ADDOPTS=--pg-image postgres:9-alpine --pg-env POSTGRES_HOST_AUTH_METHOD=trust

commands = pytest --verbose {posargs:./tests}

deps =
    git+https://github.com/nicfit/pytest-postgres.git
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements/test.txt

[testenv:coverage]
basepython = {[default]python}
setenv =
    PYTEST_ADDOPTS=--pg-image postgres:{[default]postgresql} --pg-env POSTGRES_HOST_AUTH_METHOD=trust

commands =
    coverage run --rcfile=setup.cfg --source ./mishmash -m \
             pytest {posargs:--verbose ./test}
    coverage report --rcfile=setup.cfg
    coverage html --rcfile=setup.cfg

[testenv:requirements]
skipsdist = true
skip_install = true
deps =
    nicfit.py[requirements]
    pip-tools
commands =
    nicfit requirements
    pip-compile -U requirements.txt -o ./requirements.txt

[testenv:lint]
deps =
    flake8
skipsdist = true
skip_install = true
commands = flake8 --builtins=_ ./mishmash

[testenv:check-manifest]
deps =
    check-manifest
commands = check-manifest
