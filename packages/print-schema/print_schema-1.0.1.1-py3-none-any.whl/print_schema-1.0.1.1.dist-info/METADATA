Metadata-Version: 2.1
Name: print-schema
Version: 1.0.1.1
Summary: Prints the schema of Python objects
Home-page: https://github.com/suryashekharc/print_schema
Author: Surya Shekhar Chakraborty
Author-email: suryaschak@gmail.com
License: MIT
Platform: UNKNOWN
Requires-Python: >=3.5
Description-Content-Type: text/markdown
Requires-Dist: requests

# print_schema

Ever had a complex Python object and wanted to easily see its structure?
**print_schema** makes it super easy to display the structure of complex dictionaries, JSONs, lists, etc
It differs from pprint in that this displays the structure rather than the object itself.

## Installing

You can download this package from pip:
```
pip install print_schema
```

### How to use this package

```
from print_schema import print_schema
my_dict = {"bts": {"members": 7,
                   "bias": "Kim Tae-hyung",
                   "albums": {"first": "Dark & Wild",
                              "peak_chart_position": {"Japan": 30, "Korea": 2},
                              "favorite_songs": ["Blood Sweat and Tears", "Boy with luv"]},
                   "more_members_alive_than_dead": True,
                   (2, 3): "a random tuple"},
           "beatles": {"members": 4,
                       "bias": "George Harrisom",
                       "albums": {"first": "Please Please Me",
                                  "peak_chart_position": {"UK": 1, "France": 5, "Germany": 5},
                                  "favorite_songs": ["Eleanor Rigby", "While My Guitar Gently Weeps"]},
                       "more_members_alive_than_dead": False,
                       (4, 5): "another random tuple"}}
print_schema(my_dict, indent=3, dense=False)
```

## Authors

* **Surya Shekhar Chakraborty**

## License

This project is licensed under the MIT License - see the [LICENSE](https://github.com/suryashekharc/print_schema/blob/master/LICENSE) file for details

## Acknowledgments

This project started when I started looking for a native Python equivalent of PySpark/Scala's printSchema() and couldn't find any :)

Much thanks to my favorite after-hours colleague Puneet Jindal for all the help.


