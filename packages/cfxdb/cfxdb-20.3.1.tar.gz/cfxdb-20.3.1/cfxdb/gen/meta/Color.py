# automatically generated by the FlatBuffers compiler, do not modify

# namespace: meta

import flatbuffers

# /// RGBA color.
class Color(object):
    __slots__ = ['_tab']

    # Color
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

# /// Red component of color, 0-255.
    # Color
    def R(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
# /// Green component of color, 0-255.
    # Color
    def G(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(1))
# /// Blue component of color, 0-255.
    # Color
    def B(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(2))
# /// Alpha component of color, 0-255.
    # Color
    def A(self): return self._tab.Get(flatbuffers.number_types.Uint8Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(3))

def CreateColor(builder, r, g, b, a):
    builder.Prep(1, 4)
    builder.PrependUint8(a)
    builder.PrependUint8(b)
    builder.PrependUint8(g)
    builder.PrependUint8(r)
    return builder.Offset()
