# automatically generated by the FlatBuffers compiler, do not modify

# namespace: meta

import flatbuffers

class Doc(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsDoc(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Doc()
        x.Init(buf, n + offset)
        return x

    # Doc
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

# /// OID of the documentation (version).
    # Doc
    def Oid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

# /// Slot of the object being documented.
    # Doc
    def ObjectSlot(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

# /// OID of the object being documented.
    # Doc
    def ObjectOid(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

# /// When the documentation (version) was created or modified.
    # Doc
    def Modified(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

# /// Documentation text format.
    # Doc
    def Format(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

# /// Documentation title.
    # Doc
    def Title(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(14))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

# /// The actual documentation (version).
    # Doc
    def Body(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(16))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def DocStart(builder): builder.StartObject(7)
def DocAddOid(builder, oid): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(oid), 0)
def DocAddObjectSlot(builder, objectSlot): builder.PrependUint16Slot(1, objectSlot, 0)
def DocAddObjectOid(builder, objectOid): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(objectOid), 0)
def DocAddModified(builder, modified): builder.PrependUint64Slot(3, modified, 0)
def DocAddFormat(builder, format): builder.PrependUint8Slot(4, format, 0)
def DocAddTitle(builder, title): builder.PrependUOffsetTRelativeSlot(5, flatbuffers.number_types.UOffsetTFlags.py_type(title), 0)
def DocAddBody(builder, body): builder.PrependUOffsetTRelativeSlot(6, flatbuffers.number_types.UOffsetTFlags.py_type(body), 0)
def DocEnd(builder): return builder.EndObject()
