{"version":3,"sources":["webpack:///./src/common/util/render-status.ts","webpack:///./src/common/dom/setup-leaflet-map.ts","webpack:///./src/data/zone.ts","webpack:///./src/data/core.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/components/timezone-datalist.ts","webpack:///./src/onboarding/onboarding-core-config.ts","webpack:///./src/common/navigate.ts"],"names":["__webpack_require__","d","__webpack_exports__","afterNextRender","nextRender","cb","requestAnimationFrame","setTimeout","Promise","resolve","setupLeafletMap","_ref","regeneratorRuntime","mark","_callee","mapElement","darkMode","draw","Leaflet","map","style","_args","arguments","wrap","_context","prev","next","length","undefined","parentNode","Error","e","then","t","bind","sent","Icon","Default","imagePath","document","createElement","setAttribute","appendChild","setView","createTileLayer","addTo","abrupt","stop","_x","apply","this","leaflet","tileLayer","concat","Browser","retina","attribution","subdomains","minZoom","maxZoom","defaultRadiusColor","homeRadiusColor","passiveRadiusColor","fetchZones","createZone","updateZone","deleteZone","showZoneEditor","getZoneEditorInitData","inititialZoneEditorData","_common_navigate__WEBPACK_IMPORTED_MODULE_0__","hass","callWS","type","values","Object","assign","zoneId","updates","zone_id","el","data","navigate","saveCoreConfig","detectCoreConfig","customElement","LocationEditor","property","_leafletMap","location","_locationMarker","getBounds","fitBounds","fitZoom","_ignoreFitToMap","html","_templateObject","changedProps","_get","_getPrototypeOf","prototype","call","_initMap","has","_updateMarker","fitMap","_updateRadius","_updateRadiusColor","_updateIcon","shadowRoot","querySelector","_ref2","_this2","_mapEl","Boolean","radius","_slicedToArray","addEventListener","ev","_locationUpdated","latlng","invalidateSize","longitude","lng","Math","abs","lat","fireEvent","bubbles","getRadius","icon","iconHTML","outerHTML","_iconEl","divIcon","iconSize","className","_setIcon","editing","_moveMarker","setIcon","_this3","enable","moveMarker","resizeMarker","_resizeMarkers","target","getLatLng","_radiusUpdated","_callee2","_this4","_context2","remove","setLatLng","disable","_setupEdit","circle","color","radiusColor","addLayer","marker","draggable","setRadius","setStyle","css","_templateObject2","LitElement","createTimezoneListEl","google_timezones_json__WEBPACK_IMPORTED_MODULE_0__","google_timezones_json__WEBPACK_IMPORTED_MODULE_0___default","n","list","id","keys","timezones","forEach","key","option","value","innerHTML","amsterdam","OnboardingCoreConfig","onboardingLocalize","user","name","_working","_nameValue","_handleChange","_detect","_locationValue","_locationChanged","localize","_timeZoneValue","_elevationValue","_unitSystem","_unitSystemValue","_unitSystemChanged","_save","focus","keyCode","inputElement","_name","_location","_elevation","_timeZone","currentTarget","detail","latitude","Number","elevation","String","unit_system","time_zone","t0","alert","message","finish","result","preventDefault","location_name","onboardCoreConfigStep","_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","_node","path","replace","history","replaceState","pushState","window"],"mappings":"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","file":"chunk.d43bea5b5ce088142533.js","sourcesContent":["export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import { Map } from \"leaflet\";\n\n// Sets up a Leaflet map on the provided DOM element\nexport type LeafletModuleType = typeof import(\"leaflet\");\nexport type LeafletDrawModuleType = typeof import(\"leaflet-draw\");\n\nexport const setupLeafletMap = async (\n  mapElement: HTMLElement,\n  darkMode = false,\n  draw = false\n): Promise<[Map, LeafletModuleType]> => {\n  if (!mapElement.parentNode) {\n    throw new Error(\"Cannot setup Leaflet map on disconnected element\");\n  }\n  // tslint:disable-next-line\n  const Leaflet = (await import(\n    /* webpackChunkName: \"leaflet\" */ \"leaflet\"\n  )) as LeafletModuleType;\n  Leaflet.Icon.Default.imagePath = \"/static/images/leaflet/images/\";\n\n  if (draw) {\n    await import(/* webpackChunkName: \"leaflet-draw\" */ \"leaflet-draw\");\n  }\n\n  const map = Leaflet.map(mapElement);\n  const style = document.createElement(\"link\");\n  style.setAttribute(\"href\", \"/static/images/leaflet/leaflet.css\");\n  style.setAttribute(\"rel\", \"stylesheet\");\n  mapElement.parentNode.appendChild(style);\n  map.setView([52.3731339, 4.8903147], 13);\n  createTileLayer(Leaflet, darkMode).addTo(map);\n\n  return [map, Leaflet];\n};\n\nexport const createTileLayer = (\n  leaflet: LeafletModuleType,\n  darkMode: boolean\n) => {\n  return leaflet.tileLayer(\n    `https://{s}.basemaps.cartocdn.com/${\n      darkMode ? \"dark_all\" : \"light_all\"\n    }/{z}/{x}/{y}${leaflet.Browser.retina ? \"@2x.png\" : \".png\"}`,\n    {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>, &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      subdomains: \"abcd\",\n      minZoom: 0,\n      maxZoom: 20,\n    }\n  );\n};\n","import { HomeAssistant } from \"../types\";\nimport { navigate } from \"../common/navigate\";\n\nexport const defaultRadiusColor = \"#FF9800\";\nexport const homeRadiusColor: string = \"#03a9f4\";\nexport const passiveRadiusColor: string = \"#9b9b9b\";\n\nexport interface Zone {\n  id: string;\n  name: string;\n  icon?: string;\n  latitude: number;\n  longitude: number;\n  passive?: boolean;\n  radius?: number;\n}\n\nexport interface ZoneMutableParams {\n  icon: string;\n  latitude: number;\n  longitude: number;\n  name: string;\n  passive: boolean;\n  radius: number;\n}\n\nexport const fetchZones = (hass: HomeAssistant) =>\n  hass.callWS<Zone[]>({ type: \"zone/list\" });\n\nexport const createZone = (hass: HomeAssistant, values: ZoneMutableParams) =>\n  hass.callWS<Zone>({\n    type: \"zone/create\",\n    ...values,\n  });\n\nexport const updateZone = (\n  hass: HomeAssistant,\n  zoneId: string,\n  updates: Partial<ZoneMutableParams>\n) =>\n  hass.callWS<Zone>({\n    type: \"zone/update\",\n    zone_id: zoneId,\n    ...updates,\n  });\n\nexport const deleteZone = (hass: HomeAssistant, zoneId: string) =>\n  hass.callWS({\n    type: \"zone/delete\",\n    zone_id: zoneId,\n  });\n\nlet inititialZoneEditorData: Partial<ZoneMutableParams> | undefined;\n\nexport const showZoneEditor = (\n  el: HTMLElement,\n  data?: Partial<ZoneMutableParams>\n) => {\n  inititialZoneEditorData = data;\n  navigate(el, \"/config/zone/new\");\n};\n\nexport const getZoneEditorInitData = () => {\n  const data = inititialZoneEditorData;\n  inititialZoneEditorData = undefined;\n  return data;\n};\n","import { HomeAssistant } from \"../types\";\nimport { HassConfig } from \"home-assistant-js-websocket\";\n\nexport interface ConfigUpdateValues {\n  location_name: string;\n  latitude: number;\n  longitude: number;\n  elevation: number;\n  unit_system: \"metric\" | \"imperial\";\n  time_zone: string;\n}\n\nexport const saveCoreConfig = (\n  hass: HomeAssistant,\n  values: Partial<ConfigUpdateValues>\n) =>\n  hass.callWS<HassConfig>({\n    type: \"config/core/update\",\n    ...values,\n  });\n\nexport const detectCoreConfig = (hass: HomeAssistant) =>\n  hass.callWS<Partial<ConfigUpdateValues>>({\n    type: \"config/core/detect\",\n  });\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport {\n  Marker,\n  Map,\n  LeafletMouseEvent,\n  DragEndEvent,\n  LatLng,\n  Circle,\n  DivIcon,\n} from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { defaultRadiusColor } from \"../../data/zone\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  @property() public radius?: number;\n  @property() public radiusColor?: string;\n  @property() public icon?: string;\n  public fitZoom = 16;\n  private _iconEl?: DivIcon;\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker | Circle;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    if ((this._locationMarker as Circle).getBounds) {\n      this._leafletMap.fitBounds((this._locationMarker as Circle).getBounds());\n    } else {\n      this._leafletMap.setView(this.location, this.fitZoom);\n    }\n    this._ignoreFitToMap = this.location;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    if (changedProps.has(\"location\")) {\n      this._updateMarker();\n      if (\n        this.location &&\n        (!this._ignoreFitToMap ||\n          this._ignoreFitToMap[0] !== this.location[0] ||\n          this._ignoreFitToMap[1] !== this.location[1])\n      ) {\n        this.fitMap();\n      }\n    }\n    if (changedProps.has(\"radius\")) {\n      this._updateRadius();\n    }\n    if (changedProps.has(\"radiusColor\")) {\n      this._updateRadiusColor();\n    }\n    if (changedProps.has(\"icon\")) {\n      this._updateIcon();\n    }\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(\n      this._mapEl,\n      false,\n      Boolean(this.radius)\n    );\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._locationUpdated(ev.latlng)\n    );\n    this._updateIcon();\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _locationUpdated(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _radiusUpdated() {\n    this._ignoreFitToMap = this.location;\n    this.radius = (this._locationMarker as Circle).getRadius();\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateIcon() {\n    if (!this.icon) {\n      this._iconEl = undefined;\n      return;\n    }\n\n    // create icon\n    let iconHTML = \"\";\n    const el = document.createElement(\"ha-icon\");\n    el.setAttribute(\"icon\", this.icon);\n    iconHTML = el.outerHTML;\n\n    this._iconEl = this.Leaflet!.divIcon({\n      html: iconHTML,\n      iconSize: [24, 24],\n      className: \"light leaflet-edit-move\",\n    });\n    this._setIcon();\n  }\n\n  private _setIcon() {\n    if (!this._locationMarker || !this._iconEl) {\n      return;\n    }\n\n    if (!this.radius) {\n      (this._locationMarker as Marker).setIcon(this._iconEl);\n      return;\n    }\n\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    moveMarker.setIcon(this._iconEl);\n  }\n\n  private _setupEdit() {\n    // @ts-ignore\n    this._locationMarker.editing.enable();\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    // @ts-ignore\n    const resizeMarker = this._locationMarker.editing._resizeMarkers[0];\n    this._setIcon();\n    moveMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n    );\n    resizeMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._radiusUpdated(ev)\n    );\n  }\n\n  private async _updateMarker(): Promise<void> {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      if (this.radius) {\n        // @ts-ignore\n        this._locationMarker.editing.disable();\n        await nextRender();\n        this._setupEdit();\n      }\n      return;\n    }\n\n    if (!this.radius) {\n      this._locationMarker = this.Leaflet!.marker(this.location, {\n        draggable: true,\n      });\n      this._setIcon();\n      this._locationMarker.addEventListener(\n        \"dragend\",\n        // @ts-ignore\n        (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n      );\n      this._leafletMap!.addLayer(this._locationMarker);\n    } else {\n      this._locationMarker = this.Leaflet!.circle(this.location, {\n        color: this.radiusColor || defaultRadiusColor,\n        radius: this.radius,\n      });\n      this._leafletMap!.addLayer(this._locationMarker);\n      this._setupEdit();\n    }\n  }\n\n  private _updateRadius(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setRadius(this.radius);\n  }\n\n  private _updateRadiusColor(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setStyle({ color: this.radiusColor });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n      .light {\n        color: #000000;\n      }\n      .leaflet-edit-move {\n        border-radius: 50%;\n        cursor: move !important;\n      }\n      .leaflet-edit-resize {\n        border-radius: 50%;\n        cursor: nesw-resize !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import timezones from \"google-timezones-json\";\n\nexport const createTimezoneListEl = () => {\n  const list = document.createElement(\"datalist\");\n  list.id = \"timezones\";\n  Object.keys(timezones).forEach((key) => {\n    const option = document.createElement(\"option\");\n    option.value = key;\n    option.innerHTML = timezones[key];\n    list.appendChild(option);\n  });\n  return list;\n};\n","import {\n  LitElement,\n  customElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@material/mwc-button/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-radio-group/paper-radio-group\";\nimport \"@polymer/paper-radio-button/paper-radio-button\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { PaperInputElement } from \"@polymer/paper-input/paper-input\";\nimport { HomeAssistant } from \"../types\";\nimport {\n  ConfigUpdateValues,\n  detectCoreConfig,\n  saveCoreConfig,\n} from \"../data/core\";\nimport { PolymerChangedEvent } from \"../polymer-types\";\nimport { onboardCoreConfigStep } from \"../data/onboarding\";\nimport { fireEvent } from \"../common/dom/fire_event\";\nimport { LocalizeFunc } from \"../common/translations/localize\";\nimport { createTimezoneListEl } from \"../components/timezone-datalist\";\nimport \"../components/map/ha-location-editor\";\n\nconst amsterdam = [52.3731339, 4.8903147];\n\n@customElement(\"onboarding-core-config\")\nclass OnboardingCoreConfig extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public onboardingLocalize!: LocalizeFunc;\n\n  @property() private _working = false;\n\n  @property() private _name!: ConfigUpdateValues[\"location_name\"];\n  @property() private _location!: [number, number];\n  @property() private _elevation!: string;\n  @property() private _unitSystem!: ConfigUpdateValues[\"unit_system\"];\n  @property() private _timeZone!: string;\n\n  protected render(): TemplateResult {\n    return html`\n      <p>\n        ${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.intro\",\n          \"name\",\n          this.hass.user!.name\n        )}\n      </p>\n\n      <paper-input\n        .label=${this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name\"\n        )}\n        name=\"name\"\n        .disabled=${this._working}\n        .value=${this._nameValue}\n        @value-changed=${this._handleChange}\n      ></paper-input>\n\n      <div class=\"middle-text\">\n        <p>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.intro_location\"\n          )}\n        </p>\n\n        <div class=\"row\">\n          <div>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.intro_location_detect\"\n            )}\n          </div>\n          <mwc-button @click=${this._detect}>\n            ${this.onboardingLocalize(\n              \"ui.panel.page-onboarding.core-config.button_detect\"\n            )}\n          </mwc-button>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <ha-location-editor\n          class=\"flex\"\n          .location=${this._locationValue}\n          .fitZoom=${14}\n          @change=${this._locationChanged}\n        ></ha-location-editor>\n      </div>\n\n      <div class=\"row\">\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.time_zone\"\n          )}\n          name=\"timeZone\"\n          list=\"timezones\"\n          .disabled=${this._working}\n          .value=${this._timeZoneValue}\n          @value-changed=${this._handleChange}\n        ></paper-input>\n\n        <paper-input\n          class=\"flex\"\n          .label=${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.elevation\"\n          )}\n          name=\"elevation\"\n          type=\"number\"\n          .disabled=${this._working}\n          .value=${this._elevationValue}\n          @value-changed=${this._handleChange}\n        >\n          <span slot=\"suffix\">\n            ${this._unitSystem === \"metric\"\n              ? this.hass.localize(\n                  \"ui.panel.config.core.section.core.core_config.elevation_meters\"\n                )\n              : this.hass.localize(\n                  \"ui.panel.config.core.section.core.core_config.elevation_feet\"\n                )}\n          </span>\n        </paper-input>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"flex\">\n          ${this.hass.localize(\n            \"ui.panel.config.core.section.core.core_config.unit_system\"\n          )}\n        </div>\n        <paper-radio-group\n          class=\"flex\"\n          .selected=${this._unitSystemValue}\n          @selected-changed=${this._unitSystemChanged}\n        >\n          <paper-radio-button name=\"metric\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_metric\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.metric_example\"\n              )}\n            </div>\n          </paper-radio-button>\n          <paper-radio-button name=\"imperial\" .disabled=${this._working}>\n            ${this.hass.localize(\n              \"ui.panel.config.core.section.core.core_config.unit_system_imperial\"\n            )}\n            <div class=\"secondary\">\n              ${this.hass.localize(\n                \"ui.panel.config.core.section.core.core_config.imperial_example\"\n              )}\n            </div>\n          </paper-radio-button>\n        </paper-radio-group>\n      </div>\n\n      <div class=\"footer\">\n        <mwc-button @click=${this._save} .disabled=${this._working}>\n          ${this.onboardingLocalize(\n            \"ui.panel.page-onboarding.core-config.finish\"\n          )}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    setTimeout(\n      () => this.shadowRoot!.querySelector(\"paper-input\")!.focus(),\n      100\n    );\n    this.addEventListener(\"keypress\", (ev) => {\n      if (ev.keyCode === 13) {\n        this._save(ev);\n      }\n    });\n    const input = this.shadowRoot!.querySelector(\n      \"[name=timeZone]\"\n    ) as PaperInputElement;\n    input.inputElement.appendChild(createTimezoneListEl());\n  }\n\n  private get _nameValue() {\n    return this._name !== undefined\n      ? this._name\n      : this.onboardingLocalize(\n          \"ui.panel.page-onboarding.core-config.location_name_default\"\n        );\n  }\n\n  private get _locationValue() {\n    return this._location || amsterdam;\n  }\n\n  private get _elevationValue() {\n    return this._elevation !== undefined ? this._elevation : 0;\n  }\n\n  private get _timeZoneValue() {\n    return this._timeZone;\n  }\n\n  private get _unitSystemValue() {\n    return this._unitSystem !== undefined ? this._unitSystem : \"metric\";\n  }\n\n  private _handleChange(ev: PolymerChangedEvent<string>) {\n    const target = ev.currentTarget as PaperInputElement;\n    this[`_${target.name}`] = target.value;\n  }\n\n  private _locationChanged(ev) {\n    this._location = ev.currentTarget.location;\n  }\n\n  private _unitSystemChanged(\n    ev: PolymerChangedEvent<ConfigUpdateValues[\"unit_system\"]>\n  ) {\n    this._unitSystem = ev.detail.value;\n  }\n\n  private async _detect() {\n    this._working = true;\n    try {\n      const values = await detectCoreConfig(this.hass);\n      if (values.latitude && values.longitude) {\n        this._location = [Number(values.latitude), Number(values.longitude)];\n      }\n      if (values.elevation) {\n        this._elevation = String(values.elevation);\n      }\n      if (values.unit_system) {\n        this._unitSystem = values.unit_system;\n      }\n      if (values.time_zone) {\n        this._timeZone = values.time_zone;\n      }\n    } catch (err) {\n      alert(`Failed to detect location information: ${err.message}`);\n    } finally {\n      this._working = false;\n    }\n  }\n\n  private async _save(ev) {\n    ev.preventDefault();\n    this._working = true;\n    try {\n      const location = this._locationValue;\n      await saveCoreConfig(this.hass, {\n        location_name: this._nameValue,\n        latitude: location[0],\n        longitude: location[1],\n        elevation: Number(this._elevationValue),\n        unit_system: this._unitSystemValue,\n        time_zone: this._timeZoneValue || \"UTC\",\n      });\n      const result = await onboardCoreConfigStep(this.hass);\n      fireEvent(this, \"onboarding-step\", {\n        type: \"core_config\",\n        result,\n      });\n    } catch (err) {\n      this._working = false;\n      alert(`Failed to save: ${err.message}`);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .row {\n        display: flex;\n        flex-direction: row;\n        margin: 0 -8px;\n        align-items: center;\n      }\n\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n\n      .flex {\n        flex: 1;\n      }\n\n      .middle-text {\n        margin: 24px 0;\n      }\n\n      .row > * {\n        margin: 0 8px;\n      }\n      .footer {\n        margin-top: 16px;\n        text-align: right;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"onboarding-core-config\": OnboardingCoreConfig;\n  }\n}\n","import { fireEvent } from \"./dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"location-changed\": {\n      replace: boolean;\n    };\n  }\n}\n\nexport const navigate = (\n  _node: any,\n  path: string,\n  replace: boolean = false\n) => {\n  if (__DEMO__) {\n    if (replace) {\n      history.replaceState(null, \"\", `${location.pathname}#${path}`);\n    } else {\n      window.location.hash = path;\n    }\n  } else {\n    if (replace) {\n      history.replaceState(null, \"\", path);\n    } else {\n      history.pushState(null, \"\", path);\n    }\n  }\n  fireEvent(window, \"location-changed\", {\n    replace,\n  });\n};\n"],"sourceRoot":""}