{"version":3,"sources":["webpack:///./src/components/ha-card.ts","webpack:///./src/layouts/hass-tabs-subpage.ts","webpack:///./src/components/ha-fab.ts","webpack:///./src/data/user.ts"],"names":["HaCard","_LitElement","[object Object]","args","super","_initialize","this","property","css","html","header","LitElement","customElements","define","customElement","HassTabsSubpage","type","String","attribute","Boolean","reflect","changedProperties","_get","_getPrototypeOf","prototype","call","has","_activeTab","tabs","findIndex","tab","route","prefix","includes","path","hassio","_backTapped","narrow","classMap","bottom-bar","map","page","index","component","core","isComponentLoaded","hass","exportOnly","showAdvanced","active","_tabTapped","icon","translationKey","localize","name","ev","navigate","currentTarget","backPath","backCallback","history","back","MwcFab","get","_decorate","_MwcFab","F","d","kind","key","value","classes","mdc-fab--mini","mini","mdc-fab--exited","exited","mdc-fab--extended","extended","showLabel","label","ripple","disabled","showIconAtEnd","__webpack_require__","__webpack_exports__","SYSTEM_GROUP_ID_ADMIN","SYSTEM_GROUP_ID_USER","fetchUsers","updateUser","deleteUser","async","callWS","userId","params","Object","assign","user_id"],"mappings":"2yCASMA,22LAAN,cAAAC,EAAgCC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,qCAC7BC,mFAED,WACE,OAAOC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CA+CT,WACE,OAAOC;QACHH,KAAKI,OACHD;uCAC6BH,KAAKI;YAElCD;;WAzDWE,KA+DrBC,eAAeC,OAAO,UAAWb,uhPC3ChCc,YAAc,oCAAf,MACMC,UADNd,EACyCC,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,gBAAnCS,+BACHR,kEACAA,YAAS,CAAES,KAAMC,OAAQC,UAAW,sEACpCX,0EACAA,YAAS,CAAES,KAAMG,mCAA2B,6BAC5CZ,YAAS,CAAES,KAAMG,yCAAiC,6BAClDZ,mEACAA,kEACAA,YAAS,CAAES,KAAMG,QAASC,SAAS,6BAAwB,6BAC3Db,2CAAyC,sCAE1C,SAAkBc,GAChBC,EAAAC,EAZER,EAYFS,WAAA,UAAAlB,MAAAmB,KAAAnB,KAAce,GACVA,EAAkBK,IAAI,WACxBpB,KAAKqB,WAAarB,KAAKsB,KAAKC,UAAWC,GACrCxB,KAAKyB,MAAMC,OAAOC,SAASH,EAAII,4CAKrC,WACE,OAAOzB;;;;oBAISH,KAAK6B;mBACN7B,KAAK8B;;UAEd9B,KAAK+B,OACH5B;;cAGA;iCACqB6B,YAAS,CAAEC,aAAcjC,KAAK+B;YACnD/B,KAAKsB,KAAKY,IAAI,CAACC,EAAMC,IACnBD,EAAKE,YACLF,EAAKG,OACLC,YAAkBvC,KAAKwC,KAAML,EAAKE,YAClCF,EAAKM,aAAczC,KAAK0C,aA0BtB,GAzBAvC;;iCAEiB6B,YAAS,CACpBW,OAAQP,IAAUpC,KAAKqB;6BAEhBrB,KAAK4C;4BACNT,EAAKP;;sBAEX5B,KAAK+B,OACH5B;2CACmBgC,EAAKU;0BAExB;sBACD7C,KAAK+B,QAAUK,IAAUpC,KAAKqB,WAQ7B,GAPAlB;;+BAEOgC,EAAKW,eACJ9C,KAAKwC,KAAKO,SAASZ,EAAKW,gBACxBE;;;;;;;;;;;;;;;8CAqB9B,SAAmBC,GACjBC,YAASlD,KAAOiD,EAAGE,cAAsBvB,MAAM,4CAGjD,WACM5B,KAAKoD,SACPF,YAASlD,KAAMA,KAAKoD,UAGlBpD,KAAKqD,aACPrD,KAAKqD,eAGPC,QAAQC,kDAGV,WACE,OAAOrD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA/FmBG,8wCCrB9B,MAAMmD,EAASlD,eAAemD,IAAI,i1LAGlCC,CAAA,CADClD,YAAc,WACf,SAAAT,EAAA4D,GAAA,OAAAC,EADA,cAAAD,EACkC/D,eAAAC,GAAAC,SAAAD,GAAAE,EAAAC,QAAlC6D,EAAA,EAAAC,KAAA,SAAAC,IAAA,SAAAC,MAGE,WACE,MAAMC,EAAU,CACdC,gBAAiBlE,KAAKmE,KACtBC,kBAAmBpE,KAAKqE,OACxBC,oBAAqBtE,KAAKuE,UAEtBC,EAA2B,KAAfxE,KAAKyE,OAAgBzE,KAAKuE,SAC5C,OAAOpE;;mBAEQuE;yBACM1C,YAASiC;qBACbjE,KAAK2E;sBACJ3E,KAAKyE,OAASzE,KAAK6C;;UAE/B2B,GAAaxE,KAAK4E,cAAgB5E,KAAKyE,MAAQ;UAC/CzE,KAAK6C,KACH1C;+BACmBH,KAAK6C;cAExB;UACF2B,IAAcxE,KAAK4E,cAAgB5E,KAAKyE,MAAQ;;WAvB/BjB,qCCT3BqB,EAAAhB,EAAAiB,EAAA,sBAAAC,IAAAF,EAAAhB,EAAAiB,EAAA,sBAAAE,IAAAH,EAAAhB,EAAAiB,EAAA,sBAAAG,IAAAJ,EAAAhB,EAAAiB,EAAA,sBAAAI,IAAAL,EAAAhB,EAAAiB,EAAA,sBAAAK,IAAO,MAAMJ,EAAwB,eACxBC,EAAuB,eAkBvBC,EAAaG,SACxB5C,EAAK6C,OAAe,CAClB3E,KAAM,qBASGwE,EAAaE,MACxB5C,EACA8C,EACAC,IAEA/C,EAAK6C,OAALG,OAAAC,OAAA,GACKF,EADL,CAEE7E,KAAM,qBACNgF,QAASJ,KAGAH,EAAaC,MAAO5C,EAAqB8C,IACpD9C,EAAK6C,OAAa,CAChB3E,KAAM,qBACNgF,QAASJ","file":"chunk.d30f71096104c33deb47.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  customElement,\n  css,\n  CSSResult,\n  PropertyValues,\n} from \"lit-element\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-paper-icon-button-arrow-prev\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { Route, HomeAssistant } from \"../types\";\nimport { navigate } from \"../common/navigate\";\nimport \"@material/mwc-ripple\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string;\n  name?: string;\n  core?: boolean;\n  exportOnly?: boolean;\n  icon?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n  @property() public backCallback?: () => void;\n  @property({ type: Boolean }) public hassio = false;\n  @property({ type: Boolean }) public showAdvanced = false;\n  @property() public route!: Route;\n  @property() public tabs!: PageNavigation[];\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n  @property() private _activeTab: number = -1;\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.findIndex((tab) =>\n        this.route.prefix.includes(tab.path)\n      );\n    }\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"toolbar\">\n        <ha-paper-icon-button-arrow-prev\n          aria-label=\"Back\"\n          .hassio=${this.hassio}\n          @click=${this._backTapped}\n        ></ha-paper-icon-button-arrow-prev>\n        ${this.narrow\n          ? html`\n              <div main-title><slot name=\"header\"></slot></div>\n            `\n          : \"\"}\n        <div id=\"tabbar\" class=${classMap({ \"bottom-bar\": this.narrow })}>\n          ${this.tabs.map((page, index) =>\n            (!page.component ||\n              page.core ||\n              isComponentLoaded(this.hass, page.component)) &&\n            (!page.exportOnly || this.showAdvanced)\n              ? html`\n                  <div\n                    class=\"tab ${classMap({\n                      active: index === this._activeTab,\n                    })}\"\n                    @click=${this._tabTapped}\n                    .path=${page.path}\n                  >\n                    ${this.narrow\n                      ? html`\n                          <ha-icon .icon=${page.icon}></ha-icon>\n                        `\n                      : \"\"}\n                    ${!this.narrow || index === this._activeTab\n                      ? html`\n                          <span class=\"name\"\n                            >${page.translationKey\n                              ? this.hass.localize(page.translationKey)\n                              : name}</span\n                          >\n                        `\n                      : \"\"}\n                    <mwc-ripple></mwc-ripple>\n                  </div>\n                `\n              : \"\"\n          )}\n        </div>\n\n        <div id=\"toolbar-icon\">\n          <slot name=\"toolbar-icon\"></slot>\n        </div>\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private _tabTapped(ev: MouseEvent): void {\n    navigate(this, (ev.currentTarget as any).path, true);\n  }\n\n  private _backTapped(): void {\n    if (this.backPath) {\n      navigate(this, this.backPath);\n      return;\n    }\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: 65px;\n        background-color: var(--sidebar-background-color);\n        font-weight: 400;\n        color: var(--sidebar-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        padding: 0 16px;\n        box-sizing: border-box;\n      }\n\n      #tabbar {\n        display: flex;\n        font-size: 14px;\n      }\n\n      #tabbar.bottom-bar {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        padding: 0 16px;\n        box-sizing: border-box;\n        background-color: var(--sidebar-background-color);\n        border-top: 1px solid var(--divider-color);\n        justify-content: space-between;\n        z-index: 1;\n        font-size: 12px;\n        width: 100%;\n      }\n\n      #tabbar:not(.bottom-bar) {\n        margin: auto;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, 0);\n      }\n\n      .tab {\n        padding: 0 32px;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n        height: 64px;\n        cursor: pointer;\n      }\n\n      .name {\n        white-space: nowrap;\n      }\n\n      .tab.active {\n        color: var(--primary-color);\n      }\n\n      #tabbar:not(.bottom-bar) .tab.active {\n        border-bottom: 2px solid var(--primary-color);\n      }\n\n      .bottom-bar .tab {\n        padding: 0 16px;\n        width: 20%;\n        min-width: 0;\n      }\n\n      ha-menu-button,\n      ha-paper-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        pointer-events: auto;\n        color: var(--sidebar-icon-color);\n      }\n\n      [main-title] {\n        margin: 0 0 0 24px;\n        line-height: 20px;\n        flex-grow: 1;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 65px);\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      #toolbar-icon {\n        position: absolute;\n        right: 16px;\n      }\n\n      :host([narrow]) .content {\n        height: calc(100% - 128px);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n","import { classMap } from \"lit-html/directives/class-map\";\nimport { html, customElement } from \"lit-element\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive.js\";\n\nimport \"@material/mwc-fab\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nimport { Fab } from \"@material/mwc-fab\";\n// tslint:disable-next-line\nconst MwcFab = customElements.get(\"mwc-fab\") as Constructor<Fab>;\n\n@customElement(\"ha-fab\")\nexport class HaFab extends MwcFab {\n  // We override the render method because we don't have an icon font and mwc-fab doesn't support our svg-icon sets.\n  // Based on version mwc-fab 0.8\n  protected render() {\n    const classes = {\n      \"mdc-fab--mini\": this.mini,\n      \"mdc-fab--exited\": this.exited,\n      \"mdc-fab--extended\": this.extended,\n    };\n    const showLabel = this.label !== \"\" && this.extended;\n    return html`\n      <button\n        .ripple=\"${ripple()}\"\n        class=\"mdc-fab ${classMap(classes)}\"\n        ?disabled=\"${this.disabled}\"\n        aria-label=\"${this.label || this.icon}\"\n      >\n        ${showLabel && this.showIconAtEnd ? this.label : \"\"}\n        ${this.icon\n          ? html`\n              <ha-icon .icon=${this.icon}></ha-icon>\n            `\n          : \"\"}\n        ${showLabel && !this.showIconAtEnd ? this.label : \"\"}\n      </button>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-fab\": HaFab;\n  }\n}\n","import { HomeAssistant } from \"../types\";\nimport { Credential } from \"./auth\";\n\nexport const SYSTEM_GROUP_ID_ADMIN = \"system-admin\";\nexport const SYSTEM_GROUP_ID_USER = \"system-users\";\nexport const SYSTEM_GROUP_ID_READ_ONLY = \"system-read-only\";\n\nexport interface User {\n  id: string;\n  name: string;\n  is_owner: boolean;\n  is_active: boolean;\n  system_generated: boolean;\n  group_ids: string[];\n  credentials: Credential[];\n}\n\ninterface UpdateUserParams {\n  name?: User[\"name\"];\n  group_ids?: User[\"group_ids\"];\n}\n\nexport const fetchUsers = async (hass: HomeAssistant) =>\n  hass.callWS<User[]>({\n    type: \"config/auth/list\",\n  });\n\nexport const createUser = async (hass: HomeAssistant, name: string) =>\n  hass.callWS<{ user: User }>({\n    type: \"config/auth/create\",\n    name,\n  });\n\nexport const updateUser = async (\n  hass: HomeAssistant,\n  userId: string,\n  params: UpdateUserParams\n) =>\n  hass.callWS<{ user: User }>({\n    ...params,\n    type: \"config/auth/update\",\n    user_id: userId,\n  });\n\nexport const deleteUser = async (hass: HomeAssistant, userId: string) =>\n  hass.callWS<void>({\n    type: \"config/auth/delete\",\n    user_id: userId,\n  });\n"],"sourceRoot":""}