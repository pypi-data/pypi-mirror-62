{"version":3,"sources":["webpack:///./src/panels/lovelace/cards/hui-gauge-card.ts"],"names":["severityMap","red","green","yellow","normal","customElement","HuiGaugeCard","_LitElement","[object Object]","args","super","_initialize","this","async","Promise","all","__webpack_require__","e","then","bind","document","createElement","entity","property","config","Error","isValidEntityId","_config","Object","assign","min","max","theme","_get","_getPrototypeOf","prototype","call","_setBaseUnit","hass","html","stateObj","states","localize","state","Number","isNaN","_handleClick","styleMap","--base-unit","_baseUnit","transform","_translateTurn","background-color","_computeSeverity","unit","attributes","unit_of_measurement","name","computeStateName","changedProps","hasConfigOrEntityChanged","_updated","classList","add","oldHass","get","oldConfig","themes","applyThemesOnElement","isConnected","baseUnit","_computeBaseUnit","numberValue","sections","severity","sortable","keys","map","sort","a","b","value","Math","clientWidth","fireEvent","entityId","css","LitElement"],"mappings":"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","file":"chunk.3a091bb3e631157cc243.js","sourcesContent":["import {\n  html,\n  LitElement,\n  PropertyValues,\n  TemplateResult,\n  css,\n  CSSResult,\n  property,\n  customElement,\n} from \"lit-element\";\nimport { styleMap } from \"lit-html/directives/style-map\";\n\nimport \"../../../components/ha-card\";\nimport \"../components/hui-warning\";\n\nimport { isValidEntityId } from \"../../../common/entity/valid_entity_id\";\nimport { applyThemesOnElement } from \"../../../common/dom/apply_themes_on_element\";\nimport { computeStateName } from \"../../../common/entity/compute_state_name\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\nimport { LovelaceCard, LovelaceCardEditor } from \"../types\";\nimport { GaugeCardConfig } from \"./types\";\n\nexport const severityMap = {\n  red: \"var(--label-badge-red)\",\n  green: \"var(--label-badge-green)\",\n  yellow: \"var(--label-badge-yellow)\",\n  normal: \"var(--label-badge-blue)\",\n};\n\n@customElement(\"hui-gauge-card\")\nclass HuiGaugeCard extends LitElement implements LovelaceCard {\n  public static async getConfigElement(): Promise<LovelaceCardEditor> {\n    await import(\n      /* webpackChunkName: \"hui-gauge-card-editor\" */ \"../editor/config-elements/hui-gauge-card-editor\"\n    );\n    return document.createElement(\"hui-gauge-card-editor\");\n  }\n  public static getStubConfig(): object {\n    return { entity: \"\" };\n  }\n\n  @property() public hass?: HomeAssistant;\n\n  @property() private _baseUnit = \"50px\";\n  @property() private _config?: GaugeCardConfig;\n\n  private _updated?: boolean;\n\n  public getCardSize(): number {\n    return 2;\n  }\n\n  public setConfig(config: GaugeCardConfig): void {\n    if (!config || !config.entity) {\n      throw new Error(\"Invalid card configuration\");\n    }\n    if (!isValidEntityId(config.entity)) {\n      throw new Error(\"Invalid Entity\");\n    }\n    this._config = { min: 0, max: 100, theme: \"default\", ...config };\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    this._setBaseUnit();\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    const state = Number(stateObj.state);\n\n    if (isNaN(state)) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_non_numeric\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <ha-card\n        @click=\"${this._handleClick}\"\n        tabindex=\"0\"\n        style=${styleMap({\n          \"--base-unit\": this._baseUnit,\n        })}\n      >\n        <div class=\"container\">\n          <div class=\"gauge-a\"></div>\n          <div class=\"gauge-b\"></div>\n          <div\n            class=\"gauge-c\"\n            style=${styleMap({\n              transform: `rotate(${this._translateTurn(state)}turn)`,\n              \"background-color\": this._computeSeverity(state),\n            })}\n          ></div>\n          <div class=\"gauge-data\">\n            <div id=\"percent\">\n              ${stateObj.state}\n              ${this._config.unit ||\n                stateObj.attributes.unit_of_measurement ||\n                \"\"}\n            </div>\n            <div id=\"name\">\n              ${this._config.name || computeStateName(stateObj)}\n            </div>\n          </div>\n        </div>\n      </ha-card>\n    `;\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected firstUpdated(): void {\n    this._updated = true;\n    this._setBaseUnit();\n    this.classList.add(\"init\");\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n    if (!this._config || !this.hass) {\n      return;\n    }\n\n    const oldHass = changedProps.get(\"hass\") as HomeAssistant | undefined;\n    const oldConfig = changedProps.get(\"_config\") as\n      | GaugeCardConfig\n      | undefined;\n\n    if (\n      !oldHass ||\n      !oldConfig ||\n      oldHass.themes !== this.hass.themes ||\n      oldConfig.theme !== this._config.theme\n    ) {\n      applyThemesOnElement(this, this.hass.themes, this._config.theme);\n    }\n  }\n\n  private _setBaseUnit(): void {\n    if (!this.isConnected || !this._updated) {\n      return;\n    }\n    const baseUnit = this._computeBaseUnit();\n    if (baseUnit !== \"0px\") {\n      this._baseUnit = baseUnit;\n    }\n  }\n\n  private _computeSeverity(numberValue: number): string {\n    const sections = this._config!.severity;\n\n    if (!sections) {\n      return severityMap.normal;\n    }\n\n    const sectionsArray = Object.keys(sections);\n    const sortable = sectionsArray.map((severity) => [\n      severity,\n      sections[severity],\n    ]);\n\n    for (const severity of sortable) {\n      if (severityMap[severity[0]] == null || isNaN(severity[1])) {\n        return severityMap.normal;\n      }\n    }\n    sortable.sort((a, b) => a[1] - b[1]);\n\n    if (numberValue >= sortable[0][1] && numberValue < sortable[1][1]) {\n      return severityMap[sortable[0][0]];\n    }\n    if (numberValue >= sortable[1][1] && numberValue < sortable[2][1]) {\n      return severityMap[sortable[1][0]];\n    }\n    if (numberValue >= sortable[2][1]) {\n      return severityMap[sortable[2][0]];\n    }\n    return severityMap.normal;\n  }\n\n  private _translateTurn(value: number): number {\n    const { min, max } = this._config!;\n    const maxTurnValue = Math.min(Math.max(value, min!), max!);\n    return (5 * (maxTurnValue - min!)) / (max! - min!) / 10;\n  }\n\n  private _computeBaseUnit(): string {\n    return this.clientWidth < 200 ? this.clientWidth / 5 + \"px\" : \"50px\";\n  }\n\n  private _handleClick(): void {\n    fireEvent(this, \"hass-more-info\", { entityId: this._config!.entity });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-card {\n        height: calc(var(--base-unit) * 3);\n        position: relative;\n        cursor: pointer;\n      }\n      ha-card:focus {\n        outline: none;\n        background: var(--divider-color);\n      }\n      .container {\n        width: calc(var(--base-unit) * 4);\n        height: calc(var(--base-unit) * 2);\n        position: absolute;\n        top: calc(var(--base-unit) * 1.5);\n        left: 50%;\n        overflow: hidden;\n        text-align: center;\n        transform: translate(-50%, -50%);\n      }\n      .gauge-a {\n        z-index: 1;\n        position: absolute;\n        background-color: var(--primary-background-color);\n        width: calc(var(--base-unit) * 4);\n        height: calc(var(--base-unit) * 2);\n        top: 0%;\n        border-radius: calc(var(--base-unit) * 2.5) calc(var(--base-unit) * 2.5)\n          0px 0px;\n      }\n      .gauge-b {\n        z-index: 3;\n        position: absolute;\n        background-color: var(--paper-card-background-color);\n        width: calc(var(--base-unit) * 2.5);\n        height: calc(var(--base-unit) * 1.25);\n        top: calc(var(--base-unit) * 0.75);\n        margin-left: calc(var(--base-unit) * 0.75);\n        margin-right: auto;\n        border-radius: calc(var(--base-unit) * 2.5) calc(var(--base-unit) * 2.5)\n          0px 0px;\n      }\n      .gauge-c {\n        z-index: 2;\n        position: absolute;\n        background-color: var(--label-badge-blue);\n        width: calc(var(--base-unit) * 4);\n        height: calc(var(--base-unit) * 2);\n        top: calc(var(--base-unit) * 2);\n        margin-left: auto;\n        margin-right: auto;\n        border-radius: 0px 0px calc(var(--base-unit) * 2)\n          calc(var(--base-unit) * 2);\n        transform-origin: center top;\n      }\n      .init .gauge-c {\n        transition: all 1.3s ease-in-out;\n      }\n      .gauge-data {\n        z-index: 4;\n        color: var(--primary-text-color);\n        line-height: calc(var(--base-unit) * 0.3);\n        position: absolute;\n        width: calc(var(--base-unit) * 4);\n        height: calc(var(--base-unit) * 2.1);\n        top: calc(var(--base-unit) * 1.2);\n        margin-left: auto;\n        margin-right: auto;\n      }\n      .init .gauge-data {\n        transition: all 1s ease-out;\n      }\n      .gauge-data #percent {\n        font-size: calc(var(--base-unit) * 0.55);\n      }\n      .gauge-data #name {\n        padding-top: calc(var(--base-unit) * 0.15);\n        font-size: calc(var(--base-unit) * 0.3);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-gauge-card\": HuiGaugeCard;\n  }\n}\n"],"sourceRoot":""}