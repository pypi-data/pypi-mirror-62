{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-markdown-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","configElementStyle","html","_templateObject","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiThemeSelectEditor","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","themes","Object","keys","hass","sort","label","localize","_changed","map","theme","_templateObject2","static","css","_templateObject3","ev","target","fireEvent","LitElement","cardConfigStruct","type","title","content","HuiMarkdownCardEditor","config","_config","_title","_valueChanged","_content","_theme","configValue","assign"],"mappings":"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","file":"chunk.8cdb3cfdd75d1088f92a.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-input/paper-textarea\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { MarkdownCardConfig } from \"../../cards/types\";\n\nimport \"../../components/hui-theme-select-editor\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string?\",\n  content: \"string\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-markdown-card-editor\")\nexport class HuiMarkdownCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: MarkdownCardConfig;\n\n  public setConfig(config: MarkdownCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _content(): string {\n    return this._config!.content || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <paper-textarea\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.markdown.content\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .value=\"${this._content}\"\n          .configValue=\"${\"content\"}\"\n          @value-changed=\"${this._valueChanged}\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          spellcheck=\"false\"\n        ></paper-textarea>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\" && target.configValue !== \"content\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-markdown-card-editor\": HuiMarkdownCardEditor;\n  }\n}\n"],"sourceRoot":""}