{"version":3,"sources":["webpack:///./src/components/dialog/ha-iron-focusables-helper.js","webpack:///./src/components/dialog/ha-paper-dialog.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/lovelace-editor/hui-lovelace-editor.ts","webpack:///./src/panels/lovelace/editor/lovelace-editor/hui-dialog-edit-lovelace.ts"],"names":["HaIronFocusablesHelper","getTabbableNodes","node","result","this","_collectTabbableNodes","IronFocusablesHelper","_sortByTabIndex","nodeType","Node","ELEMENT_NODE","_isVisible","children","element","tabIndex","_normalizedTabIndex","needsSort","push","localName","dom","getDistributedNodes","shadowRoot","root","i","length","paperDialogClass","customElements","get","haTabFixBehaviorImpl","_focusableNodes","HaPaperDialog","_mixinBehaviors","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","mixinBehaviors","define","configElementStyle","html","_templateObject","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiLovelaceEditor","_getPrototypeOf2","_this","_len","args","Array","_key","call","concat","_assertThisInitialized","d","kind","decorators","property","key","value","config","title","_title","_valueChanged","ev","newConfig","target","currentTarget","configValue","Object","assign","fireEvent","LitElement","HuiDialogEditLovelace","hui_dialog_edit_lovelace_decorate","hui_dialog_edit_lovelace_classCallCheck","hui_dialog_edit_lovelace_getPrototypeOf","hui_dialog_edit_lovelace_assertThisInitialized","_saving","hui_dialog_edit_lovelace_inherits","_showDialog","_asyncToGenerator","regeneratorRuntime","mark","_callee","lovelace","_config","lovelaceConfig","wrap","_context","prev","next","_lovelace","_dialog","updateComplete","views","_objectWithoutProperties","open","stop","_x","querySelector","hui_dialog_edit_lovelace_templateObject","hass","localize","_ConfigChanged","_closeDialog","_save","undefined","close","_save2","_callee2","_context2","abrupt","_isConfigChanged","saveConfig","t0","alert","message","finish","detail","_config2","JSON","stringify","static","haStyleDialog","css","_templateObject2"],"mappings":"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","file":"chunk.cccc64d6fb96f4b6f699.js","sourcesContent":["/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n  Fixes issue with not using shadow dom properly in iron-overlay-behavior/icon-focusables-helper.js\n*/\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\n\nimport { IronFocusablesHelper } from \"@polymer/iron-overlay-behavior/iron-focusables-helper.js\";\n\nexport const HaIronFocusablesHelper = {\n  /**\n   * Returns a sorted array of tabbable nodes, including the root node.\n   * It searches the tabbable nodes in the light and shadow dom of the chidren,\n   * sorting the result by tabindex.\n   * @param {!Node} node\n   * @return {!Array<!HTMLElement>}\n   */\n  getTabbableNodes: function(node) {\n    var result = [];\n    // If there is at least one element with tabindex > 0, we need to sort\n    // the final array by tabindex.\n    var needsSortByTabIndex = this._collectTabbableNodes(node, result);\n    if (needsSortByTabIndex) {\n      return IronFocusablesHelper._sortByTabIndex(result);\n    }\n    return result;\n  },\n\n  /**\n   * Searches for nodes that are tabbable and adds them to the `result` array.\n   * Returns if the `result` array needs to be sorted by tabindex.\n   * @param {!Node} node The starting point for the search; added to `result`\n   * if tabbable.\n   * @param {!Array<!HTMLElement>} result\n   * @return {boolean}\n   * @private\n   */\n  _collectTabbableNodes: function(node, result) {\n    // If not an element or not visible, no need to explore children.\n    if (\n      node.nodeType !== Node.ELEMENT_NODE ||\n      !IronFocusablesHelper._isVisible(node)\n    ) {\n      return false;\n    }\n    var element = /** @type {!HTMLElement} */ (node);\n    var tabIndex = IronFocusablesHelper._normalizedTabIndex(element);\n    var needsSort = tabIndex > 0;\n    if (tabIndex >= 0) {\n      result.push(element);\n    }\n\n    // In ShadowDOM v1, tab order is affected by the order of distrubution.\n    // E.g. getTabbableNodes(#root) in ShadowDOM v1 should return [#A, #B];\n    // in ShadowDOM v0 tab order is not affected by the distrubution order,\n    // in fact getTabbableNodes(#root) returns [#B, #A].\n    //  <div id=\"root\">\n    //   <!-- shadow -->\n    //     <slot name=\"a\">\n    //     <slot name=\"b\">\n    //   <!-- /shadow -->\n    //   <input id=\"A\" slot=\"a\">\n    //   <input id=\"B\" slot=\"b\" tabindex=\"1\">\n    //  </div>\n    // TODO(valdrin) support ShadowDOM v1 when upgrading to Polymer v2.0.\n    var children;\n    if (element.localName === \"content\" || element.localName === \"slot\") {\n      children = dom(element).getDistributedNodes();\n    } else {\n      // /////////////////////////\n      // Use shadow root if possible, will check for distributed nodes.\n      // THIS IS THE CHANGED LINE\n      children = dom(element.shadowRoot || element.root || element).children;\n      // /////////////////////////\n    }\n    for (var i = 0; i < children.length; i++) {\n      // Ensure method is always invoked to collect tabbable children.\n      needsSort = this._collectTabbableNodes(children[i], result) || needsSort;\n    }\n    return needsSort;\n  },\n};\n","import \"@polymer/paper-dialog/paper-dialog\";\nimport { mixinBehaviors } from \"@polymer/polymer/lib/legacy/class\";\nimport { HaIronFocusablesHelper } from \"./ha-iron-focusables-helper.js\";\n// tslint:disable-next-line\nimport { PaperDialogElement } from \"@polymer/paper-dialog/paper-dialog\";\n\nconst paperDialogClass = customElements.get(\"paper-dialog\");\n\n// behavior that will override existing iron-overlay-behavior and call the fixed implementation\nconst haTabFixBehaviorImpl = {\n  get _focusableNodes() {\n    return HaIronFocusablesHelper.getTabbableNodes(this);\n  },\n};\n\n// paper-dialog that uses the haTabFixBehaviorImpl behvaior\n// export class HaPaperDialog extends paperDialogClass {}\n// @ts-ignore\nexport class HaPaperDialog\n  extends mixinBehaviors([haTabFixBehaviorImpl], paperDialogClass)\n  implements PaperDialogElement {}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-paper-dialog\": HaPaperDialog;\n  }\n}\ncustomElements.define(\"ha-paper-dialog\", HaPaperDialog);\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\n\nimport { EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"../config-elements/config-elements-style\";\n\nimport { LovelaceConfig } from \"../../../../data/lovelace\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"lovelace-config-changed\": {\n      config: LovelaceConfig;\n    };\n  }\n}\n\n@customElement(\"hui-lovelace-editor\")\nexport class HuiLovelaceEditor extends LitElement {\n  @property() public hass?: HomeAssistant;\n\n  @property() public config?: LovelaceConfig;\n\n  get _title(): string {\n    if (!this.config) {\n      return \"\";\n    }\n    return this.config.title || \"\";\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          label=\"Title\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: Event): void {\n    if (!this.config) {\n      return;\n    }\n\n    const target = ev.currentTarget! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n\n    let newConfig;\n\n    if (target.configValue) {\n      newConfig = {\n        ...this.config,\n        [target.configValue]: target.value,\n      };\n    }\n\n    fireEvent(this, \"lovelace-config-changed\", { config: newConfig });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-lovelace-editor\": HuiLovelaceEditor;\n  }\n}\n","import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  CSSResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport \"../../../../components/dialog/ha-paper-dialog\";\n// tslint:disable-next-line:no-duplicate-imports\nimport { HaPaperDialog } from \"../../../../components/dialog/ha-paper-dialog\";\nimport \"@material/mwc-button\";\nimport \"@polymer/paper-dialog-scrollable/paper-dialog-scrollable\";\n\nimport { haStyleDialog } from \"../../../../resources/styles\";\n\nimport \"./hui-lovelace-editor\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceConfig } from \"../../../../data/lovelace\";\nimport { Lovelace } from \"../../types\";\n\n@customElement(\"hui-dialog-edit-lovelace\")\nexport class HuiDialogEditLovelace extends LitElement {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _lovelace?: Lovelace;\n\n  private _config?: LovelaceConfig;\n\n  private _saving: boolean;\n\n  public constructor() {\n    super();\n    this._saving = false;\n  }\n\n  public async showDialog(lovelace: Lovelace): Promise<void> {\n    this._lovelace = lovelace;\n    if (this._dialog == null) {\n      await this.updateComplete;\n    }\n\n    const { views, ...lovelaceConfig } = this._lovelace!.config;\n    this._config = lovelaceConfig as LovelaceConfig;\n\n    this._dialog.open();\n  }\n\n  private get _dialog(): HaPaperDialog {\n    return this.shadowRoot!.querySelector(\"ha-paper-dialog\")!;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <ha-paper-dialog with-backdrop modal>\n        <h2>\n          ${this.hass!.localize(\n            \"ui.panel.lovelace.editor.edit_lovelace.header\"\n          )}\n        </h2>\n        <paper-dialog-scrollable>\n          ${this.hass!.localize(\n            \"ui.panel.lovelace.editor.edit_lovelace.explanation\"\n          )}\n          <hui-lovelace-editor\n            .hass=\"${this.hass}\"\n            .config=\"${this._config}\"\n            @lovelace-config-changed=\"${this._ConfigChanged}\"\n          ></hui-lovelace-editor\n        ></paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button @click=\"${this._closeDialog}\"\n            >${this.hass!.localize(\"ui.common.cancel\")}</mwc-button\n          >\n          <mwc-button\n            ?disabled=\"${!this._config || this._saving}\"\n            @click=\"${this._save}\"\n          >\n            <paper-spinner\n              ?active=\"${this._saving}\"\n              alt=\"Saving\"\n            ></paper-spinner>\n            ${this.hass!.localize(\"ui.common.save\")}</mwc-button\n          >\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  private _closeDialog(): void {\n    this._config = undefined;\n    this._dialog.close();\n  }\n\n  private async _save(): Promise<void> {\n    if (!this._config) {\n      return;\n    }\n    if (!this._isConfigChanged()) {\n      this._closeDialog();\n      return;\n    }\n\n    this._saving = true;\n    const lovelace = this._lovelace!;\n\n    const config: LovelaceConfig = {\n      ...lovelace.config,\n      ...this._config,\n    };\n\n    try {\n      await lovelace.saveConfig(config);\n      this._closeDialog();\n    } catch (err) {\n      alert(`Saving failed: ${err.message}`);\n    } finally {\n      this._saving = false;\n    }\n  }\n\n  private _ConfigChanged(ev: CustomEvent): void {\n    if (ev.detail && ev.detail.config) {\n      this._config = ev.detail.config;\n    }\n  }\n\n  private _isConfigChanged(): boolean {\n    const { views, ...lovelaceConfig } = this._lovelace!.config;\n    return JSON.stringify(this._config) !== JSON.stringify(lovelaceConfig);\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-paper-dialog {\n            max-height: 100%;\n            height: 100%;\n          }\n        }\n        @media all and (min-width: 660px) {\n          ha-paper-dialog {\n            width: 650px;\n          }\n        }\n        ha-paper-dialog {\n          max-width: 650px;\n        }\n        mwc-button paper-spinner {\n          width: 14px;\n          height: 14px;\n          margin-right: 20px;\n        }\n        paper-spinner {\n          display: none;\n        }\n        paper-spinner[active] {\n          display: block;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-edit-lovelace\": HuiDialogEditLovelace;\n  }\n}\n"],"sourceRoot":""}