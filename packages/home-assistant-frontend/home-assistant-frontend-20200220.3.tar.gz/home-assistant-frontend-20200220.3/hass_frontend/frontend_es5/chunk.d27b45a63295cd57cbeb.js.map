{"version":3,"sources":["webpack:///./src/components/ha-slider.js","webpack:///./src/data/input_text.ts","webpack:///./src/panels/lovelace/entity-rows/hui-input-number-entity-row.ts"],"names":["subTemplate","PaperSliderClass","customElements","get","HaSlider","template","cloneNode","content","querySelector","appendChild","document","createTextNode","value","this","step","parseFloat","numSteps","Math","round","min","stepStr","toString","stepPointAt","indexOf","precision","pow","length","define","__webpack_require__","d","__webpack_exports__","setValue","hass","entity","callService","split","entity_id","customElement","HuiInputNumberEntityRow","property","config","Error","_config","_get","_getPrototypeOf","prototype","call","_updated","_loaded","_initialLoad","isConnected","changedProps","hasConfigOrEntityChanged","html","_templateObject","stateObj","states","_templateObject3","attributes","mode","_templateObject4","computeRTLDirection","Number","max","state","_selectedValueChanged","unit_of_measurement","_templateObject5","_templateObject2","localize","css","_templateObject6","_callee","element","regeneratorRuntime","wrap","_context","prev","next","updateComplete","shadowRoot","parentElement","abrupt","hidden","clientWidth","stop","getElementById","_inputElement","LitElement"],"mappings":"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","file":"chunk.d27b45a63295cd57cbeb.js","sourcesContent":["import \"@polymer/paper-slider\";\n\nconst PaperSliderClass = customElements.get(\"paper-slider\");\nlet subTemplate;\n\nclass HaSlider extends PaperSliderClass {\n  static get template() {\n    if (!subTemplate) {\n      subTemplate = PaperSliderClass.template.cloneNode(true);\n\n      const superStyle = subTemplate.content.querySelector(\"style\");\n\n      // append style to add mirroring of pin in RTL\n      superStyle.appendChild(\n        document.createTextNode(`\n          :host([dir=\"rtl\"]) #sliderContainer.pin.expand > .slider-knob > .slider-knob-inner::after {\n            -webkit-transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n            transform: scale(1) translate(0, -17px) scaleX(-1) !important;\n            }\n        `)\n      );\n    }\n    return subTemplate;\n  }\n\n  _calcStep(value) {\n    if (!this.step) {\n      return parseFloat(value);\n    }\n\n    const numSteps = Math.round((value - this.min) / this.step);\n    const stepStr = this.step.toString();\n    const stepPointAt = stepStr.indexOf(\".\");\n    if (stepPointAt !== -1) {\n      /**\n       * For small values of this.step, if we calculate the step using\n       * For non-integer values of this.step, if we calculate the step using\n       * `Math.round(value / step) * step` we may hit a precision point issue\n       * eg. 0.1 * 0.2 =  0.020000000000000004\n       * http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\n       *\n       * as a work around we can round with the decimal precision of `step`\n       */\n      const precision = 10 ** (stepStr.length - stepPointAt - 1);\n      return (\n        Math.round((numSteps * this.step + this.min) * precision) / precision\n      );\n    }\n\n    return numSteps * this.step + this.min;\n  }\n}\ncustomElements.define(\"ha-slider\", HaSlider);\n","import { HomeAssistant } from \"../types\";\n\nexport const setValue = (hass: HomeAssistant, entity: string, value: string) =>\n  hass.callService(entity.split(\".\", 1)[0], \"set_value\", {\n    value,\n    entity_id: entity,\n  });\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  property,\n  customElement,\n  css,\n  CSSResult,\n  PropertyValues,\n} from \"lit-element\";\n\nimport \"../components/hui-generic-entity-row\";\nimport \"../../../components/ha-slider\";\nimport \"../components/hui-warning\";\n\nimport { computeRTLDirection } from \"../../../common/util/compute_rtl\";\nimport { LovelaceRow, EntityConfig } from \"./types\";\nimport { HomeAssistant } from \"../../../types\";\nimport { setValue } from \"../../../data/input_text\";\nimport { hasConfigOrEntityChanged } from \"../common/has-changed\";\n\n@customElement(\"hui-input-number-entity-row\")\nclass HuiInputNumberEntityRow extends LitElement implements LovelaceRow {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: EntityConfig;\n\n  private _loaded?: boolean;\n\n  private _updated?: boolean;\n\n  public setConfig(config: EntityConfig): void {\n    if (!config) {\n      throw new Error(\"Configuration error\");\n    }\n    this._config = config;\n  }\n\n  public connectedCallback(): void {\n    super.connectedCallback();\n    if (this._updated && !this._loaded) {\n      this._initialLoad();\n    }\n  }\n\n  protected firstUpdated(): void {\n    this._updated = true;\n    if (this.isConnected && !this._loaded) {\n      this._initialLoad();\n    }\n  }\n\n  protected shouldUpdate(changedProps: PropertyValues): boolean {\n    return hasConfigOrEntityChanged(this, changedProps);\n  }\n\n  protected render(): TemplateResult {\n    if (!this._config || !this.hass) {\n      return html``;\n    }\n\n    const stateObj = this.hass.states[this._config.entity];\n\n    if (!stateObj) {\n      return html`\n        <hui-warning\n          >${this.hass.localize(\n            \"ui.panel.lovelace.warning.entity_not_found\",\n            \"entity\",\n            this._config.entity\n          )}</hui-warning\n        >\n      `;\n    }\n\n    return html`\n      <hui-generic-entity-row .hass=\"${this.hass}\" .config=\"${this._config}\">\n        <div>\n          ${stateObj.attributes.mode === \"slider\"\n            ? html`\n                <div class=\"flex\">\n                  <ha-slider\n                    .dir=\"${computeRTLDirection(this.hass!)}\"\n                    .step=\"${Number(stateObj.attributes.step)}\"\n                    .min=\"${Number(stateObj.attributes.min)}\"\n                    .max=\"${Number(stateObj.attributes.max)}\"\n                    .value=\"${Number(stateObj.state)}\"\n                    pin\n                    @change=\"${this._selectedValueChanged}\"\n                    ignore-bar-touch\n                    id=\"input\"\n                  ></ha-slider>\n                  <span class=\"state\">\n                    ${Number(stateObj.state)}\n                    ${stateObj.attributes.unit_of_measurement}\n                  </span>\n                </div>\n              `\n            : html`\n                <paper-input\n                  no-label-float\n                  auto-validate\n                  .pattern=\"[0-9]+([\\\\.][0-9]+)?\"\n                  .step=\"${Number(stateObj.attributes.step)}\"\n                  .min=\"${Number(stateObj.attributes.min)}\"\n                  .max=\"${Number(stateObj.attributes.max)}\"\n                  .value=\"${Number(stateObj.state)}\"\n                  type=\"number\"\n                  @change=\"${this._selectedValueChanged}\"\n                  id=\"input\"\n                ></paper-input>\n              `}\n        </div>\n      </hui-generic-entity-row>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .flex {\n        display: flex;\n        align-items: center;\n      }\n      .state {\n        min-width: 45px;\n        text-align: end;\n      }\n      paper-input {\n        text-align: end;\n      }\n    `;\n  }\n\n  private async _initialLoad(): Promise<void> {\n    this._loaded = true;\n    await this.updateComplete;\n    const element = this.shadowRoot!.querySelector(\".state\") as HTMLElement;\n\n    if (!element || !this.parentElement) {\n      return;\n    }\n\n    element.hidden = this.parentElement.clientWidth <= 350;\n  }\n\n  private get _inputElement(): { value: string } {\n    // linter recommended the following syntax\n    return (this.shadowRoot!.getElementById(\"input\") as unknown) as {\n      value: string;\n    };\n  }\n\n  private _selectedValueChanged(): void {\n    const element = this._inputElement;\n    const stateObj = this.hass!.states[this._config!.entity];\n\n    if (element.value !== stateObj.state) {\n      setValue(this.hass!, stateObj.entity_id, element.value!);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-input-number-entity-row\": HuiInputNumberEntityRow;\n  }\n}\n"],"sourceRoot":""}