{"version":3,"sources":["webpack:///./src/components/ha-card.ts","webpack:///./src/mixins/localize-mixin.js","webpack:///./src/mixins/events-mixin.js","webpack:///./src/dialogs/generic/show-dialog-box.ts","webpack:///./src/panels/config/ha-config-section.ts","webpack:///./src/layouts/hass-tabs-subpage.ts","webpack:///./src/components/buttons/ha-call-service-button.js","webpack:///./src/components/buttons/ha-progress-button.js","webpack:///./src/panels/config/server_control/ha-config-section-server-control.js","webpack:///./src/panels/config/server_control/ha-config-server-control.js"],"names":["HaCard","_LitElement","[object Object]","args","super","_initialize","this","property","css","html","header","LitElement","customElements","define","_polymer_polymer_lib_utils_mixin__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","dedupingMixin","superClass","properties","hass","Object","localize","type","Function","computed","__computeLocalize","d","__webpack_exports__","EventsMixin","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_1__","fire","detail","options","fireEvent","node","showAlertDialog","showConfirmationDialog","showPromptDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadGenericDialog","Promise","all","e","then","bind","showDialogHelper","element","dialogParams","extra","resolve","origCancel","cancel","origConfirm","confirm","dialogTag","dialogImport","assign","prompt","out","confirmation","_decorate","customElement","F","kind","decorators","key","value","classMap","narrow","isWide","vertical","horizontal","static","HassTabsSubpage","String","attribute","Boolean","reflect","memoizeOne","tabs","activeTab","showAdvanced","_components","_language","filter","page","component","core","isComponentLoaded","advancedOnly","map","index","active","_tabTapped","path","icon","translationKey","name","changedProperties","_get","_getPrototypeOf","prototype","call","has","_activeTab","findIndex","tab","route","prefix","includes","_this$hass$userData","_getTabs","userData","config","components","language","hassio","_backTapped","length","bottom-bar","ev","navigate","currentTarget","backPath","backCallback","history","back","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_0__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_1__","_mixins_events_mixin__WEBPACK_IMPORTED_MODULE_3__","_dialogs_generic_show_dialog_box__WEBPACK_IMPORTED_MODULE_4__","PolymerElement","template","progress","domain","service","serviceData","callService","el","eventData","$","actionSuccess","success","actionError","buttonTapped","text","_polymer_polymer_lib_utils_html_tag__WEBPACK_IMPORTED_MODULE_2__","_polymer_polymer_polymer_element__WEBPACK_IMPORTED_MODULE_3__","disabled","tempClass","className","classList","container","add","setTimeout","remove","ready","addEventListener","stopPropagation","computeDisabled","LocalizeMixin","validating","isValid","validateLog","groupLoaded","automationLoaded","scriptLoaded","sceneLoaded","personLoaded","validateConfig","callApi","result","errors","_computeTabs","configSections","general","computeClasses"],"mappings":"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","file":"chunk.eb457a7bb8271ab27d62.js","sourcesContent":["import {\n  css,\n  CSSResult,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\n\nclass HaCard extends LitElement {\n  @property() public header?: string;\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        background: var(\n          --ha-card-background,\n          var(--paper-card-background-color, white)\n        );\n        border-radius: var(--ha-card-border-radius, 2px);\n        box-shadow: var(\n          --ha-card-box-shadow,\n          0 2px 2px 0 rgba(0, 0, 0, 0.14),\n          0 1px 5px 0 rgba(0, 0, 0, 0.12),\n          0 3px 1px -2px rgba(0, 0, 0, 0.2)\n        );\n        color: var(--primary-text-color);\n        display: block;\n        transition: all 0.3s ease-out;\n        position: relative;\n      }\n\n      .card-header,\n      :host ::slotted(.card-header) {\n        color: var(--ha-card-header-color, --primary-text-color);\n        font-family: var(--ha-card-header-font-family, inherit);\n        font-size: var(--ha-card-header-font-size, 24px);\n        letter-spacing: -0.012em;\n        line-height: 32px;\n        padding: 24px 16px 16px;\n        display: block;\n      }\n\n      :host ::slotted(.card-content:not(:first-child)),\n      slot:not(:first-child)::slotted(.card-content) {\n        padding-top: 0px;\n        margin-top: -8px;\n      }\n\n      :host ::slotted(.card-content) {\n        padding: 16px;\n      }\n\n      :host ::slotted(.card-actions) {\n        border-top: 1px solid #e8e8e8;\n        padding: 5px 16px;\n      }\n    `;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      ${this.header\n        ? html`\n            <div class=\"card-header\">${this.header}</div>\n          `\n        : html``}\n      <slot></slot>\n    `;\n  }\n}\n\ncustomElements.define(\"ha-card\", HaCard);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n/**\n * Polymer Mixin to enable a localize function powered by language/resources from hass object.\n *\n * @polymerMixin\n */\nexport default dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      static get properties() {\n        return {\n          hass: Object,\n\n          /**\n           * Translates a string to the current `language`. Any parameters to the\n           * string should be passed in order, as follows:\n           * `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`\n           */\n          localize: {\n            type: Function,\n            computed: \"__computeLocalize(hass.localize)\",\n          },\n        };\n      }\n\n      __computeLocalize(localize) {\n        return localize;\n      }\n    }\n);\n","import { dedupingMixin } from \"@polymer/polymer/lib/utils/mixin\";\n\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n// Polymer legacy event helpers used courtesy of the Polymer project.\n//\n// Copyright (c) 2017 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n//    * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n//    * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n//    * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* @polymerMixin */\nexport const EventsMixin = dedupingMixin(\n  (superClass) =>\n    class extends superClass {\n      /**\n   * Dispatches a custom event with an optional detail value.\n   *\n   * @param {string} type Name of event type.\n   * @param {*=} detail Detail value containing event-specific\n   *   payload.\n   * @param {{ bubbles: (boolean|undefined),\n               cancelable: (boolean|undefined),\n                composed: (boolean|undefined) }=}\n    *  options Object specifying options.  These may include:\n    *  `bubbles` (boolean, defaults to `true`),\n    *  `cancelable` (boolean, defaults to false), and\n    *  `node` on which to fire the event (HTMLElement, defaults to `this`).\n    * @return {Event} The new event that was fired.\n    */\n      fire(type, detail, options) {\n        options = options || {};\n        return fireEvent(options.node || this, type, detail, options);\n      }\n    }\n);\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\ninterface BaseDialogParams {\n  confirmText?: string;\n  text?: string;\n  title?: string;\n}\n\nexport interface AlertDialogParams extends BaseDialogParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n}\n\nexport interface PromptDialogParams extends BaseDialogParams {\n  inputLabel?: string;\n  inputType?: string;\n  defaultValue?: string;\n  confirm?: (out?: string) => void;\n}\n\nexport interface DialogParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogParams,\n  extra?: {\n    confirmation?: DialogParams[\"confirmation\"];\n    prompt?: DialogParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { confirmation: true }) as Promise<\n    boolean\n  >;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n","import { customElement, LitElement, html, css, property } from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends LitElement {\n  @property() public isWide: boolean = false;\n\n  protected render() {\n    return html`\n      <div\n        class=\"content ${classMap({\n          narrow: !this.isWide,\n        })}\"\n      >\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div\n          class=\"together layout ${classMap({\n            narrow: !this.isWide,\n            vertical: !this.isWide,\n            horizontal: this.isWide,\n          })}\"\n        >\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n      }\n\n      .layout {\n        display: flex;\n      }\n\n      .horizontal {\n        flex-direction: row;\n      }\n\n      .vertical {\n        flex-direction: column;\n      }\n\n      .flex-auto {\n        flex: 1 1 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 32px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        max-width: 400px;\n        margin-right: 40px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n\n      .narrow.content {\n        max-width: 640px;\n      }\n      .narrow .together {\n        margin-top: 20px;\n      }\n      .narrow .intro {\n        padding-bottom: 20px;\n        margin-right: 0;\n        max-width: 500px;\n      }\n    `;\n  }\n}\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  customElement,\n  css,\n  CSSResult,\n  PropertyValues,\n} from \"lit-element\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-paper-icon-button-arrow-prev\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { Route, HomeAssistant } from \"../types\";\nimport { navigate } from \"../common/navigate\";\nimport \"@material/mwc-ripple\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport memoizeOne from \"memoize-one\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string;\n  name?: string;\n  core?: boolean;\n  advancedOnly?: boolean;\n  icon?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n  @property() public backCallback?: () => void;\n  @property({ type: Boolean }) public hassio = false;\n  @property() public route!: Route;\n  @property() public tabs!: PageNavigation[];\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n  @property() private _activeTab: number = -1;\n\n  private _getTabs = memoizeOne(\n    (\n      tabs: PageNavigation[],\n      activeTab: number,\n      showAdvanced: boolean | undefined,\n      _components,\n      _language\n    ) => {\n      const shownTabs = tabs.filter(\n        (page) =>\n          (!page.component ||\n            page.core ||\n            isComponentLoaded(this.hass, page.component)) &&\n          (!page.advancedOnly || showAdvanced)\n      );\n\n      return shownTabs.map(\n        (page, index) => html`\n          <div\n            class=\"tab ${classMap({\n              active: index === activeTab,\n            })}\"\n            @click=${this._tabTapped}\n            .path=${page.path}\n          >\n            ${this.narrow\n              ? html`\n                  <ha-icon .icon=${page.icon}></ha-icon>\n                `\n              : \"\"}\n            ${!this.narrow || index === activeTab\n              ? html`\n                  <span class=\"name\"\n                    >${page.translationKey\n                      ? this.hass.localize(page.translationKey)\n                      : name}</span\n                  >\n                `\n              : \"\"}\n            <mwc-ripple></mwc-ripple>\n          </div>\n        `\n      );\n    }\n  );\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.findIndex((tab) =>\n        this.route.prefix.includes(tab.path)\n      );\n    }\n  }\n\n  protected render(): TemplateResult {\n    const tabs = this._getTabs(\n      this.tabs,\n      this._activeTab,\n      this.hass.userData?.showAdvanced,\n      this.hass.config.components,\n      this.hass.language\n    );\n\n    return html`\n      <div class=\"toolbar\">\n        <ha-paper-icon-button-arrow-prev\n          aria-label=\"Back\"\n          .hassio=${this.hassio}\n          @click=${this._backTapped}\n        ></ha-paper-icon-button-arrow-prev>\n        ${this.narrow\n          ? html`\n              <div main-title><slot name=\"header\"></slot></div>\n            `\n          : \"\"}\n        ${tabs.length > 1 || !this.narrow\n          ? html`\n              <div id=\"tabbar\" class=${classMap({ \"bottom-bar\": this.narrow })}>\n                ${tabs}\n              </div>\n            `\n          : \"\"}\n        <div id=\"toolbar-icon\">\n          <slot name=\"toolbar-icon\"></slot>\n        </div>\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private _tabTapped(ev: MouseEvent): void {\n    navigate(this, (ev.currentTarget as any).path, true);\n  }\n\n  private _backTapped(): void {\n    if (this.backPath) {\n      navigate(this, this.backPath);\n      return;\n    }\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: 65px;\n        background-color: var(--sidebar-background-color);\n        font-weight: 400;\n        color: var(--sidebar-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        padding: 0 16px;\n        box-sizing: border-box;\n      }\n\n      #tabbar {\n        display: flex;\n        font-size: 14px;\n      }\n\n      #tabbar.bottom-bar {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        padding: 0 16px;\n        box-sizing: border-box;\n        background-color: var(--sidebar-background-color);\n        border-top: 1px solid var(--divider-color);\n        justify-content: space-between;\n        z-index: 1;\n        font-size: 12px;\n        width: 100%;\n      }\n\n      #tabbar:not(.bottom-bar) {\n        margin: auto;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, 0);\n      }\n\n      .tab {\n        padding: 0 32px;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n        height: 64px;\n        cursor: pointer;\n      }\n\n      .name {\n        white-space: nowrap;\n      }\n\n      .tab.active {\n        color: var(--primary-color);\n      }\n\n      #tabbar:not(.bottom-bar) .tab.active {\n        border-bottom: 2px solid var(--primary-color);\n      }\n\n      .bottom-bar .tab {\n        padding: 0 16px;\n        width: 20%;\n        min-width: 0;\n      }\n\n      ha-menu-button,\n      ha-paper-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        pointer-events: auto;\n        color: var(--sidebar-icon-color);\n      }\n\n      [main-title] {\n        margin: 0 0 0 24px;\n        line-height: 20px;\n        flex-grow: 1;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 65px);\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      #toolbar-icon {\n        position: absolute;\n        right: 16px;\n      }\n\n      :host([narrow]) .content {\n        height: calc(100% - 128px);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"./ha-progress-button\";\nimport { EventsMixin } from \"../../mixins/events-mixin\";\nimport { showConfirmationDialog } from \"../../dialogs/generic/show-dialog-box\";\n\n/*\n * @appliesMixin EventsMixin\n */\nclass HaCallServiceButton extends EventsMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <ha-progress-button\n        id=\"progress\"\n        progress=\"[[progress]]\"\n        on-click=\"buttonTapped\"\n        tabindex=\"0\"\n        ><slot></slot\n      ></ha-progress-button>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      domain: {\n        type: String,\n      },\n\n      service: {\n        type: String,\n      },\n\n      serviceData: {\n        type: Object,\n        value: {},\n      },\n\n      confirmation: {\n        type: String,\n      },\n    };\n  }\n\n  callService() {\n    this.progress = true;\n    var el = this;\n    var eventData = {\n      domain: this.domain,\n      service: this.service,\n      serviceData: this.serviceData,\n    };\n\n    this.hass\n      .callService(this.domain, this.service, this.serviceData)\n      .then(\n        function() {\n          el.progress = false;\n          el.$.progress.actionSuccess();\n          eventData.success = true;\n        },\n        function() {\n          el.progress = false;\n          el.$.progress.actionError();\n          eventData.success = false;\n        }\n      )\n      .then(function() {\n        el.fire(\"hass-service-called\", eventData);\n      });\n  }\n\n  buttonTapped() {\n    if (this.confirmation) {\n      showConfirmationDialog(this, {\n        text: this.confirmation,\n        confirm: () => this.callService(),\n      });\n    } else {\n      this.callService();\n    }\n  }\n}\n\ncustomElements.define(\"ha-call-service-button\", HaCallServiceButton);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-spinner/paper-spinner\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nclass HaProgressButton extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        .container {\n          position: relative;\n          display: inline-block;\n        }\n\n        mwc-button {\n          transition: all 1s;\n        }\n\n        .success mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-green-500);\n          transition: none;\n        }\n\n        .error mwc-button {\n          --mdc-theme-primary: white;\n          background-color: var(--google-red-500);\n          transition: none;\n        }\n\n        .progress {\n          @apply --layout;\n          @apply --layout-center-center;\n          position: absolute;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n        }\n      </style>\n      <div class=\"container\" id=\"container\">\n        <mwc-button\n          id=\"button\"\n          disabled=\"[[computeDisabled(disabled, progress)]]\"\n          on-click=\"buttonTapped\"\n        >\n          <slot></slot>\n        </mwc-button>\n        <template is=\"dom-if\" if=\"[[progress]]\">\n          <div class=\"progress\"><paper-spinner active=\"\"></paper-spinner></div>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      progress: {\n        type: Boolean,\n        value: false,\n      },\n\n      disabled: {\n        type: Boolean,\n        value: false,\n      },\n    };\n  }\n\n  tempClass(className) {\n    var classList = this.$.container.classList;\n    classList.add(className);\n    setTimeout(() => {\n      classList.remove(className);\n    }, 1000);\n  }\n\n  ready() {\n    super.ready();\n    this.addEventListener(\"click\", (ev) => this.buttonTapped(ev));\n  }\n\n  buttonTapped(ev) {\n    if (this.progress) ev.stopPropagation();\n  }\n\n  actionSuccess() {\n    this.tempClass(\"success\");\n  }\n\n  actionError() {\n    this.tempClass(\"error\");\n  }\n\n  computeDisabled(disabled, progress) {\n    return disabled || progress;\n  }\n}\n\ncustomElements.define(\"ha-progress-button\", HaProgressButton);\n","import \"@material/mwc-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../components/ha-card\";\nimport \"../../../components/buttons/ha-call-service-button\";\nimport \"../../../resources/ha-style\";\n\nimport \"../ha-config-section\";\n\nimport { isComponentLoaded } from \"../../../common/config/is_component_loaded\";\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigSectionServerControl extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .validate-container {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          height: 140px;\n        }\n\n        .validate-result {\n          color: var(--google-green-500);\n          font-weight: 500;\n          margin-bottom: 1em;\n        }\n\n        .config-invalid {\n          margin: 1em 0;\n        }\n\n        .config-invalid .text {\n          color: var(--google-red-500);\n          font-weight: 500;\n        }\n\n        .config-invalid mwc-button {\n          float: right;\n        }\n\n        .validate-log {\n          white-space: pre-wrap;\n          direction: ltr;\n        }\n      </style>\n      <ha-config-section is-wide=\"[[isWide]]\">\n        <span slot=\"header\"\n          >[[localize('ui.panel.config.server_control.caption')]]</span\n        >\n        <span slot=\"introduction\"\n          >[[localize('ui.panel.config.server_control.description')]]</span\n        >\n\n        <template is=\"dom-if\" if=\"[[showAdvanced]]\">\n          <ha-card\n            header=\"[[localize('ui.panel.config.server_control.section.validation.heading')]]\"\n          >\n            <div class=\"card-content\">\n              [[localize('ui.panel.config.server_control.section.validation.introduction')]]\n              <template is=\"dom-if\" if=\"[[!validateLog]]\">\n                <div class=\"validate-container\">\n                  <template is=\"dom-if\" if=\"[[!validating]]\">\n                    <template is=\"dom-if\" if=\"[[isValid]]\">\n                      <div class=\"validate-result\" id=\"result\">\n                        [[localize('ui.panel.config.server_control.section.validation.valid')]]\n                      </div>\n                    </template>\n                    <mwc-button raised=\"\" on-click=\"validateConfig\">\n                      [[localize('ui.panel.config.server_control.section.validation.check_config')]]\n                    </mwc-button>\n                  </template>\n                  <template is=\"dom-if\" if=\"[[validating]]\">\n                    <paper-spinner active=\"\"></paper-spinner>\n                  </template>\n                </div>\n              </template>\n              <template is=\"dom-if\" if=\"[[validateLog]]\">\n                <div class=\"config-invalid\">\n                  <span class=\"text\">\n                    [[localize('ui.panel.config.server_control.section.validation.invalid')]]\n                  </span>\n                  <mwc-button raised=\"\" on-click=\"validateConfig\">\n                    [[localize('ui.panel.config.server_control.section.validation.check_config')]]\n                  </mwc-button>\n                </div>\n                <div id=\"configLog\" class=\"validate-log\">[[validateLog]]</div>\n              </template>\n            </div>\n          </ha-card>\n\n          <ha-card\n            header=\"[[localize('ui.panel.config.server_control.section.reloading.heading')]]\"\n          >\n            <div class=\"card-content\">\n              [[localize('ui.panel.config.server_control.section.reloading.introduction')]]\n            </div>\n            <div class=\"card-actions\">\n              <ha-call-service-button\n                hass=\"[[hass]]\"\n                domain=\"homeassistant\"\n                service=\"reload_core_config\"\n                >[[localize('ui.panel.config.server_control.section.reloading.core')]]\n              </ha-call-service-button>\n            </div>\n            <template is=\"dom-if\" if=\"[[groupLoaded(hass)]]\">\n              <div class=\"card-actions\">\n                <ha-call-service-button\n                  hass=\"[[hass]]\"\n                  domain=\"group\"\n                  service=\"reload\"\n                  >[[localize('ui.panel.config.server_control.section.reloading.group')]]\n                </ha-call-service-button>\n              </div>\n            </template>\n            <template is=\"dom-if\" if=\"[[automationLoaded(hass)]]\">\n              <div class=\"card-actions\">\n                <ha-call-service-button\n                  hass=\"[[hass]]\"\n                  domain=\"automation\"\n                  service=\"reload\"\n                  >[[localize('ui.panel.config.server_control.section.reloading.automation')]]\n                </ha-call-service-button>\n              </div>\n            </template>\n            <template is=\"dom-if\" if=\"[[scriptLoaded(hass)]]\">\n              <div class=\"card-actions\">\n                <ha-call-service-button\n                  hass=\"[[hass]]\"\n                  domain=\"script\"\n                  service=\"reload\"\n                  >[[localize('ui.panel.config.server_control.section.reloading.script')]]\n                </ha-call-service-button>\n              </div>\n            </template>\n            <template is=\"dom-if\" if=\"[[sceneLoaded(hass)]]\">\n              <div class=\"card-actions\">\n                <ha-call-service-button\n                  hass=\"[[hass]]\"\n                  domain=\"scene\"\n                  service=\"reload\"\n                  >[[localize('ui.panel.config.server_control.section.reloading.scene')]]\n                </ha-call-service-button>\n              </div>\n            </template>\n            <template is=\"dom-if\" if=\"[[personLoaded(hass)]]\">\n              <div class=\"card-actions\">\n                <ha-call-service-button\n                  hass=\"[[hass]]\"\n                  domain=\"person\"\n                  service=\"reload\"\n                  >[[localize('ui.panel.config.server_control.section.reloading.person')]]\n                </ha-call-service-button>\n              </div>\n            </template>\n            <div class=\"card-actions\">\n              <ha-call-service-button\n                hass=\"[[hass]]\"\n                domain=\"zone\"\n                service=\"reload\"\n                >[[localize('ui.panel.config.server_control.section.reloading.zone')]]\n              </ha-call-service-button>\n            </div>\n          </ha-card>\n        </template>\n        <ha-card\n          header=\"[[localize('ui.panel.config.server_control.section.server_management.heading')]]\"\n        >\n          <div class=\"card-content\">\n            [[localize('ui.panel.config.server_control.section.server_management.introduction')]]\n          </div>\n          <div class=\"card-actions warning\">\n            <ha-call-service-button\n              class=\"warning\"\n              hass=\"[[hass]]\"\n              domain=\"homeassistant\"\n              service=\"restart\"\n              confirmation=\"[[localize('ui.panel.config.server_control.section.server_management.confirm_restart')]]\"\n              >[[localize('ui.panel.config.server_control.section.server_management.restart')]]\n            </ha-call-service-button>\n            <ha-call-service-button\n              class=\"warning\"\n              hass=\"[[hass]]\"\n              domain=\"homeassistant\"\n              service=\"stop\"\n              confirmation=\"[[localize('ui.panel.config.server_control.section.server_management.confirm_stop')]]\"\n              >[[localize('ui.panel.config.server_control.section.server_management.stop')]]\n            </ha-call-service-button>\n          </div>\n        </ha-card>\n      </ha-config-section>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: {\n        type: Object,\n      },\n\n      isWide: {\n        type: Boolean,\n        value: false,\n      },\n\n      validating: {\n        type: Boolean,\n        value: false,\n      },\n\n      isValid: {\n        type: Boolean,\n        value: null,\n      },\n\n      validateLog: {\n        type: String,\n        value: \"\",\n      },\n\n      showAdvanced: Boolean,\n    };\n  }\n\n  groupLoaded(hass) {\n    return isComponentLoaded(hass, \"group\");\n  }\n\n  automationLoaded(hass) {\n    return isComponentLoaded(hass, \"automation\");\n  }\n\n  scriptLoaded(hass) {\n    return isComponentLoaded(hass, \"script\");\n  }\n\n  sceneLoaded(hass) {\n    return isComponentLoaded(hass, \"scene\");\n  }\n\n  personLoaded(hass) {\n    return isComponentLoaded(hass, \"person\");\n  }\n\n  validateConfig() {\n    this.validating = true;\n    this.validateLog = \"\";\n    this.isValid = null;\n\n    this.hass.callApi(\"POST\", \"config/core/check_config\").then((result) => {\n      this.validating = false;\n      this.isValid = result.result === \"valid\";\n\n      if (!this.isValid) {\n        this.validateLog = result.errors;\n      }\n    });\n  }\n}\n\ncustomElements.define(\n  \"ha-config-section-server-control\",\n  HaConfigSectionServerControl\n);\n","import \"@polymer/app-layout/app-header/app-header\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../../../layouts/hass-tabs-subpage\";\nimport \"../../../resources/ha-style\";\n\nimport \"./ha-config-section-server-control\";\n\nimport LocalizeMixin from \"../../../mixins/localize-mixin\";\nimport { configSections } from \"../ha-panel-config\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaConfigServerControl extends LocalizeMixin(PolymerElement) {\n  static get template() {\n    return html`\n      <style include=\"iron-flex ha-style\">\n        .content {\n          padding-bottom: 32px;\n        }\n\n        .border {\n          margin: 32px auto 0;\n          border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n          max-width: 1040px;\n        }\n\n        .narrow .border {\n          max-width: 640px;\n        }\n      </style>\n\n      <hass-tabs-subpage\n        hass=\"[[hass]]\"\n        narrow=\"[[narrow]]\"\n        route=\"[[route]]\"\n        back-path=\"/config\"\n        tabs=\"[[_computeTabs()]]\"\n        show-advanced=\"[[showAdvanced]]\"\n      >\n        <div class$=\"[[computeClasses(isWide)]]\">\n          <ha-config-section-server-control\n            is-wide=\"[[isWide]]\"\n            show-advanced=\"[[showAdvanced]]\"\n            hass=\"[[hass]]\"\n          ></ha-config-section-server-control>\n        </div>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      isWide: Boolean,\n      narrow: Boolean,\n      route: Object,\n      showAdvanced: Boolean,\n    };\n  }\n\n  _computeTabs() {\n    return configSections.general;\n  }\n\n  computeClasses(isWide) {\n    return isWide ? \"content\" : \"content narrow\";\n  }\n}\n\ncustomElements.define(\"ha-config-server-control\", HaConfigServerControl);\n"],"sourceRoot":""}