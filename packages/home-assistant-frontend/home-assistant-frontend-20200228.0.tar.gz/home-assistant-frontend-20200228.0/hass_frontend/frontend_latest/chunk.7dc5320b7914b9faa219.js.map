{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-behavior.js","webpack:///./node_modules/@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js","webpack:///./node_modules/@polymer/paper-dialog/paper-dialog.js","webpack:///./node_modules/@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js","webpack:///./node_modules/@polymer/paper-input/paper-textarea.js","webpack:///./src/panels/lovelace/editor/card-editor/hui-dialog-edit-card.ts"],"names":["__webpack_require__","d","__webpack_exports__","PaperDialogBehaviorImpl","PaperDialogBehavior","_polymer_iron_overlay_behavior_iron_overlay_behavior_js__WEBPACK_IMPORTED_MODULE_1__","_polymer_polymer_lib_legacy_polymer_dom_js__WEBPACK_IMPORTED_MODULE_2__","hostAttributes","role","tabindex","properties","modal","type","Boolean","value","__readied","observers","listeners","tap","ready","this","__prevNoCancelOnOutsideClick","noCancelOnOutsideClick","__prevNoCancelOnEscKey","noCancelOnEscKey","__prevWithBackdrop","withBackdrop","_modalChanged","readied","_updateClosingReasonConfirmed","confirmed","closingReason","_onDialogClick","event","path","dom","i","l","indexOf","target","hasAttribute","close","stopPropagation","IronOverlayBehavior","$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","content","_polymer_neon_animation_neon_animation_runner_behavior_js__WEBPACK_IMPORTED_MODULE_2__","_polymer_paper_dialog_behavior_paper_dialog_behavior_js__WEBPACK_IMPORTED_MODULE_3__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","Polymer","_template","html","is","behaviors","NeonAnimationRunnerBehavior","neon-animation-finish","_renderOpened","cancelAnimation","playAnimation","_renderClosed","_onNeonAnimationFinish","opened","_finishRenderOpened","_finishRenderClosed","IronValidatableBehavior","IronControlState","observer","String","notify","bindValue","rows","Number","maxRows","autocomplete","autofocus","inputmode","placeholder","readonly","required","minlength","maxlength","label","input","textarea","$","selectionStart","selectionEnd","attached","navigator","userAgent","match","style","marginLeft","validate","valid","validity","hasValidator","call","invalid","fire","_bindValueChanged","_valueChanged","mirror","_valueForMirror","_onInput","eventPath","_constrain","tokens","_tokens","length","slice","push","join","replace","split","_updateCached","PaperInputBehavior","IronFormElementBehavior","_ariaLabelledBy","_ariaDescribedBy","start","end","_ariaLabelledByChanged","ariaLabelledBy","_focusableElement","_ariaDescribedByChanged","ariaDescribedBy","inputElement","HuiDialogEditCard","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","kind","decorators","property","key","async","params","_params","view","card","_viewConfig","lovelaceConfig","views","_cardConfig","undefined","cards","Object","isFrozen","deepFreeze","shadowRoot","querySelector","heading","hass","localize","title","_handleKeyUp","_handleCardPicked","_handleConfigChanged","_error","_close","_canSave","_saving","_save","static","haStyleDialog","css","ev","config","detail","entities","keys","includes","entity","error","keyCode","_cardEditorEl","hasError","saveConfig","addCard","replaceCard","showSaveSuccessToast","LitElement"],"mappings":"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","file":"chunk.7dc5320b7914b9faa219.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport {IronOverlayBehavior} from '@polymer/iron-overlay-behavior/iron-overlay-behavior.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\n\n/**\n  Use `Polymer.PaperDialogBehavior` and `paper-dialog-shared-styles.html` to\n  implement a Material Design dialog.\n\n  For example, if `<paper-dialog-impl>` implements this behavior:\n\n      <paper-dialog-impl>\n          <h2>Header</h2>\n          <div>Dialog body</div>\n          <div class=\"buttons\">\n              <paper-button dialog-dismiss>Cancel</paper-button>\n              <paper-button dialog-confirm>Accept</paper-button>\n          </div>\n      </paper-dialog-impl>\n\n  `paper-dialog-shared-styles.html` provide styles for a header, content area,\n  and an action area for buttons. Use the `<h2>` tag for the header and the\n  `buttons` class for the action area. You can use the `paper-dialog-scrollable`\n  element (in its own repository) if you need a scrolling content area.\n\n  Use the `dialog-dismiss` and `dialog-confirm` attributes on interactive\n  controls to close the dialog. If the user dismisses the dialog with\n  `dialog-confirm`, the `closingReason` will update to include `confirmed:\n  true`.\n\n  ### Accessibility\n\n  This element has `role=\"dialog\"` by default. Depending on the context, it may\n  be more appropriate to override this attribute with `role=\"alertdialog\"`.\n\n  If `modal` is set, the element will prevent the focus from exiting the\n  element. It will also ensure that focus remains in the dialog.\n\n  @hero hero.svg\n  @demo demo/index.html\n  @polymerBehavior PaperDialogBehavior\n */\nexport const PaperDialogBehaviorImpl = {\n\n  hostAttributes: {'role': 'dialog', 'tabindex': '-1'},\n\n  properties: {\n\n    /**\n     * If `modal` is true, this implies `no-cancel-on-outside-click`,\n     * `no-cancel-on-esc-key` and `with-backdrop`.\n     */\n    modal: {type: Boolean, value: false},\n\n    __readied: {type: Boolean, value: false}\n\n  },\n\n  observers: ['_modalChanged(modal, __readied)'],\n\n  listeners: {'tap': '_onDialogClick'},\n\n  /**\n   * @return {void}\n   */\n  ready: function() {\n    // Only now these properties can be read.\n    this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n    this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n    this.__prevWithBackdrop = this.withBackdrop;\n    this.__readied = true;\n  },\n\n  _modalChanged: function(modal, readied) {\n    // modal implies noCancelOnOutsideClick, noCancelOnEscKey and withBackdrop.\n    // We need to wait for the element to be ready before we can read the\n    // properties values.\n    if (!readied) {\n      return;\n    }\n\n    if (modal) {\n      this.__prevNoCancelOnOutsideClick = this.noCancelOnOutsideClick;\n      this.__prevNoCancelOnEscKey = this.noCancelOnEscKey;\n      this.__prevWithBackdrop = this.withBackdrop;\n      this.noCancelOnOutsideClick = true;\n      this.noCancelOnEscKey = true;\n      this.withBackdrop = true;\n    } else {\n      // If the value was changed to false, let it false.\n      this.noCancelOnOutsideClick =\n          this.noCancelOnOutsideClick && this.__prevNoCancelOnOutsideClick;\n      this.noCancelOnEscKey =\n          this.noCancelOnEscKey && this.__prevNoCancelOnEscKey;\n      this.withBackdrop = this.withBackdrop && this.__prevWithBackdrop;\n    }\n  },\n\n  _updateClosingReasonConfirmed: function(confirmed) {\n    this.closingReason = this.closingReason || {};\n    this.closingReason.confirmed = confirmed;\n  },\n\n  /**\n   * Will dismiss the dialog if user clicked on an element with dialog-dismiss\n   * or dialog-confirm attribute.\n   */\n  _onDialogClick: function(event) {\n    // Search for the element with dialog-confirm or dialog-dismiss,\n    // from the root target until this (excluded).\n    var path = dom(event).path;\n    for (var i = 0, l = path.indexOf(this); i < l; i++) {\n      var target = path[i];\n      if (target.hasAttribute &&\n          (target.hasAttribute('dialog-dismiss') ||\n           target.hasAttribute('dialog-confirm'))) {\n        this._updateClosingReasonConfirmed(\n            target.hasAttribute('dialog-confirm'));\n        this.close();\n        event.stopPropagation();\n        break;\n      }\n    }\n  }\n\n};\n\n/** @polymerBehavior */\nexport const PaperDialogBehavior =\n    [IronOverlayBehavior, PaperDialogBehaviorImpl];\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/*\n### Styling\n\nThe following custom properties and mixins are available for styling.\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-dialog-background-color` | Dialog background color | `--primary-background-color`\n`--paper-dialog-color` | Dialog foreground color | `--primary-text-color`\n`--paper-dialog` | Mixin applied to the dialog | `{}`\n`--paper-dialog-title` | Mixin applied to the title (`<h2>`) element | `{}`\n`--paper-dialog-button-color` | Button area foreground color | `--default-primary-color`\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport '@polymer/paper-styles/shadow.js';\nconst $_documentContainer = document.createElement('template');\n$_documentContainer.setAttribute('style', 'display: none;');\n\n$_documentContainer.innerHTML = `<dom-module id=\"paper-dialog-shared-styles\">\n  <template>\n    <style>\n      :host {\n        display: block;\n        margin: 24px 40px;\n\n        background: var(--paper-dialog-background-color, var(--primary-background-color));\n        color: var(--paper-dialog-color, var(--primary-text-color));\n\n        @apply --paper-font-body1;\n        @apply --shadow-elevation-16dp;\n        @apply --paper-dialog;\n      }\n\n      :host > ::slotted(*) {\n        margin-top: 20px;\n        padding: 0 24px;\n      }\n\n      :host > ::slotted(.no-padding) {\n        padding: 0;\n      }\n\n      \n      :host > ::slotted(*:first-child) {\n        margin-top: 24px;\n      }\n\n      :host > ::slotted(*:last-child) {\n        margin-bottom: 24px;\n      }\n\n      /* In 1.x, this selector was \\`:host > ::content h2\\`. In 2.x <slot> allows\n      to select direct children only, which increases the weight of this\n      selector, so we have to re-define first-child/last-child margins below. */\n      :host > ::slotted(h2) {\n        position: relative;\n        margin: 0;\n\n        @apply --paper-font-title;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-top. */\n      :host > ::slotted(h2:first-child) {\n        margin-top: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      /* Apply mixin again, in case it sets margin-bottom. */\n      :host > ::slotted(h2:last-child) {\n        margin-bottom: 24px;\n        @apply --paper-dialog-title;\n      }\n\n      :host > ::slotted(.paper-dialog-buttons),\n      :host > ::slotted(.buttons) {\n        position: relative;\n        padding: 8px 8px 8px 24px;\n        margin: 0;\n\n        color: var(--paper-dialog-button-color, var(--primary-color));\n\n        @apply --layout-horizontal;\n        @apply --layout-end-justified;\n      }\n    </style>\n  </template>\n</dom-module>`;\n\ndocument.head.appendChild($_documentContainer.content);\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/paper-dialog-behavior/paper-dialog-shared-styles.js';\n\nimport {NeonAnimationRunnerBehavior} from '@polymer/neon-animation/neon-animation-runner-behavior.js';\nimport {PaperDialogBehavior} from '@polymer/paper-dialog-behavior/paper-dialog-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\nMaterial design:\n[Dialogs](https://www.google.com/design/spec/components/dialogs.html)\n\n`<paper-dialog>` is a dialog with Material Design styling and optional\nanimations when it is opened or closed. It provides styles for a header, content\narea, and an action area for buttons. You can use the\n`<paper-dialog-scrollable>` element (in its own repository) if you need a\nscrolling content area. To autofocus a specific child element after opening the\ndialog, give it the `autofocus` attribute. See `Polymer.PaperDialogBehavior` and\n`Polymer.IronOverlayBehavior` for specifics.\n\nFor example, the following code implements a dialog with a header, scrolling\ncontent area and buttons. Focus will be given to the `dialog-confirm` button\nwhen the dialog is opened.\n\n    <paper-dialog>\n      <h2>Header</h2>\n      <paper-dialog-scrollable>\n        Lorem ipsum...\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <paper-button dialog-dismiss>Cancel</paper-button>\n        <paper-button dialog-confirm autofocus>Accept</paper-button>\n      </div>\n    </paper-dialog>\n\n### Styling\n\nSee the docs for `Polymer.PaperDialogBehavior` for the custom properties\navailable for styling this element.\n\n### Animations\n\nSet the `entry-animation` and/or `exit-animation` attributes to add an animation\nwhen the dialog is opened or closed. See the documentation in\n[PolymerElements/neon-animation](https://github.com/PolymerElements/neon-animation)\nfor more info.\n\nFor example:\n\n    <script type=\"module\">\n      import '@polymer/neon-animation/animations/fade-out-animation.js';\n      import '@polymer/neon-animation/animations/scale-up-animation.js';\n    </script>\n\n    <paper-dialog entry-animation=\"scale-up-animation\"\n                  exit-animation=\"fade-out-animation\">\n      <h2>Header</h2>\n      <div>Dialog body</div>\n    </paper-dialog>\n\n### Accessibility\n\nSee the docs for `Polymer.PaperDialogBehavior` for accessibility features\nimplemented by this element.\n\n@group Paper Elements\n@element paper-dialog\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-dialog-shared-styles\"></style>\n    <slot></slot>\n`,\n\n  is: 'paper-dialog',\n  behaviors: [PaperDialogBehavior, NeonAnimationRunnerBehavior],\n  listeners: {'neon-animation-finish': '_onNeonAnimationFinish'},\n\n  _renderOpened: function() {\n    this.cancelAnimation();\n    this.playAnimation('entry');\n  },\n\n  _renderClosed: function() {\n    this.cancelAnimation();\n    this.playAnimation('exit');\n  },\n\n  _onNeonAnimationFinish: function() {\n    if (this.opened) {\n      this._finishRenderOpened();\n    } else {\n      this._finishRenderClosed();\n    }\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\n\nimport {IronControlState} from '@polymer/iron-behaviors/iron-control-state.js';\nimport {IronValidatableBehavior} from '@polymer/iron-validatable-behavior/iron-validatable-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {dom} from '@polymer/polymer/lib/legacy/polymer.dom.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/**\n`iron-autogrow-textarea` is an element containing a textarea that grows in\nheight as more lines of input are entered. Unless an explicit height or the\n`maxRows` property is set, it will never scroll.\n\nExample:\n\n    <iron-autogrow-textarea></iron-autogrow-textarea>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--iron-autogrow-textarea` | Mixin applied to the textarea | `{}`\n`--iron-autogrow-textarea-placeholder` | Mixin applied to the textarea placeholder | `{}`\n\n@group Iron Elements\n@hero hero.svg\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        width: 400px;\n        border: 1px solid;\n        padding: 2px;\n        -moz-appearance: textarea;\n        -webkit-appearance: textarea;\n        overflow: hidden;\n      }\n\n      .mirror-text {\n        visibility: hidden;\n        word-wrap: break-word;\n        @apply --iron-autogrow-textarea;\n      }\n\n      .fit {\n        @apply --layout-fit;\n      }\n\n      textarea {\n        position: relative;\n        outline: none;\n        border: none;\n        resize: none;\n        background: inherit;\n        color: inherit;\n        /* see comments in template */\n        width: 100%;\n        height: 100%;\n        font-size: inherit;\n        font-family: inherit;\n        line-height: inherit;\n        text-align: inherit;\n        @apply --iron-autogrow-textarea;\n      }\n\n      textarea::-webkit-input-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea:-moz-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea::-moz-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n\n      textarea:-ms-input-placeholder {\n        @apply --iron-autogrow-textarea-placeholder;\n      }\n    </style>\n\n    <!-- the mirror sizes the input/textarea so it grows with typing -->\n    <!-- use &#160; instead &nbsp; of to allow this element to be used in XHTML -->\n    <div id=\"mirror\" class=\"mirror-text\" aria-hidden=\"true\">&nbsp;</div>\n\n    <!-- size the input/textarea with a div, because the textarea has intrinsic size in ff -->\n    <div class=\"textarea-container fit\">\n      <textarea id=\"textarea\" name\\$=\"[[name]]\" aria-label\\$=\"[[label]]\" autocomplete\\$=\"[[autocomplete]]\" autofocus\\$=\"[[autofocus]]\" inputmode\\$=\"[[inputmode]]\" placeholder\\$=\"[[placeholder]]\" readonly\\$=\"[[readonly]]\" required\\$=\"[[required]]\" disabled\\$=\"[[disabled]]\" rows\\$=\"[[rows]]\" minlength\\$=\"[[minlength]]\" maxlength\\$=\"[[maxlength]]\"></textarea>\n    </div>\n`,\n\n  is: 'iron-autogrow-textarea',\n  behaviors: [IronValidatableBehavior, IronControlState],\n\n  properties: {\n    /**\n     * Use this property instead of `bind-value` for two-way data binding.\n     * @type {string|number}\n     */\n    value: {observer: '_valueChanged', type: String, notify: true},\n\n    /**\n     * This property is deprecated, and just mirrors `value`. Use `value`\n     * instead.\n     * @type {string|number}\n     */\n    bindValue: {observer: '_bindValueChanged', type: String, notify: true},\n\n    /**\n     * The initial number of rows.\n     *\n     * @attribute rows\n     * @type number\n     * @default 1\n     */\n    rows: {type: Number, value: 1, observer: '_updateCached'},\n\n    /**\n     * The maximum number of rows this element can grow to until it\n     * scrolls. 0 means no maximum.\n     *\n     * @attribute maxRows\n     * @type number\n     * @default 0\n     */\n    maxRows: {type: Number, value: 0, observer: '_updateCached'},\n\n    /**\n     * Bound to the textarea's `autocomplete` attribute.\n     */\n    autocomplete: {type: String, value: 'off'},\n\n    /**\n     * Bound to the textarea's `autofocus` attribute.\n     */\n    autofocus: {type: Boolean, value: false},\n\n    /**\n     * Bound to the textarea's `inputmode` attribute.\n     */\n    inputmode: {type: String},\n\n    /**\n     * Bound to the textarea's `placeholder` attribute.\n     */\n    placeholder: {type: String},\n\n    /**\n     * Bound to the textarea's `readonly` attribute.\n     */\n    readonly: {type: String},\n\n    /**\n     * Set to true to mark the textarea as required.\n     */\n    required: {type: Boolean},\n\n    /**\n     * The minimum length of the input value.\n     */\n    minlength: {type: Number},\n\n    /**\n     * The maximum length of the input value.\n     */\n    maxlength: {type: Number},\n\n    /**\n     * Bound to the textarea's `aria-label` attribute.\n     */\n    label: {type: String}\n\n  },\n\n  listeners: {'input': '_onInput'},\n\n  /**\n   * Returns the underlying textarea.\n   * @return {!HTMLTextAreaElement}\n   */\n  get textarea() {\n    return this.$.textarea;\n  },\n\n  /**\n   * Returns textarea's selection start.\n   * @return {number}\n   */\n  get selectionStart() {\n    return this.$.textarea.selectionStart;\n  },\n\n  /**\n   * Returns textarea's selection end.\n   * @return {number}\n   */\n  get selectionEnd() {\n    return this.$.textarea.selectionEnd;\n  },\n\n  /**\n   * Sets the textarea's selection start.\n   */\n  set selectionStart(value) {\n    this.$.textarea.selectionStart = value;\n  },\n\n  /**\n   * Sets the textarea's selection end.\n   */\n  set selectionEnd(value) {\n    this.$.textarea.selectionEnd = value;\n  },\n\n  attached: function() {\n    /* iOS has an arbitrary left margin of 3px that isn't present\n     * in any other browser, and means that the paper-textarea's cursor\n     * overlaps the label.\n     * See https://github.com/PolymerElements/paper-input/issues/468.\n     */\n    var IS_IOS = navigator.userAgent.match(/iP(?:[oa]d|hone)/);\n    if (IS_IOS) {\n      this.$.textarea.style.marginLeft = '-3px';\n    }\n  },\n\n  /**\n   * Returns true if `value` is valid. The validator provided in `validator`\n   * will be used first, if it exists; otherwise, the `textarea`'s validity\n   * is used.\n   * @return {boolean} True if the value is valid.\n   */\n  validate: function() {\n    // Use the nested input's native validity.\n    var valid = this.$.textarea.validity.valid;\n\n    // Only do extra checking if the browser thought this was valid.\n    if (valid) {\n      // Empty, required input is invalid\n      if (this.required && this.value === '') {\n        valid = false;\n      } else if (this.hasValidator()) {\n        valid = IronValidatableBehavior.validate.call(this, this.value);\n      }\n    }\n\n    this.invalid = !valid;\n    this.fire('iron-input-validate');\n    return valid;\n  },\n\n  _bindValueChanged: function(bindValue) {\n    this.value = bindValue;\n  },\n\n  _valueChanged: function(value) {\n    var textarea = this.textarea;\n    if (!textarea) {\n      return;\n    }\n\n    // If the bindValue changed manually, then we need to also update\n    // the underlying textarea's value. Otherwise this change was probably\n    // generated from the _onInput handler, and the two values are already\n    // the same.\n    if (textarea.value !== value) {\n      textarea.value = !(value || value === 0) ? '' : value;\n    }\n\n    this.bindValue = value;\n    this.$.mirror.innerHTML = this._valueForMirror();\n\n    // Manually notify because we don't want to notify until after setting\n    // value.\n    this.fire('bind-value-changed', {value: this.bindValue});\n  },\n\n  _onInput: function(event) {\n    var eventPath = dom(event).path;\n    this.value = eventPath ? eventPath[0].value : event.target.value;\n  },\n\n  _constrain: function(tokens) {\n    var _tokens;\n    tokens = tokens || [''];\n    // Enforce the min and max heights for a multiline input to avoid\n    // measurement\n    if (this.maxRows > 0 && tokens.length > this.maxRows) {\n      _tokens = tokens.slice(0, this.maxRows);\n    } else {\n      _tokens = tokens.slice(0);\n    }\n    while (this.rows > 0 && _tokens.length < this.rows) {\n      _tokens.push('');\n    }\n    // Use &#160; instead &nbsp; of to allow this element to be used in XHTML.\n    return _tokens.join('<br/>') + '&#160;';\n  },\n\n  _valueForMirror: function() {\n    var input = this.textarea;\n    if (!input) {\n      return;\n    }\n    this.tokens = (input && input.value) ? input.value.replace(/&/gm, '&amp;')\n                                               .replace(/\"/gm, '&quot;')\n                                               .replace(/'/gm, '&#39;')\n                                               .replace(/</gm, '&lt;')\n                                               .replace(/>/gm, '&gt;')\n                                               .split('\\n') :\n                                           [''];\n    return this._constrain(this.tokens);\n  },\n\n  _updateCached: function() {\n    this.$.mirror.innerHTML = this._constrain(this.tokens);\n  }\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js';\nimport './paper-input-char-counter.js';\nimport './paper-input-container.js';\nimport './paper-input-error.js';\n\nimport {IronFormElementBehavior} from '@polymer/iron-form-element-behavior/iron-form-element-behavior.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperInputBehavior} from './paper-input-behavior.js';\n\n/*\n`<paper-textarea>` is a multi-line text field with Material Design styling.\n\n    <paper-textarea label=\"Textarea label\"></paper-textarea>\n\nSee `Polymer.PaperInputBehavior` for more API docs.\n\n### Validation\n\nCurrently only `required` and `maxlength` validation is supported.\n\n### Styling\n\nSee `Polymer.PaperInputContainer` for a list of custom properties used to\nstyle this element.\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      label {\n        pointer-events: none;\n      }\n    </style>\n\n    <paper-input-container no-label-float$=\"[[noLabelFloat]]\" always-float-label=\"[[_computeAlwaysFloatLabel(alwaysFloatLabel,placeholder)]]\" auto-validate$=\"[[autoValidate]]\" disabled$=\"[[disabled]]\" invalid=\"[[invalid]]\">\n\n      <label hidden$=\"[[!label]]\" aria-hidden=\"true\" for$=\"[[_inputId]]\" slot=\"label\">[[label]]</label>\n\n      <iron-autogrow-textarea class=\"paper-input-input\" slot=\"input\" id$=\"[[_inputId]]\" aria-labelledby$=\"[[_ariaLabelledBy]]\" aria-describedby$=\"[[_ariaDescribedBy]]\" bind-value=\"{{value}}\" invalid=\"{{invalid}}\" validator$=\"[[validator]]\" disabled$=\"[[disabled]]\" autocomplete$=\"[[autocomplete]]\" autofocus$=\"[[autofocus]]\" inputmode$=\"[[inputmode]]\" name$=\"[[name]]\" placeholder$=\"[[placeholder]]\" readonly$=\"[[readonly]]\" required$=\"[[required]]\" minlength$=\"[[minlength]]\" maxlength$=\"[[maxlength]]\" autocapitalize$=\"[[autocapitalize]]\" rows$=\"[[rows]]\" max-rows$=\"[[maxRows]]\" on-change=\"_onChange\"></iron-autogrow-textarea>\n\n      <template is=\"dom-if\" if=\"[[errorMessage]]\">\n        <paper-input-error aria-live=\"assertive\" slot=\"add-on\">[[errorMessage]]</paper-input-error>\n      </template>\n\n      <template is=\"dom-if\" if=\"[[charCounter]]\">\n        <paper-input-char-counter slot=\"add-on\"></paper-input-char-counter>\n      </template>\n\n    </paper-input-container>\n`,\n\n  is: 'paper-textarea',\n\n  behaviors: [\n    PaperInputBehavior,\n    IronFormElementBehavior,\n  ],\n\n  properties: {\n    _ariaLabelledBy: {\n      observer: '_ariaLabelledByChanged',\n      type: String,\n    },\n\n    _ariaDescribedBy: {\n      observer: '_ariaDescribedByChanged',\n      type: String,\n    },\n\n    value: {\n      // Required for the correct TypeScript type-generation\n      type: String,\n    },\n\n    /**\n     * The initial number of rows.\n     *\n     * @attribute rows\n     * @type {number}\n     * @default 1\n     */\n    rows: {\n      type: Number,\n      value: 1,\n    },\n\n    /**\n     * The maximum number of rows this element can grow to until it\n     * scrolls. 0 means no maximum.\n     *\n     * @attribute maxRows\n     * @type {number}\n     * @default 0\n     */\n    maxRows: {\n      type: Number,\n      value: 0,\n    },\n  },\n\n  /**\n   * @return {number}\n   */\n  get selectionStart() {\n    return this.$.input.textarea.selectionStart;\n  },\n\n  set selectionStart(start) {\n    this.$.input.textarea.selectionStart = start;\n  },\n\n  /**\n   * @return {number}\n   */\n  get selectionEnd() {\n    return this.$.input.textarea.selectionEnd;\n  },\n\n  set selectionEnd(end) {\n    this.$.input.textarea.selectionEnd = end;\n  },\n\n  _ariaLabelledByChanged: function(ariaLabelledBy) {\n    this._focusableElement.setAttribute('aria-labelledby', ariaLabelledBy);\n  },\n\n  _ariaDescribedByChanged: function(ariaDescribedBy) {\n    this._focusableElement.setAttribute('aria-describedby', ariaDescribedBy);\n  },\n\n  get _focusableElement() {\n    return this.inputElement.textarea;\n  }\n});\n","import {\n  css,\n  html,\n  LitElement,\n  TemplateResult,\n  CSSResultArray,\n  customElement,\n  property,\n} from \"lit-element\";\n\nimport deepFreeze from \"deep-freeze\";\n\nimport { HomeAssistant } from \"../../../../types\";\nimport { HASSDomEvent } from \"../../../../common/dom/fire_event\";\nimport {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n} from \"../../../../data/lovelace\";\nimport \"./hui-card-editor\";\n// tslint:disable-next-line\nimport { HuiCardEditor } from \"./hui-card-editor\";\nimport \"./hui-card-preview\";\nimport \"./hui-card-picker\";\nimport { EditCardDialogParams } from \"./show-edit-card-dialog\";\nimport { addCard, replaceCard } from \"../config-util\";\n\nimport \"../../../../components/dialog/ha-paper-dialog\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\nimport { showSaveSuccessToast } from \"../../../../util/toast-saved-success\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"reload-lovelace\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"reload-lovelace\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-dialog-edit-card\")\nexport class HuiDialogEditCard extends LitElement {\n  @property() protected hass!: HomeAssistant;\n\n  @property() private _params?: EditCardDialogParams;\n\n  @property() private _cardConfig?: LovelaceCardConfig;\n  @property() private _viewConfig!: LovelaceViewConfig;\n\n  @property() private _saving: boolean = false;\n  @property() private _error?: string;\n\n  public async showDialog(params: EditCardDialogParams): Promise<void> {\n    this._params = params;\n    const [view, card] = params.path;\n    this._viewConfig = params.lovelaceConfig.views[view];\n    this._cardConfig =\n      card !== undefined ? this._viewConfig.cards![card] : undefined;\n    if (this._cardConfig && !Object.isFrozen(this._cardConfig)) {\n      this._cardConfig = deepFreeze(this._cardConfig);\n    }\n  }\n\n  private get _cardEditorEl(): HuiCardEditor | null {\n    return this.shadowRoot!.querySelector(\"hui-card-editor\");\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n\n    let heading: string;\n    if (this._cardConfig && this._cardConfig.type) {\n      heading = `${this.hass!.localize(\n        `ui.panel.lovelace.editor.card.${this._cardConfig.type}.name`\n      )} ${this.hass!.localize(\"ui.panel.lovelace.editor.edit_card.header\")}`;\n    } else if (!this._cardConfig) {\n      heading = this._viewConfig.title\n        ? this.hass!.localize(\n            \"ui.panel.lovelace.editor.edit_card.pick_card_view_title\",\n            \"name\",\n            `\"${this._viewConfig.title}\"`\n          )\n        : this.hass!.localize(\"ui.panel.lovelace.editor.edit_card.pick_card\");\n    } else {\n      heading = this.hass!.localize(\n        \"ui.panel.lovelace.editor.edit_card.header\"\n      );\n    }\n\n    return html`\n      <ha-paper-dialog with-backdrop opened modal @keyup=${this._handleKeyUp}>\n        <h2>\n          ${heading}\n        </h2>\n        <paper-dialog-scrollable>\n          ${this._cardConfig === undefined\n            ? html`\n                <hui-card-picker\n                  .hass=${this.hass}\n                  @config-changed=\"${this._handleCardPicked}\"\n                ></hui-card-picker>\n              `\n            : html`\n                <div class=\"content\">\n                  <div class=\"element-editor\">\n                    <hui-card-editor\n                      .hass=${this.hass}\n                      .value=\"${this._cardConfig}\"\n                      @config-changed=\"${this._handleConfigChanged}\"\n                    ></hui-card-editor>\n                  </div>\n                  <div class=\"element-preview\">\n                    <hui-card-preview\n                      .hass=${this.hass}\n                      .config=\"${this._cardConfig}\"\n                      class=${this._error ? \"blur\" : \"\"}\n                    ></hui-card-preview>\n                    ${this._error\n                      ? html`\n                          <paper-spinner\n                            active\n                            alt=\"Can't update card\"\n                          ></paper-spinner>\n                        `\n                      : ``}\n                  </div>\n                </div>\n              `}\n        </paper-dialog-scrollable>\n        <div class=\"paper-dialog-buttons\">\n          <mwc-button @click=\"${this._close}\">\n            ${this.hass!.localize(\"ui.common.cancel\")}\n          </mwc-button>\n          ${this._cardConfig !== undefined\n            ? html`\n                <mwc-button\n                  ?disabled=\"${!this._canSave || this._saving}\"\n                  @click=\"${this._save}\"\n                >\n                  ${this._saving\n                    ? html`\n                        <paper-spinner active alt=\"Saving\"></paper-spinner>\n                      `\n                    : this.hass!.localize(\"ui.common.save\")}\n                </mwc-button>\n              `\n            : ``}\n        </div>\n      </ha-paper-dialog>\n    `;\n  }\n\n  static get styles(): CSSResultArray {\n    return [\n      haStyleDialog,\n      css`\n        :host {\n          --code-mirror-max-height: calc(100vh - 176px);\n        }\n\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          /* overrule the ha-style-dialog max-height on small screens */\n          ha-paper-dialog {\n            max-height: 100%;\n            height: 100%;\n          }\n        }\n\n        @media all and (min-width: 850px) {\n          ha-paper-dialog {\n            width: 845px;\n          }\n        }\n\n        ha-paper-dialog {\n          max-width: 845px;\n        }\n\n        .center {\n          margin-left: auto;\n          margin-right: auto;\n        }\n\n        .content {\n          display: flex;\n          flex-direction: column;\n          margin: 0 -10px;\n        }\n        .content hui-card-preview {\n          margin: 4px auto;\n          max-width: 390px;\n        }\n        .content .element-editor {\n          margin: 0 10px;\n        }\n\n        @media (min-width: 1200px) {\n          ha-paper-dialog {\n            max-width: none;\n            width: 1000px;\n          }\n\n          .content {\n            flex-direction: row;\n          }\n          .content > * {\n            flex-basis: 0;\n            flex-grow: 1;\n            flex-shrink: 1;\n            min-width: 0;\n          }\n          .content hui-card-preview {\n            padding: 8px 0;\n            margin: auto 10px;\n            max-width: 500px;\n          }\n        }\n\n        mwc-button paper-spinner {\n          width: 14px;\n          height: 14px;\n          margin-right: 20px;\n        }\n        .hidden {\n          display: none;\n        }\n        .element-editor {\n          margin-bottom: 8px;\n        }\n        .blur {\n          filter: blur(2px) grayscale(100%);\n        }\n        .element-preview {\n          position: relative;\n        }\n        .element-preview paper-spinner {\n          top: 50%;\n          left: 50%;\n          position: absolute;\n          z-index: 10;\n        }\n        hui-card-preview {\n          padding-top: 8px;\n          margin-bottom: 4px;\n          display: block;\n          width: 100%;\n        }\n      `,\n    ];\n  }\n\n  private _handleCardPicked(ev) {\n    const config = ev.detail.config;\n    if (this._params!.entities && this._params!.entities.length > 0) {\n      if (Object.keys(config).includes(\"entities\")) {\n        config.entities = this._params!.entities;\n      } else if (Object.keys(config).includes(\"entity\")) {\n        config.entity = this._params!.entities[0];\n      }\n    }\n    this._cardConfig = deepFreeze(config);\n    this._error = ev.detail.error;\n  }\n\n  private _handleConfigChanged(ev) {\n    this._cardConfig = deepFreeze(ev.detail.config);\n    this._error = ev.detail.error;\n  }\n\n  private _handleKeyUp(ev: KeyboardEvent) {\n    if (ev.keyCode === 27) {\n      this._close();\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n    this._cardConfig = undefined;\n    this._error = undefined;\n  }\n\n  private get _canSave(): boolean {\n    if (this._saving) {\n      return false;\n    }\n    if (this._cardConfig === undefined) {\n      return false;\n    }\n    if (this._cardEditorEl && this._cardEditorEl.hasError) {\n      return false;\n    }\n    return true;\n  }\n\n  private async _save(): Promise<void> {\n    this._saving = true;\n    await this._params!.saveConfig(\n      this._params!.path.length === 1\n        ? addCard(\n            this._params!.lovelaceConfig,\n            this._params!.path as [number],\n            this._cardConfig!\n          )\n        : replaceCard(\n            this._params!.lovelaceConfig,\n            this._params!.path as [number, number],\n            this._cardConfig!\n          )\n    );\n    this._saving = false;\n    showSaveSuccessToast(this, this.hass);\n    this._close();\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-dialog-edit-card\": HuiDialogEditCard;\n  }\n}\n"],"sourceRoot":""}