{"version":3,"sources":["webpack:///./src/components/ha-icon-input.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/panels/config/lovelace/dashboards/dialog-lovelace-dashboard-detail.ts"],"names":["_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","this","d","kind","decorators","property","key","value","attribute","type","Boolean","html","label","placeholder","_valueChanged","disabled","errorMessage","ev","detail","fireEvent","bubbles","composed","static","css","LitElement","MwcDialog","customElements","get","createCloseHeading","hass","title","localize","_MwcDialog","style","DialogLovelaceDashboardDetail","async","params","_this$_params$dashboa","_this$_params$dashboa2","_params","_error","undefined","dashboard","_urlPath","url_path","_showSidebar","sidebar","_sidebarIcon","icon","_sidebarTitle","_requireAdmin","require_admin","updateComplete","urlInvalid","test","_close","_showSidebarChanged","_sidebarIconChanged","_sidebarTitleChanged","_fillUrlPath","_urlChanged","_requireAdminChanged","_deleteDashboard","_submitting","_updateDashboard","parts","split","length","toLowerCase","target","checked","values","updateDashboard","trim","mode","createDashboard","err","message","removeDashboard","haStyleDialog"],"mappings":"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","file":"chunk.4a9604ac907d312f0100.js","sourcesContent":["import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\nimport \"./ha-icon\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n@customElement(\"ha-icon-input\")\nexport class HaIconInput extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public placeholder?: string;\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n  @property({ type: Boolean }) public disabled = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .value=${this.value}\n        .label=${this.label}\n        .placeholder=${this.placeholder}\n        @value-changed=${this._valueChanged}\n        .disabled=${this.disabled}\n        auto-validate\n        .errorMessage=${this.errorMessage}\n        pattern=\"^\\\\S+:\\\\S+$\"\n      >\n        ${this.value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this.value || this.placeholder} slot=\"suffix\">\n              </ha-icon>\n            `\n          : \"\"}\n      </paper-input>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this.value = ev.detail.value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: ev.detail.value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  static get styles() {\n    return css`\n      ha-icon {\n        position: relative;\n        bottom: 4px;\n      }\n    `;\n  }\n}\n","import { customElement, CSSResult, css, html } from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\n// tslint:disable-next-line\nimport { Dialog } from \"@material/mwc-dialog\";\nimport { Constructor, HomeAssistant } from \"../types\";\n// tslint:disable-next-line\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../../../components/ha-icon-input\";\nimport { HomeAssistant } from \"../../../../types\";\nimport {\n  LovelaceDashboard,\n  LovelaceDashboardMutableParams,\n  LovelaceDashboardCreateParams,\n} from \"../../../../data/lovelace\";\nimport { LovelaceDashboardDetailsDialogParams } from \"./show-dialog-lovelace-dashboard-detail\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\n\n@customElement(\"dialog-lovelace-dashboard-detail\")\nexport class DialogLovelaceDashboardDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _params?: LovelaceDashboardDetailsDialogParams;\n  @property() private _urlPath!: LovelaceDashboard[\"url_path\"];\n  @property() private _showSidebar!: boolean;\n  @property() private _sidebarIcon!: string;\n  @property() private _sidebarTitle!: string;\n  @property() private _requireAdmin!: LovelaceDashboard[\"require_admin\"];\n\n  @property() private _error?: string;\n  @property() private _submitting = false;\n\n  public async showDialog(\n    params: LovelaceDashboardDetailsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.dashboard) {\n      this._urlPath = this._params.dashboard.url_path || \"\";\n      this._showSidebar = !!this._params.dashboard.sidebar;\n      this._sidebarIcon = this._params.dashboard.sidebar?.icon || \"\";\n      this._sidebarTitle = this._params.dashboard.sidebar?.title || \"\";\n      this._requireAdmin = this._params.dashboard.require_admin || false;\n    } else {\n      this._urlPath = \"\";\n      this._showSidebar = true;\n      this._sidebarIcon = \"\";\n      this._sidebarTitle = \"\";\n      this._requireAdmin = false;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const urlInvalid = !/^[a-zA-Z0-9_-]+$/.test(this._urlPath);\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.dashboard\n            ? this._sidebarTitle ||\n                this.hass!.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.edit_dashboard\"\n                )\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.new_dashboard\"\n              )\n        )}\n      >\n        <div>\n          ${this._error\n            ? html`\n                <div class=\"error\">${this._error}</div>\n              `\n            : \"\"}\n          <div class=\"form\">\n            <ha-switch\n              .checked=${this._showSidebar}\n              @change=${this._showSidebarChanged}\n              >${this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.show_sidebar\"\n              )}</ha-switch\n            >\n            ${this._showSidebar\n              ? html`\n                  <ha-icon-input\n                    .value=${this._sidebarIcon}\n                    @value-changed=${this._sidebarIconChanged}\n                    .label=${this.hass!.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.icon\"\n                    )}\n                  ></ha-icon-input>\n                  <paper-input\n                    .value=${this._sidebarTitle}\n                    @value-changed=${this._sidebarTitleChanged}\n                    .label=${this.hass!.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title\"\n                    )}\n                    @blur=${this._fillUrlPath}\n                  ></paper-input>\n                `\n              : \"\"}\n            ${!this._params.dashboard\n              ? html`\n                  <paper-input\n                    .value=${this._urlPath}\n                    @value-changed=${this._urlChanged}\n                    .label=${this.hass!.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.url\"\n                    )}\n                    .errorMessage=${this.hass!.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.url_error_msg\"\n                    )}\n                    .invalid=${urlInvalid}\n                  ></paper-input>\n                `\n              : \"\"}\n            <ha-switch\n              .checked=${this._requireAdmin}\n              @change=${this._requireAdminChanged}\n              >${this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.require_admin\"\n              )}</ha-switch\n            >\n          </div>\n        </div>\n        ${this._params.dashboard\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=\"${this._deleteDashboard}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.delete\"\n                )}\n              </mwc-button>\n            `\n          : html``}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateDashboard}\"\n          .disabled=${urlInvalid || this._submitting}\n        >\n          ${this._params.dashboard\n            ? this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.update\"\n              )\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.create\"\n              )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _urlChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._urlPath = ev.detail.value;\n  }\n\n  private _sidebarIconChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._sidebarIcon = ev.detail.value;\n  }\n\n  private _sidebarTitleChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._sidebarTitle = ev.detail.value;\n  }\n\n  private _fillUrlPath() {\n    if (this._urlPath) {\n      return;\n    }\n    const parts = this._sidebarTitle.split(\" \");\n\n    if (parts.length) {\n      this._urlPath = parts[0].toLowerCase();\n    }\n  }\n\n  private _showSidebarChanged(ev: Event) {\n    this._showSidebar = (ev.target as HaSwitch).checked;\n  }\n\n  private _requireAdminChanged(ev: Event) {\n    this._requireAdmin = (ev.target as HaSwitch).checked;\n  }\n\n  private async _updateDashboard() {\n    this._submitting = true;\n    try {\n      const values: Partial<LovelaceDashboardMutableParams> = {\n        require_admin: this._requireAdmin,\n        sidebar: this._showSidebar\n          ? { icon: this._sidebarIcon, title: this._sidebarTitle }\n          : null,\n      };\n      if (this._params!.dashboard) {\n        await this._params!.updateDashboard(values);\n      } else {\n        (values as LovelaceDashboardCreateParams).url_path = this._urlPath.trim();\n        (values as LovelaceDashboardCreateParams).mode = \"storage\";\n        await this._params!.createDashboard(\n          values as LovelaceDashboardCreateParams\n        );\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteDashboard() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeDashboard()) {\n        this._close();\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        .form {\n          padding-bottom: 24px;\n        }\n        ha-switch {\n          padding: 16px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-lovelace-dashboard-detail\": DialogLovelaceDashboardDetail;\n  }\n}\n"],"sourceRoot":""}