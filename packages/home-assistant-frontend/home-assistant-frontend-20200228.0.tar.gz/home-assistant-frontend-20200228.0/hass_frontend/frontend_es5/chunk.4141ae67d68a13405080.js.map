{"version":3,"sources":["webpack:///./src/panels/config/entities/entity-registry-basic-editor.ts","webpack:///./src/panels/config/entities/editor-tabs/settings/entity-settings-helper-tab.ts"],"names":["_decorate","customElement","_initialize","_LitElement","HaEntityRegistryBasicEditor","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","F","d","kind","decorators","property","key","value","_updateEntry","regeneratorRuntime","mark","_callee","params","wrap","_context","prev","next","_submitting","new_entity_id","_entityId","trim","_disabledBy","disabled_by","updateEntityRegistryEntry","hass","_origEntityId","t0","finish","stop","changedProperties","_get","prototype","has","entry","entity_id","html","_templateObject","invalidDomainUpdate","computeDomain","_templateObject2","_entityIdChanged","localize","_disabledByChanged","ev","detail","target","checked","static","css","_templateObject3","LitElement","HELPERS","input_boolean","fetch","fetchInputBoolean","update","updateInputBoolean","delete","deleteInputBoolean","input_text","fetchInputText","updateInputText","deleteInputText","input_number","fetchInputNumber","updateInputNumber","deleteInputNumber","input_datetime","fetchInputDateTime","updateInputDateTime","deleteInputDateTime","input_select","fetchInputSelect","updateInputSelect","deleteInputSelect","EntityRegistrySettingsHelper","entity_settings_helper_tab_decorate","entity_settings_helper_tab_classCallCheck","entity_settings_helper_tab_getPrototypeOf","entity_settings_helper_tab_assertThisInitialized","entity_settings_helper_tab_inherits","query","entity_settings_helper_tab_get","_componentLoaded","isComponentLoaded","platform","_error","undefined","_item","_getItem","entity_settings_helper_tab_templateObject","entity_settings_helper_tab_templateObject3","dialogElement","_templateObject4","_templateObject5","_valueChanged","dynamicElement","item","_confirmDeleteItem","_updateItem","name","entity_settings_helper_tab_templateObject2","_getItem2","entity_settings_helper_tab_asyncToGenerator","items","_this2","sent","find","id","unique_id","updateComplete","fireEvent","_updateItem2","_callee2","_this$_registryEditor","_context2","abrupt","_registryEditor","updateEntry","message","_confirmDeleteItem2","_callee3","_context3","showConfirmationDialog","text","_templateObject6"],"mappings":"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","file":"chunk.4141ae67d68a13405080.js","sourcesContent":["import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  property,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\nimport \"../../../components/ha-switch\";\nimport {\n  ExtEntityRegistryEntry,\n  EntityRegistryEntryUpdateParams,\n  updateEntityRegistryEntry,\n} from \"../../../data/entity_registry\";\nimport { HomeAssistant } from \"../../../types\";\nimport { PolymerChangedEvent } from \"../../../polymer-types\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { HaSwitch } from \"../../../components/ha-switch\";\nimport { computeDomain } from \"../../../common/entity/compute_domain\";\n\n@customElement(\"ha-registry-basic-editor\")\nexport class HaEntityRegistryBasicEditor extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public entry!: ExtEntityRegistryEntry;\n  @property() private _origEntityId!: string;\n  @property() private _entityId!: string;\n  @property() private _disabledBy!: string | null;\n  @property() private _submitting?: boolean;\n\n  public async updateEntry(): Promise<void> {\n    this._submitting = true;\n    const params: Partial<EntityRegistryEntryUpdateParams> = {\n      new_entity_id: this._entityId.trim(),\n    };\n    if (this._disabledBy === null || this._disabledBy === \"user\") {\n      params.disabled_by = this._disabledBy;\n    }\n    try {\n      await updateEntityRegistryEntry(this.hass!, this._origEntityId, params);\n    } catch (err) {\n      throw err;\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (!changedProperties.has(\"entry\")) {\n      return;\n    }\n    if (this.entry) {\n      this._origEntityId = this.entry.entity_id;\n      this._entityId = this.entry.entity_id;\n      this._disabledBy = this.entry.disabled_by;\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      !this.entry ||\n      this.entry.entity_id !== this._origEntityId\n    ) {\n      return html``;\n    }\n    const invalidDomainUpdate =\n      computeDomain(this._entityId.trim()) !==\n      computeDomain(this.entry.entity_id);\n\n    return html`\n      <paper-input\n        .value=${this._entityId}\n        @value-changed=${this._entityIdChanged}\n        .label=${this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.entity_id\"\n        )}\n        error-message=\"Domain needs to stay the same\"\n        .invalid=${invalidDomainUpdate}\n        .disabled=${this._submitting}\n      ></paper-input>\n      <div class=\"row\">\n        <ha-switch\n          .checked=${!this._disabledBy}\n          @change=${this._disabledByChanged}\n        >\n          <div>\n            <div>\n              ${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.enabled_label\"\n              )}\n            </div>\n            <div class=\"secondary\">\n              ${this._disabledBy && this._disabledBy !== \"user\"\n                ? this.hass.localize(\n                    \"ui.dialogs.entity_registry.editor.enabled_cause\",\n                    \"cause\",\n                    this.hass.localize(\n                      `config_entry.disabled_by.${this._disabledBy}`\n                    )\n                  )\n                : \"\"}\n              ${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.enabled_description\"\n              )}\n              <br />${this.hass.localize(\n                \"ui.dialogs.entity_registry.editor.note\"\n              )}\n            </div>\n          </div>\n        </ha-switch>\n      </div>\n    `;\n  }\n\n  private _entityIdChanged(ev: PolymerChangedEvent<string>): void {\n    this._entityId = ev.detail.value;\n  }\n\n  private _disabledByChanged(ev: Event): void {\n    this._disabledBy = (ev.target as HaSwitch).checked ? null : \"user\";\n  }\n\n  static get styles() {\n    return css`\n      .row {\n        margin-top: 8px;\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport { isComponentLoaded } from \"../../../../../common/config/is_component_loaded\";\nimport { dynamicElement } from \"../../../../../common/dom/dynamic-element-directive\";\nimport { fireEvent } from \"../../../../../common/dom/fire_event\";\nimport { HaPaperDialog } from \"../../../../../components/dialog/ha-paper-dialog\";\nimport { ExtEntityRegistryEntry } from \"../../../../../data/entity_registry\";\nimport {\n  deleteInputBoolean,\n  fetchInputBoolean,\n  updateInputBoolean,\n} from \"../../../../../data/input_boolean\";\nimport {\n  deleteInputDateTime,\n  fetchInputDateTime,\n  updateInputDateTime,\n} from \"../../../../../data/input_datetime\";\nimport {\n  deleteInputNumber,\n  fetchInputNumber,\n  updateInputNumber,\n} from \"../../../../../data/input_number\";\nimport {\n  deleteInputSelect,\n  fetchInputSelect,\n  updateInputSelect,\n} from \"../../../../../data/input_select\";\nimport {\n  deleteInputText,\n  fetchInputText,\n  updateInputText,\n} from \"../../../../../data/input_text\";\nimport { showConfirmationDialog } from \"../../../../../dialogs/generic/show-dialog-box\";\nimport { HomeAssistant } from \"../../../../../types\";\nimport \"../../../helpers/forms/ha-input_boolean-form\";\nimport \"../../../helpers/forms/ha-input_text-form\";\nimport \"../../../helpers/forms/ha-input_datetime-form\";\nimport \"../../../helpers/forms/ha-input_select-form\";\nimport \"../../../helpers/forms/ha-input_number-form\";\nimport { Helper } from \"../../../helpers/const\";\nimport \"../../entity-registry-basic-editor\";\n// tslint:disable-next-line: no-duplicate-imports\nimport { HaEntityRegistryBasicEditor } from \"../../entity-registry-basic-editor\";\n\nconst HELPERS = {\n  input_boolean: {\n    fetch: fetchInputBoolean,\n    update: updateInputBoolean,\n    delete: deleteInputBoolean,\n  },\n  input_text: {\n    fetch: fetchInputText,\n    update: updateInputText,\n    delete: deleteInputText,\n  },\n  input_number: {\n    fetch: fetchInputNumber,\n    update: updateInputNumber,\n    delete: deleteInputNumber,\n  },\n  input_datetime: {\n    fetch: fetchInputDateTime,\n    update: updateInputDateTime,\n    delete: deleteInputDateTime,\n  },\n  input_select: {\n    fetch: fetchInputSelect,\n    update: updateInputSelect,\n    delete: deleteInputSelect,\n  },\n};\n\n@customElement(\"entity-settings-helper-tab\")\nexport class EntityRegistrySettingsHelper extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public entry!: ExtEntityRegistryEntry;\n  @property() public dialogElement!: HaPaperDialog;\n  @property() private _error?: string;\n  @property() private _item?: Helper | null;\n  @property() private _submitting?: boolean;\n  @property() private _componentLoaded?: boolean;\n  @query(\"ha-registry-basic-editor\")\n  private _registryEditor?: HaEntityRegistryBasicEditor;\n\n  protected firstUpdated(changedProperties: PropertyValues) {\n    super.firstUpdated(changedProperties);\n    this._componentLoaded = isComponentLoaded(this.hass, this.entry.platform);\n  }\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"entry\")) {\n      this._error = undefined;\n      this._item = undefined;\n      this._getItem();\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (this._item === undefined) {\n      return html``;\n    }\n    if (!this._componentLoaded) {\n      return html`\n        <paper-dialog-scrollable .dialogElement=${this.dialogElement}>\n          The ${this.entry.platform} component is not loaded, please add it your\n          configuration. Either by adding 'default_config:' or\n          '${this.entry.platform}:'.\n        </paper-dialog-scrollable>\n      `;\n    }\n    if (this._item === null) {\n      return html`\n        <paper-dialog-scrollable .dialogElement=${this.dialogElement}>\n          This entity can not be edited from the UI. Only entities setup from\n          the UI are editable.\n        </paper-dialog-scrollable>\n      `;\n    }\n    return html`\n      <paper-dialog-scrollable .dialogElement=${this.dialogElement}>\n        ${this._error\n          ? html`\n              <div class=\"error\">${this._error}</div>\n            `\n          : \"\"}\n        <div class=\"form\">\n          <div @value-changed=${this._valueChanged}>\n            ${dynamicElement(`ha-${this.entry.platform}-form`, {\n              hass: this.hass,\n              item: this._item,\n              entry: this.entry,\n            })}\n          </div>\n          <ha-registry-basic-editor\n            .hass=${this.hass}\n            .entry=${this.entry}\n          ></ha-registry-basic-editor>\n        </div>\n      </paper-dialog-scrollable>\n      <div class=\"buttons\">\n        <mwc-button\n          class=\"warning\"\n          @click=${this._confirmDeleteItem}\n          .disabled=${this._submitting}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.delete\")}\n        </mwc-button>\n        <mwc-button\n          @click=${this._updateItem}\n          .disabled=${this._submitting || !this._item.name}\n        >\n          ${this.hass.localize(\"ui.dialogs.entity_registry.editor.update\")}\n        </mwc-button>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    this._error = undefined;\n    this._item = ev.detail.value;\n  }\n\n  private async _getItem() {\n    const items = await HELPERS[this.entry.platform].fetch(this.hass!);\n    this._item = items.find((item) => item.id === this.entry.unique_id) || null;\n    await this.updateComplete;\n    fireEvent(this.dialogElement as HTMLElement, \"iron-resize\");\n  }\n\n  private async _updateItem(): Promise<void> {\n    if (!this._item) {\n      return;\n    }\n    this._submitting = true;\n    try {\n      await HELPERS[this.entry.platform].update(\n        this.hass!,\n        this._item.id,\n        this._item\n      );\n      await this._registryEditor?.updateEntry();\n      fireEvent(this, \"close-dialog\");\n    } catch (err) {\n      this._error = err.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _confirmDeleteItem(): Promise<void> {\n    if (!this._item) {\n      return;\n    }\n    if (\n      !(await showConfirmationDialog(this, {\n        text: this.hass.localize(\n          \"ui.dialogs.entity_registry.editor.confirm_delete\"\n        ),\n      }))\n    ) {\n      return;\n    }\n\n    this._submitting = true;\n\n    try {\n      await HELPERS[this.entry.platform].delete(this.hass!, this._item.id);\n      fireEvent(this, \"close-dialog\");\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        padding: 0 !important;\n      }\n      .form {\n        padding-bottom: 24px;\n      }\n      .buttons {\n        display: flex;\n        justify-content: space-between;\n        padding: 8px;\n        margin-bottom: -20px;\n      }\n      mwc-button.warning {\n        --mdc-theme-primary: var(--google-red-500);\n      }\n      .error {\n        color: var(--google-red-500);\n      }\n      .row {\n        margin-top: 8px;\n        color: var(--primary-text-color);\n      }\n      .secondary {\n        color: var(--secondary-text-color);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"entity-platform-helper-tab\": EntityRegistrySettingsHelper;\n  }\n}\n"],"sourceRoot":""}