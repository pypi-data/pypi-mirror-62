{"version":3,"sources":["webpack:///./src/common/string/compare.ts","webpack:///./src/panels/config/ha-config-section.ts","webpack:///./src/data/person.ts","webpack:///./src/panels/config/person/show-dialog-person-detail.ts","webpack:///./src/panels/config/person/ha-config-person.ts"],"names":["__webpack_require__","d","__webpack_exports__","compare","caseInsensitiveCompare","a","b","toLowerCase","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HaConfigSection","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","decorators","property","key","value","html","_templateObject","classMap","narrow","isWide","vertical","horizontal","static","css","_templateObject2","LitElement","createPerson","hass","values","callWS","Object","assign","type","loadPersonDetailDialog","Promise","all","e","then","bind","HaConfigPerson","_this2","undefined","_storageItems","_configItems","route","configSections","persons","localize","_templateObject3","map","entry","_templateObject4","_openEditEntry","name","_templateObject5","_createPerson","_templateObject6","_templateObject7","_templateObject8","changedProps","_get","prototype","_fetchData","_callee","personData","regeneratorRuntime","wrap","_context","prev","next","_usersLoad","fetchUsers","sent","storage","sort","ent1","ent2","config","stop","_openDialog","ev","currentTarget","users","currentPerson","used","Set","_i","_arr","coll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","pers","user_id","add","err","currentUserId","filter","user","id","has","_callee5","_this3","_context5","element","systemLogDetailParams","_allowedUsers","createEntry","_createEntry","_asyncToGenerator","mark","_callee2","created","_context2","_x2","updateEntry","_updateEntry","_callee3","updated","_context3","personId","updates","person_id","ent","_x3","removeEntry","_removeEntry","_callee4","_context4","confirm","abrupt","t0","fireEvent","dialogTag","dialogImport","dialogParams","_templateObject9","customElements","define"],"mappings":"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","file":"chunk.992d65140e80f6492806.js","sourcesContent":["export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import { customElement, LitElement, html, css, property } from \"lit-element\";\nimport { classMap } from \"lit-html/directives/class-map\";\n\n@customElement(\"ha-config-section\")\nexport class HaConfigSection extends LitElement {\n  @property() public isWide: boolean = false;\n\n  protected render() {\n    return html`\n      <div\n        class=\"content ${classMap({\n          narrow: !this.isWide,\n        })}\"\n      >\n        <div class=\"header\"><slot name=\"header\"></slot></div>\n        <div\n          class=\"together layout ${classMap({\n            narrow: !this.isWide,\n            vertical: !this.isWide,\n            horizontal: this.isWide,\n          })}\"\n        >\n          <div class=\"intro\"><slot name=\"introduction\"></slot></div>\n          <div class=\"panel flex-auto\"><slot></slot></div>\n        </div>\n      </div>\n    `;\n  }\n\n  static get styles() {\n    return css`\n      :host {\n        display: block;\n      }\n      .content {\n        padding: 28px 20px 0;\n        max-width: 1040px;\n        margin: 0 auto;\n      }\n\n      .layout {\n        display: flex;\n      }\n\n      .horizontal {\n        flex-direction: row;\n      }\n\n      .vertical {\n        flex-direction: column;\n      }\n\n      .flex-auto {\n        flex: 1 1 auto;\n      }\n\n      .header {\n        font-family: var(--paper-font-headline_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-headline_-_-webkit-font-smoothing\n        );\n        font-size: var(--paper-font-headline_-_font-size);\n        font-weight: var(--paper-font-headline_-_font-weight);\n        letter-spacing: var(--paper-font-headline_-_letter-spacing);\n        line-height: var(--paper-font-headline_-_line-height);\n        opacity: var(--dark-primary-opacity);\n      }\n\n      .together {\n        margin-top: 32px;\n      }\n\n      .intro {\n        font-family: var(--paper-font-subhead_-_font-family);\n        -webkit-font-smoothing: var(\n          --paper-font-subhead_-_-webkit-font-smoothing\n        );\n        font-weight: var(--paper-font-subhead_-_font-weight);\n        line-height: var(--paper-font-subhead_-_line-height);\n        width: 100%;\n        max-width: 400px;\n        margin-right: 40px;\n        opacity: var(--dark-primary-opacity);\n        font-size: 14px;\n        padding-bottom: 20px;\n      }\n\n      .panel {\n        margin-top: -24px;\n      }\n\n      .panel ::slotted(*) {\n        margin-top: 24px;\n        display: block;\n      }\n\n      .narrow.content {\n        max-width: 640px;\n      }\n      .narrow .together {\n        margin-top: 20px;\n      }\n      .narrow .intro {\n        padding-bottom: 20px;\n        margin-right: 0;\n        max-width: 500px;\n      }\n    `;\n  }\n}\n","import { HomeAssistant } from \"../types\";\n\nexport interface Person {\n  id: string;\n  name: string;\n  user_id?: string;\n  device_trackers?: string[];\n}\n\nexport interface PersonMutableParams {\n  name: string;\n  user_id: string | null;\n  device_trackers: string[];\n}\n\nexport const fetchPersons = (hass: HomeAssistant) =>\n  hass.callWS<{\n    storage: Person[];\n    config: Person[];\n  }>({ type: \"person/list\" });\n\nexport const createPerson = (\n  hass: HomeAssistant,\n  values: PersonMutableParams\n) =>\n  hass.callWS<Person>({\n    type: \"person/create\",\n    ...values,\n  });\n\nexport const updatePerson = (\n  hass: HomeAssistant,\n  personId: string,\n  updates: Partial<PersonMutableParams>\n) =>\n  hass.callWS<Person>({\n    type: \"person/update\",\n    person_id: personId,\n    ...updates,\n  });\n\nexport const deletePerson = (hass: HomeAssistant, personId: string) =>\n  hass.callWS({\n    type: \"person/delete\",\n    person_id: personId,\n  });\n","import { fireEvent } from \"../../../common/dom/fire_event\";\nimport { Person, PersonMutableParams } from \"../../../data/person\";\nimport { User } from \"../../../data/user\";\n\nexport interface PersonDetailDialogParams {\n  entry?: Person;\n  users: User[];\n  createEntry: (values: PersonMutableParams) => Promise<unknown>;\n  updateEntry: (updates: Partial<PersonMutableParams>) => Promise<unknown>;\n  removeEntry: () => Promise<boolean>;\n}\n\nexport const loadPersonDetailDialog = () =>\n  import(\n    /* webpackChunkName: \"person-detail-dialog\" */ \"./dialog-person-detail\"\n  );\n\nexport const showPersonDetailDialog = (\n  element: HTMLElement,\n  systemLogDetailParams: PersonDetailDialogParams\n): void => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-person-detail\",\n    dialogImport: loadPersonDetailDialog,\n    dialogParams: systemLogDetailParams,\n  });\n};\n","import {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-item/paper-item-body\";\n\nimport { HomeAssistant, Route } from \"../../../types\";\nimport {\n  Person,\n  fetchPersons,\n  updatePerson,\n  deletePerson,\n  createPerson,\n} from \"../../../data/person\";\nimport \"../../../components/ha-card\";\nimport \"../../../components/ha-fab\";\nimport \"../../../layouts/hass-tabs-subpage\";\nimport \"../../../layouts/hass-loading-screen\";\nimport { compare } from \"../../../common/string/compare\";\nimport \"../ha-config-section\";\nimport {\n  showPersonDetailDialog,\n  loadPersonDetailDialog,\n} from \"./show-dialog-person-detail\";\nimport { User, fetchUsers } from \"../../../data/user\";\nimport { configSections } from \"../ha-panel-config\";\n\nclass HaConfigPerson extends LitElement {\n  @property() public hass?: HomeAssistant;\n  @property() public isWide?: boolean;\n  @property() public narrow?: boolean;\n  @property() public route!: Route;\n  @property() private _storageItems?: Person[];\n  @property() private _configItems?: Person[];\n  private _usersLoad?: Promise<User[]>;\n\n  protected render(): TemplateResult {\n    if (\n      !this.hass ||\n      this._storageItems === undefined ||\n      this._configItems === undefined\n    ) {\n      return html`\n        <hass-loading-screen></hass-loading-screen>\n      `;\n    }\n    const hass = this.hass;\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .route=${this.route}\n        back-path=\"/config\"\n        .tabs=${configSections.persons}\n      >\n        <ha-config-section .isWide=${this.isWide}>\n          <span slot=\"header\"\n            >${hass.localize(\"ui.panel.config.person.caption\")}</span\n          >\n          <span slot=\"introduction\">\n            ${hass.localize(\"ui.panel.config.person.introduction\")}\n            ${this._configItems.length > 0\n              ? html`\n                  <p>\n                    ${hass.localize(\n                      \"ui.panel.config.person.note_about_persons_configured_in_yaml\"\n                    )}\n                  </p>\n                `\n              : \"\"}\n          </span>\n          <ha-card class=\"storage\">\n            ${this._storageItems.map((entry) => {\n              return html`\n                <paper-item @click=${this._openEditEntry} .entry=${entry}>\n                  <paper-item-body>\n                    ${entry.name}\n                  </paper-item-body>\n                </paper-item>\n              `;\n            })}\n            ${this._storageItems.length === 0\n              ? html`\n                  <div class=\"empty\">\n                    ${hass.localize(\n                      \"ui.panel.config.person.no_persons_created_yet\"\n                    )}\n                    <mwc-button @click=${this._createPerson}>\n                      ${hass.localize(\n                        \"ui.panel.config.person.create_person\"\n                      )}</mwc-button\n                    >\n                  </div>\n                `\n              : html``}\n          </ha-card>\n          ${this._configItems.length > 0\n            ? html`\n                <ha-card header=\"Configuration.yaml persons\">\n                  ${this._configItems.map((entry) => {\n                    return html`\n                      <paper-item>\n                        <paper-item-body>\n                          ${entry.name}\n                        </paper-item-body>\n                      </paper-item>\n                    `;\n                  })}\n                </ha-card>\n              `\n            : \"\"}\n        </ha-config-section>\n      </hass-tabs-subpage>\n\n      <ha-fab\n        ?is-wide=${this.isWide}\n        ?narrow=${this.narrow}\n        icon=\"hass:plus\"\n        title=\"${hass.localize(\"ui.panel.config.person.add_person\")}\"\n        @click=${this._createPerson}\n      ></ha-fab>\n    `;\n  }\n\n  protected firstUpdated(changedProps) {\n    super.firstUpdated(changedProps);\n    this._fetchData();\n    loadPersonDetailDialog();\n  }\n\n  private async _fetchData() {\n    this._usersLoad = fetchUsers(this.hass!);\n    const personData = await fetchPersons(this.hass!);\n\n    this._storageItems = personData.storage.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n    this._configItems = personData.config.sort((ent1, ent2) =>\n      compare(ent1.name, ent2.name)\n    );\n  }\n\n  private _createPerson() {\n    this._openDialog();\n  }\n\n  private _openEditEntry(ev: MouseEvent) {\n    const entry: Person = (ev.currentTarget! as any).entry;\n    this._openDialog(entry);\n  }\n\n  private _allowedUsers(users: User[], currentPerson?: Person) {\n    const used = new Set();\n    for (const coll of [this._configItems, this._storageItems]) {\n      for (const pers of coll!) {\n        if (pers.user_id) {\n          used.add(pers.user_id);\n        }\n      }\n    }\n    const currentUserId = currentPerson ? currentPerson.user_id : undefined;\n    return users.filter(\n      (user) => user.id === currentUserId || !used.has(user.id)\n    );\n  }\n\n  private async _openDialog(entry?: Person) {\n    const users = await this._usersLoad!;\n\n    showPersonDetailDialog(this, {\n      entry,\n      users: this._allowedUsers(users, entry),\n      createEntry: async (values) => {\n        const created = await createPerson(this.hass!, values);\n        this._storageItems = this._storageItems!.concat(\n          created\n        ).sort((ent1, ent2) => compare(ent1.name, ent2.name));\n      },\n      updateEntry: async (values) => {\n        const updated = await updatePerson(this.hass!, entry!.id, values);\n        this._storageItems = this._storageItems!.map((ent) =>\n          ent === entry ? updated : ent\n        );\n      },\n      removeEntry: async () => {\n        if (\n          !confirm(`${this.hass!.localize(\n            \"ui.panel.config.person.confirm_delete\"\n          )}\n\n${this.hass!.localize(\"ui.panel.config.person.confirm_delete2\")}`)\n        ) {\n          return false;\n        }\n\n        try {\n          await deletePerson(this.hass!, entry!.id);\n          this._storageItems = this._storageItems!.filter(\n            (ent) => ent !== entry\n          );\n          return true;\n        } catch (err) {\n          return false;\n        }\n      },\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      a {\n        color: var(--primary-color);\n      }\n      ha-card {\n        max-width: 600px;\n        margin: 16px auto;\n        overflow: hidden;\n      }\n      .empty {\n        text-align: center;\n        padding: 8px;\n      }\n      paper-item {\n        padding-top: 4px;\n        padding-bottom: 4px;\n      }\n      ha-card.storage paper-item {\n        cursor: pointer;\n      }\n      ha-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n      ha-fab[narrow] {\n        bottom: 84px;\n      }\n      ha-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-config-person\", HaConfigPerson);\n"],"sourceRoot":""}