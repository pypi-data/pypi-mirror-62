{"version":3,"sources":["webpack:///./src/components/ha-icon-input.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/panels/config/lovelace/dashboards/dialog-lovelace-dashboard-detail.ts"],"names":["_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HaIconInput","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","d","kind","decorators","property","key","value","attribute","type","Boolean","html","_templateObject","label","placeholder","_valueChanged","disabled","errorMessage","_templateObject2","ev","detail","fireEvent","bubbles","composed","static","css","_templateObject3","LitElement","MwcDialog","customElements","get","createCloseHeading","hass","title","localize","_MwcDialog","_MwcDialog2","HaDialog","style","DialogLovelaceDashboardDetail","_showDialog","_asyncToGenerator","regeneratorRuntime","mark","_callee","params","_this$_params$dashboa","_this$_params$dashboa2","wrap","_context","prev","next","_params","_error","undefined","dashboard","_urlPath","url_path","_showSidebar","sidebar","_sidebarIcon","icon","_sidebarTitle","_requireAdmin","require_admin","updateComplete","stop","_x","urlInvalid","test","_close","_showSidebarChanged","_templateObject4","_sidebarIconChanged","_sidebarTitleChanged","_fillUrlPath","_templateObject5","_urlChanged","_requireAdminChanged","_templateObject6","_deleteDashboard","_submitting","_templateObject7","_updateDashboard","parts","split","toLowerCase","target","checked","_updateDashboard2","_callee2","values","_context2","updateDashboard","trim","mode","createDashboard","t0","message","finish","_deleteDashboard2","_callee3","_context3","removeDashboard","sent","haStyleDialog","_templateObject8"],"mappings":"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","file":"chunk.9d85b3e376ff696a652d.js","sourcesContent":["import {\n  html,\n  css,\n  LitElement,\n  TemplateResult,\n  property,\n  customElement,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\nimport \"./ha-icon\";\nimport { fireEvent } from \"../common/dom/fire_event\";\n\n@customElement(\"ha-icon-input\")\nexport class HaIconInput extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public placeholder?: string;\n  @property({ attribute: \"error-message\" }) public errorMessage?: string;\n  @property({ type: Boolean }) public disabled = false;\n\n  protected render(): TemplateResult {\n    return html`\n      <paper-input\n        .value=${this.value}\n        .label=${this.label}\n        .placeholder=${this.placeholder}\n        @value-changed=${this._valueChanged}\n        .disabled=${this.disabled}\n        auto-validate\n        .errorMessage=${this.errorMessage}\n        pattern=\"^\\\\S+:\\\\S+$\"\n      >\n        ${this.value || this.placeholder\n          ? html`\n              <ha-icon .icon=${this.value || this.placeholder} slot=\"suffix\">\n              </ha-icon>\n            `\n          : \"\"}\n      </paper-input>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    this.value = ev.detail.value;\n    fireEvent(\n      this,\n      \"value-changed\",\n      { value: ev.detail.value },\n      {\n        bubbles: false,\n        composed: false,\n      }\n    );\n  }\n\n  static get styles() {\n    return css`\n      ha-icon {\n        position: relative;\n        bottom: 4px;\n      }\n    `;\n  }\n}\n","import { customElement, CSSResult, css, html } from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\n// tslint:disable-next-line\nimport { Dialog } from \"@material/mwc-dialog\";\nimport { Constructor, HomeAssistant } from \"../types\";\n// tslint:disable-next-line\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\nexport const createCloseHeading = (hass: HomeAssistant, title: string) => html`\n  ${title}\n  <paper-icon-button\n    aria-label=${hass.localize(\"ui.dialogs.generic.close\")}\n    icon=\"hass:close\"\n    dialogAction=\"close\"\n    class=\"close_button\"\n  ></paper-icon-button>\n`;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n        .mdc-dialog__title::before {\n          display: block;\n          height: 20px;\n        }\n        .close_button {\n          position: absolute;\n          right: 16px;\n          top: 12px;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../../../../components/ha-icon-input\";\nimport { HomeAssistant } from \"../../../../types\";\nimport {\n  LovelaceDashboard,\n  LovelaceDashboardMutableParams,\n  LovelaceDashboardCreateParams,\n} from \"../../../../data/lovelace\";\nimport { LovelaceDashboardDetailsDialogParams } from \"./show-dialog-lovelace-dashboard-detail\";\nimport { PolymerChangedEvent } from \"../../../../polymer-types\";\nimport { HaSwitch } from \"../../../../components/ha-switch\";\nimport { createCloseHeading } from \"../../../../components/ha-dialog\";\nimport { haStyleDialog } from \"../../../../resources/styles\";\n\n@customElement(\"dialog-lovelace-dashboard-detail\")\nexport class DialogLovelaceDashboardDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _params?: LovelaceDashboardDetailsDialogParams;\n  @property() private _urlPath!: LovelaceDashboard[\"url_path\"];\n  @property() private _showSidebar!: boolean;\n  @property() private _sidebarIcon!: string;\n  @property() private _sidebarTitle!: string;\n  @property() private _requireAdmin!: LovelaceDashboard[\"require_admin\"];\n\n  @property() private _error?: string;\n  @property() private _submitting = false;\n\n  public async showDialog(\n    params: LovelaceDashboardDetailsDialogParams\n  ): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.dashboard) {\n      this._urlPath = this._params.dashboard.url_path || \"\";\n      this._showSidebar = !!this._params.dashboard.sidebar;\n      this._sidebarIcon = this._params.dashboard.sidebar?.icon || \"\";\n      this._sidebarTitle = this._params.dashboard.sidebar?.title || \"\";\n      this._requireAdmin = this._params.dashboard.require_admin || false;\n    } else {\n      this._urlPath = \"\";\n      this._showSidebar = true;\n      this._sidebarIcon = \"\";\n      this._sidebarTitle = \"\";\n      this._requireAdmin = false;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const urlInvalid = !/^[a-zA-Z0-9_-]+$/.test(this._urlPath);\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction\n        escapeKeyAction\n        .heading=${createCloseHeading(\n          this.hass,\n          this._params.dashboard\n            ? this._sidebarTitle ||\n                this.hass!.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.edit_dashboard\"\n                )\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.new_dashboard\"\n              )\n        )}\n      >\n        <div>\n          ${this._error\n            ? html`\n                <div class=\"error\">${this._error}</div>\n              `\n            : \"\"}\n          <div class=\"form\">\n            <ha-switch\n              .checked=${this._showSidebar}\n              @change=${this._showSidebarChanged}\n              >${this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.show_sidebar\"\n              )}</ha-switch\n            >\n            ${this._showSidebar\n              ? html`\n                  <ha-icon-input\n                    .value=${this._sidebarIcon}\n                    @value-changed=${this._sidebarIconChanged}\n                    .label=${this.hass!.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.icon\"\n                    )}\n                  ></ha-icon-input>\n                  <paper-input\n                    .value=${this._sidebarTitle}\n                    @value-changed=${this._sidebarTitleChanged}\n                    .label=${this.hass!.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.title\"\n                    )}\n                    @blur=${this._fillUrlPath}\n                  ></paper-input>\n                `\n              : \"\"}\n            ${!this._params.dashboard\n              ? html`\n                  <paper-input\n                    .value=${this._urlPath}\n                    @value-changed=${this._urlChanged}\n                    .label=${this.hass!.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.url\"\n                    )}\n                    .errorMessage=${this.hass!.localize(\n                      \"ui.panel.config.lovelace.dashboards.detail.url_error_msg\"\n                    )}\n                    .invalid=${urlInvalid}\n                  ></paper-input>\n                `\n              : \"\"}\n            <ha-switch\n              .checked=${this._requireAdmin}\n              @change=${this._requireAdminChanged}\n              >${this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.require_admin\"\n              )}</ha-switch\n            >\n          </div>\n        </div>\n        ${this._params.dashboard\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=\"${this._deleteDashboard}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\n                  \"ui.panel.config.lovelace.dashboards.detail.delete\"\n                )}\n              </mwc-button>\n            `\n          : html``}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateDashboard}\"\n          .disabled=${urlInvalid || this._submitting}\n        >\n          ${this._params.dashboard\n            ? this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.update\"\n              )\n            : this.hass!.localize(\n                \"ui.panel.config.lovelace.dashboards.detail.create\"\n              )}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private _urlChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._urlPath = ev.detail.value;\n  }\n\n  private _sidebarIconChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._sidebarIcon = ev.detail.value;\n  }\n\n  private _sidebarTitleChanged(ev: PolymerChangedEvent<string>) {\n    this._error = undefined;\n    this._sidebarTitle = ev.detail.value;\n  }\n\n  private _fillUrlPath() {\n    if (this._urlPath) {\n      return;\n    }\n    const parts = this._sidebarTitle.split(\" \");\n\n    if (parts.length) {\n      this._urlPath = parts[0].toLowerCase();\n    }\n  }\n\n  private _showSidebarChanged(ev: Event) {\n    this._showSidebar = (ev.target as HaSwitch).checked;\n  }\n\n  private _requireAdminChanged(ev: Event) {\n    this._requireAdmin = (ev.target as HaSwitch).checked;\n  }\n\n  private async _updateDashboard() {\n    this._submitting = true;\n    try {\n      const values: Partial<LovelaceDashboardMutableParams> = {\n        require_admin: this._requireAdmin,\n        sidebar: this._showSidebar\n          ? { icon: this._sidebarIcon, title: this._sidebarTitle }\n          : null,\n      };\n      if (this._params!.dashboard) {\n        await this._params!.updateDashboard(values);\n      } else {\n        (values as LovelaceDashboardCreateParams).url_path = this._urlPath.trim();\n        (values as LovelaceDashboardCreateParams).mode = \"storage\";\n        await this._params!.createDashboard(\n          values as LovelaceDashboardCreateParams\n        );\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err?.message || \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteDashboard() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeDashboard()) {\n        this._close();\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      haStyleDialog,\n      css`\n        .form {\n          padding-bottom: 24px;\n        }\n        ha-switch {\n          padding: 16px 0;\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-lovelace-dashboard-detail\": DialogLovelaceDashboardDetail;\n  }\n}\n"],"sourceRoot":""}