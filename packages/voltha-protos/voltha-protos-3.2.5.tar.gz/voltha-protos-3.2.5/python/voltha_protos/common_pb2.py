# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: voltha_protos/common.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='voltha_protos/common.proto',
  package='common',
  syntax='proto3',
  serialized_options=b'\n\023org.opencord.volthaZ.github.com/opencord/voltha-protos/v3/go/common',
  serialized_pb=b'\n\x1avoltha_protos/common.proto\x12\x06\x63ommon\"\x10\n\x02ID\x12\n\n\x02id\x18\x01 \x01(\t\" \n\x03IDs\x12\x19\n\x05items\x18\x01 \x03(\x0b\x32\n.common.ID\"Y\n\x08LogLevel\"M\n\x05Types\x12\t\n\x05\x44\x45\x42UG\x10\x00\x12\x08\n\x04INFO\x10\x01\x12\x0b\n\x07WARNING\x10\x02\x12\t\n\x05\x45RROR\x10\x03\x12\x0c\n\x08\x43RITICAL\x10\x04\x12\t\n\x05\x46\x41TAL\x10\x05\"^\n\x07Logging\x12%\n\x05level\x18\x01 \x01(\x0e\x32\x16.common.LogLevel.Types\x12\x14\n\x0cpackage_name\x18\x02 \x01(\t\x12\x16\n\x0e\x63omponent_name\x18\x03 \x01(\t\"*\n\x10LoggingComponent\x12\x16\n\x0e\x63omponent_name\x18\x01 \x01(\t\"*\n\x08Loggings\x12\x1e\n\x05items\x18\x01 \x03(\x0b\x32\x0f.common.Logging\"u\n\nAdminState\"g\n\x05Types\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x12\n\x0ePREPROVISIONED\x10\x01\x12\x0b\n\x07\x45NABLED\x10\x02\x12\x0c\n\x08\x44ISABLED\x10\x03\x12\x15\n\x11\x44OWNLOADING_IMAGE\x10\x04\x12\x0b\n\x07\x44\x45LETED\x10\x05\"g\n\nOperStatus\"Y\n\x05Types\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0e\n\nDISCOVERED\x10\x01\x12\x0e\n\nACTIVATING\x10\x02\x12\x0b\n\x07TESTING\x10\x03\x12\n\n\x06\x41\x43TIVE\x10\x04\x12\n\n\x06\x46\x41ILED\x10\x05\"E\n\rConnectStatus\"4\n\x05Types\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0f\n\x0bUNREACHABLE\x10\x01\x12\r\n\tREACHABLE\x10\x02\"\xc1\x01\n\rOperationResp\x12\x37\n\x04\x63ode\x18\x01 \x01(\x0e\x32).common.OperationResp.OperationReturnCode\x12\x17\n\x0f\x61\x64\x64itional_info\x18\x02 \x01(\t\"^\n\x13OperationReturnCode\x12\x15\n\x11OPERATION_SUCCESS\x10\x00\x12\x15\n\x11OPERATION_FAILURE\x10\x01\x12\x19\n\x15OPERATION_UNSUPPORTED\x10\x02*\x1c\n\x0cTestModeKeys\x12\x0c\n\x08\x61pi_test\x10\x00\x42\x45\n\x13org.opencord.volthaZ.github.com/opencord/voltha-protos/v3/go/commonb\x06proto3'
)

_TESTMODEKEYS = _descriptor.EnumDescriptor(
  name='TestModeKeys',
  full_name='common.TestModeKeys',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='api_test', index=0, number=0,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=856,
  serialized_end=884,
)
_sym_db.RegisterEnumDescriptor(_TESTMODEKEYS)

TestModeKeys = enum_type_wrapper.EnumTypeWrapper(_TESTMODEKEYS)
api_test = 0


_LOGLEVEL_TYPES = _descriptor.EnumDescriptor(
  name='Types',
  full_name='common.LogLevel.Types',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DEBUG', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INFO', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='WARNING', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ERROR', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CRITICAL', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FATAL', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=102,
  serialized_end=179,
)
_sym_db.RegisterEnumDescriptor(_LOGLEVEL_TYPES)

_ADMINSTATE_TYPES = _descriptor.EnumDescriptor(
  name='Types',
  full_name='common.AdminState.Types',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PREPROVISIONED', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ENABLED', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISABLED', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DOWNLOADING_IMAGE', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DELETED', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=379,
  serialized_end=482,
)
_sym_db.RegisterEnumDescriptor(_ADMINSTATE_TYPES)

_OPERSTATUS_TYPES = _descriptor.EnumDescriptor(
  name='Types',
  full_name='common.OperStatus.Types',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DISCOVERED', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVATING', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TESTING', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTIVE', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED', index=5, number=5,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=498,
  serialized_end=587,
)
_sym_db.RegisterEnumDescriptor(_OPERSTATUS_TYPES)

_CONNECTSTATUS_TYPES = _descriptor.EnumDescriptor(
  name='Types',
  full_name='common.ConnectStatus.Types',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNREACHABLE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='REACHABLE', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=606,
  serialized_end=658,
)
_sym_db.RegisterEnumDescriptor(_CONNECTSTATUS_TYPES)

_OPERATIONRESP_OPERATIONRETURNCODE = _descriptor.EnumDescriptor(
  name='OperationReturnCode',
  full_name='common.OperationResp.OperationReturnCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OPERATION_SUCCESS', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATION_FAILURE', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPERATION_UNSUPPORTED', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=760,
  serialized_end=854,
)
_sym_db.RegisterEnumDescriptor(_OPERATIONRESP_OPERATIONRETURNCODE)


_ID = _descriptor.Descriptor(
  name='ID',
  full_name='common.ID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='common.ID.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=38,
  serialized_end=54,
)


_IDS = _descriptor.Descriptor(
  name='IDs',
  full_name='common.IDs',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='common.IDs.items', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=56,
  serialized_end=88,
)


_LOGLEVEL = _descriptor.Descriptor(
  name='LogLevel',
  full_name='common.LogLevel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LOGLEVEL_TYPES,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=90,
  serialized_end=179,
)


_LOGGING = _descriptor.Descriptor(
  name='Logging',
  full_name='common.Logging',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='level', full_name='common.Logging.level', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='package_name', full_name='common.Logging.package_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='component_name', full_name='common.Logging.component_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=181,
  serialized_end=275,
)


_LOGGINGCOMPONENT = _descriptor.Descriptor(
  name='LoggingComponent',
  full_name='common.LoggingComponent',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='component_name', full_name='common.LoggingComponent.component_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=277,
  serialized_end=319,
)


_LOGGINGS = _descriptor.Descriptor(
  name='Loggings',
  full_name='common.Loggings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='common.Loggings.items', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=321,
  serialized_end=363,
)


_ADMINSTATE = _descriptor.Descriptor(
  name='AdminState',
  full_name='common.AdminState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ADMINSTATE_TYPES,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=365,
  serialized_end=482,
)


_OPERSTATUS = _descriptor.Descriptor(
  name='OperStatus',
  full_name='common.OperStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OPERSTATUS_TYPES,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=484,
  serialized_end=587,
)


_CONNECTSTATUS = _descriptor.Descriptor(
  name='ConnectStatus',
  full_name='common.ConnectStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CONNECTSTATUS_TYPES,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=589,
  serialized_end=658,
)


_OPERATIONRESP = _descriptor.Descriptor(
  name='OperationResp',
  full_name='common.OperationResp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='common.OperationResp.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='additional_info', full_name='common.OperationResp.additional_info', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OPERATIONRESP_OPERATIONRETURNCODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=661,
  serialized_end=854,
)

_IDS.fields_by_name['items'].message_type = _ID
_LOGLEVEL_TYPES.containing_type = _LOGLEVEL
_LOGGING.fields_by_name['level'].enum_type = _LOGLEVEL_TYPES
_LOGGINGS.fields_by_name['items'].message_type = _LOGGING
_ADMINSTATE_TYPES.containing_type = _ADMINSTATE
_OPERSTATUS_TYPES.containing_type = _OPERSTATUS
_CONNECTSTATUS_TYPES.containing_type = _CONNECTSTATUS
_OPERATIONRESP.fields_by_name['code'].enum_type = _OPERATIONRESP_OPERATIONRETURNCODE
_OPERATIONRESP_OPERATIONRETURNCODE.containing_type = _OPERATIONRESP
DESCRIPTOR.message_types_by_name['ID'] = _ID
DESCRIPTOR.message_types_by_name['IDs'] = _IDS
DESCRIPTOR.message_types_by_name['LogLevel'] = _LOGLEVEL
DESCRIPTOR.message_types_by_name['Logging'] = _LOGGING
DESCRIPTOR.message_types_by_name['LoggingComponent'] = _LOGGINGCOMPONENT
DESCRIPTOR.message_types_by_name['Loggings'] = _LOGGINGS
DESCRIPTOR.message_types_by_name['AdminState'] = _ADMINSTATE
DESCRIPTOR.message_types_by_name['OperStatus'] = _OPERSTATUS
DESCRIPTOR.message_types_by_name['ConnectStatus'] = _CONNECTSTATUS
DESCRIPTOR.message_types_by_name['OperationResp'] = _OPERATIONRESP
DESCRIPTOR.enum_types_by_name['TestModeKeys'] = _TESTMODEKEYS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ID = _reflection.GeneratedProtocolMessageType('ID', (_message.Message,), {
  'DESCRIPTOR' : _ID,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.ID)
  })
_sym_db.RegisterMessage(ID)

IDs = _reflection.GeneratedProtocolMessageType('IDs', (_message.Message,), {
  'DESCRIPTOR' : _IDS,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.IDs)
  })
_sym_db.RegisterMessage(IDs)

LogLevel = _reflection.GeneratedProtocolMessageType('LogLevel', (_message.Message,), {
  'DESCRIPTOR' : _LOGLEVEL,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.LogLevel)
  })
_sym_db.RegisterMessage(LogLevel)

Logging = _reflection.GeneratedProtocolMessageType('Logging', (_message.Message,), {
  'DESCRIPTOR' : _LOGGING,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.Logging)
  })
_sym_db.RegisterMessage(Logging)

LoggingComponent = _reflection.GeneratedProtocolMessageType('LoggingComponent', (_message.Message,), {
  'DESCRIPTOR' : _LOGGINGCOMPONENT,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.LoggingComponent)
  })
_sym_db.RegisterMessage(LoggingComponent)

Loggings = _reflection.GeneratedProtocolMessageType('Loggings', (_message.Message,), {
  'DESCRIPTOR' : _LOGGINGS,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.Loggings)
  })
_sym_db.RegisterMessage(Loggings)

AdminState = _reflection.GeneratedProtocolMessageType('AdminState', (_message.Message,), {
  'DESCRIPTOR' : _ADMINSTATE,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.AdminState)
  })
_sym_db.RegisterMessage(AdminState)

OperStatus = _reflection.GeneratedProtocolMessageType('OperStatus', (_message.Message,), {
  'DESCRIPTOR' : _OPERSTATUS,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.OperStatus)
  })
_sym_db.RegisterMessage(OperStatus)

ConnectStatus = _reflection.GeneratedProtocolMessageType('ConnectStatus', (_message.Message,), {
  'DESCRIPTOR' : _CONNECTSTATUS,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.ConnectStatus)
  })
_sym_db.RegisterMessage(ConnectStatus)

OperationResp = _reflection.GeneratedProtocolMessageType('OperationResp', (_message.Message,), {
  'DESCRIPTOR' : _OPERATIONRESP,
  '__module__' : 'voltha_protos.common_pb2'
  # @@protoc_insertion_point(class_scope:common.OperationResp)
  })
_sym_db.RegisterMessage(OperationResp)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
