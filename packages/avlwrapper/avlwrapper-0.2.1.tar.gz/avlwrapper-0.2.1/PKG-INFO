Metadata-Version: 1.1
Name: avlwrapper
Version: 0.2.1
Summary: Python interface for MIT AVL (Athena Vortex Lattice)
Home-page: https://gitlab.com/relmendorp/avlwrapper
Author: Reno Elmendorp
Author-email: reno.elmendorp@protonmail.com
License: LICENSE
Description: AVLWrapper
        ==========
        
        Python interface for MIT AVL (Athena Vortex Lattice)
        
        Description
        -----------
        
        Currently implemented:
        
        -  Geometry definition
        -  Case definition
        -  Running operating-point run cases
        -  Results parsing
        
        Not implemented (yet):
        
        -  Mass definition
        -  Eigen-mode analyses
        -  Time-domain analyses
        
        Installation
        ------------
        
        AVLWrapper can be installed from pip:
        
        ::
        
           $ pip install avlwrapper
        
        Or can be installed from Git:
        
        ::
        
           $ pip install git+https://gitlab.com/relmendorp/avlwrapper.git@master
        
        Requirements
        ~~~~~~~~~~~~
        
        AVL (`link <http://web.mit.edu/drela/Public/web/avl/>`__) should be
        installed. If installed on a location in ``$PATH`` or in the module
        directory, the wrapper will locate it with the default configuration.
        See `Changing settings <#changing-settings>`__ how to change the
        executable path to a custom location.
        
        (optional) Ghostscript is required to save plots as PNG. Ghostscript can
        be installed on Linux/MacOS with a package manager:
        
        Linux:
        
        ::
        
           $ apt-get install ghostscript
        
        MacOS:
        
        ::
        
           $ brew install ghostscript
        
        For Windows, Ghostscript can be found on the
        `website <https://www.ghostscript.com>`__.
        
        Usage
        -----
        
        For usage examples, see the ``example.ipynb`` notebook.
        
        Changing settings
        -----------------
        
        To change settings, make a local copy of the settings file:
        
        .. code:: python
        
           from avlwrapper import default_config
           default_config.local_copy()
        
        By default the wrapper will look for a configuration file in the working
        directory and module directory. If you would like to use a different
        configuration file, you need to give the path to the session:
        
        .. code:: python
        
           from avlwrapper import Configuration
           my_config = Configuration(path_to_file)
           session = Session(..., config=my_config)
        
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Programming Language :: Python
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering
Classifier: License :: OSI Approved :: GNU General Public License v3 (GPLv3)
Classifier: Operating System :: OS Independent
