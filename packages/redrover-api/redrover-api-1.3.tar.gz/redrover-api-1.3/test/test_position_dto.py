# coding: utf-8

"""
    Red Rover API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v1
    Contact: contact@edustaff.org
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import redrover_api
from redrover_api.models.position_dto import PositionDto  # noqa: E501
from redrover_api.rest import ApiException

class TestPositionDto(unittest.TestCase):
    """PositionDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PositionDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = redrover_api.models.position_dto.PositionDto()  # noqa: E501
        if include_optional :
            return PositionDto(
                org_id = 56, 
                id = 56, 
                external_id = '0', 
                position_type = redrover_api.models.locator[int32].Locator[Int32](
                    id = 56, 
                    external_id = '0', ), 
                position_type_id = 56, 
                contract = redrover_api.models.locator[int32].Locator[Int32](
                    id = 56, 
                    external_id = '0', ), 
                contract_id = 56, 
                title = '0', 
                hours_per_full_work_day = 1.337, 
                needs_replacement = 0, 
                schedules = [
                    redrover_api.models.position_schedule.PositionSchedule(
                        items = [
                            redrover_api.models.position_schedule_item.PositionScheduleItem(
                                location = redrover_api.models.locator[int32].Locator[Int32](
                                    id = 56, 
                                    external_id = '0', ), 
                                location_id = 56, 
                                bell_schedule = redrover_api.models.locator[int32].Locator[Int32](
                                    id = 56, 
                                    external_id = '0', ), 
                                bell_schedule_id = 56, 
                                start_period = redrover_api.models.locator[int32].Locator[Int32](
                                    id = 56, 
                                    external_id = '0', ), 
                                start_period_id = 56, 
                                end_period = redrover_api.models.locator[int32].Locator[Int32](
                                    id = 56, 
                                    external_id = '0', ), 
                                end_period_id = 56, 
                                start_time = '0', 
                                end_time = '0', 
                                next_start_time = '0', )
                            ], 
                        days_of_the_week = [
                            0
                            ], )
                    ], 
                accounting_code_allocations = [
                    redrover_api.models.position_accounting_code.PositionAccountingCode(
                        accounting_code_id = 56, 
                        allocation = 1.337, )
                    ], 
                replacement_criteria = redrover_api.models.replacement_criteria.ReplacementCriteria(
                    org_id = 56, 
                    must_have = [
                        redrover_api.models.locator[int32].Locator[Int32](
                            id = 56, 
                            external_id = '0', )
                        ], 
                    must_have_ids = [
                        56
                        ], 
                    should_have = [
                        redrover_api.models.locator[int32].Locator[Int32](
                            id = 56, 
                            external_id = '0', )
                        ], 
                    should_have_ids = [
                        56
                        ], 
                    should_not_have = [
                        redrover_api.models.locator[int32].Locator[Int32](
                            id = 56, 
                            external_id = '0', )
                        ], 
                    should_not_have_ids = [
                        56
                        ], 
                    must_not_have = [
                        redrover_api.models.locator[int32].Locator[Int32](
                            id = 56, 
                            external_id = '0', )
                        ], 
                    must_not_have_ids = [
                        56
                        ], )
            )
        else :
            return PositionDto(
        )

    def testPositionDto(self):
        """Test PositionDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
