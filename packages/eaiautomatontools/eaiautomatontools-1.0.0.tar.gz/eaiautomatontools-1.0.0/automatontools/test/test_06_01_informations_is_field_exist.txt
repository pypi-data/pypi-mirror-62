automatontools.information.is_field_exist
=======================
Present the information utilities for Selenium automaton.
The is_field_exist method return a web element if the field is found or None if not found.


Background
------------------------
Launch a test web server serving controlled web pages on localhost port 8081

Use the python resources server.

    >>> from eaiautomatontools.resources.server import TestServer

    >>> myserver = TestServer()

    >>> myserver.start()

Instantiate a web driver using the eaiautomatontools.browserServer

    >>> from eaiautomatontools.browserServer import BrowserServer

    >>> myWebDriver = BrowserServer()

Use a default browser such as Chrome in 32 bit version

    >>> myWebDriver.set_browser_type(name="chrome", version="32")
    0

Serve the web driver
    >>> myWebDriver.serve()
    0

Open the form test page
    >>> myWebDriver.go_to("http://127.0.0.1:8081")
    0

Import the information tool
    >>> from eaiautomatontools.information import is_field_exist


Nominal case: give a web driver
------------------------------------
a - The field exists and is unique
    >>> element = is_field_exist(driver=myWebDriver.get(),field={"type":"id","value":"myIFrame"})

    >>> print(element) # doctest: +ELLIPSIS
    <selenium.webdriver.remote.webelement.WebElement ...

b - The field doesn't exist
    >>> element = is_field_exist(driver=myWebDriver.get(),field={"type":"id","value":"myIFramed"})

    >>> print(element)
    None

c - The field exist and is not unique
     >>> element = is_field_exist(driver=myWebDriver.get(),field={"type":"tag_name","value":"div"})

    >>> print(element) # doctest: +ELLIPSIS
    <selenium.webdriver.remote.webelement.WebElement ...

Assertions
------------------------------------
The web driver is mandatory
    >>> is_field_exist()
    Traceback (most recent call last):
    ...
    AssertionError: Driver is expected.


Teardown
------------------------------
    >>> myWebDriver.close()
    0

    >>> myWebDriver = None

    >>> myserver.stop()

    >>> myserver = None
