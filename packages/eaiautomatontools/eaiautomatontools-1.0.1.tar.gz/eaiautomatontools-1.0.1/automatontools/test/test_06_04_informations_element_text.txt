automatontools.information.element_text
=======================
Present the information utilities for Selenium automaton.
The element_text method returns:
    - the field text or its value if only one of them is set or both have the same text
    - '' if there is no text or value
    - an Exception if the text and the value differs.



Background
------------------------
Launch a test web server serving controlled web pages on localhost port 8081

Use the python resources server.

    >>> from automatontools.resources.server import TestServer

    >>> myserver = TestServer()

    >>> myserver.start()

Instantiate a web driver using the eaiautomatontools.browserServer

    >>> from automatontools.browserServer import BrowserServer

    >>> myWebDriver = BrowserServer()

Use a default browser such as Chrome in 32 bit version

    >>> myWebDriver.set_browser_type(name="chrome", version="32")
    0

Serve the web driver
    >>> myWebDriver.serve()
    0

Open the form test page
    >>> myWebDriver.go_to("http://127.0.0.1:8081/forms.html")
    0

Import the fill field tool
    >>> from eaiautomatontools.actions import fill_element

Import the information tool
    >>> from eaiautomatontools.information import element_text


Nominal case: give a web driver
------------------------------------
a - The field text exist but not the value
    >>> element_text(driver=myWebDriver.get(), field={"type":"id", "value":"lab-name"})
    'Enter your name:'

b - The field text doesn't exist but the value exists
    >>> element_text(driver=myWebDriver.get(), field={"type":"id", "value":"labelless-button"})
    'label'

c - Both the field text and the value exit and the text are the same
    >>> element_text(driver=myWebDriver.get(), field={"type":"id", "value":"email"})
    'Your.mail@he.re'

d - There is no text or attribute 'value'
    >>> element_text(driver=myWebDriver.get(), field={"type":"id", "value":"span"})
    ''

Assertions
------------------------------------
The web driver is mandatory
    >>> element_text()
    Traceback (most recent call last):
    ...
    AssertionError: Driver is expected.


Exception
------------------------------------
    >>> element_text(driver=myWebDriver.get(), field={"type":"id", "value":"one-button"})
    Traceback (most recent call last):
    ...
    Exception: Can't serve the element 'text' having both data for text and attribute value




Teardown
------------------------------
    >>> myWebDriver.close()
    0

    >>> myWebDriver = None

    >>> myserver.stop()

    >>> myserver = None
