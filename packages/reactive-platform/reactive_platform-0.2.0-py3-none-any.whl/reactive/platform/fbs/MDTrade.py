# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers

class MDTrade(object):
    __slots__ = ['_tab']

    # MDTrade
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MDTrade
    def TransTs(self): return self._tab.Get(flatbuffers.number_types.Int64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(0))
    # MDTrade
    def Side(self): return self._tab.Get(flatbuffers.number_types.Int16Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(8))
    # MDTrade
    def Qty(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(16))
    # MDTrade
    def Price(self): return self._tab.Get(flatbuffers.number_types.Float64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(24))

def CreateMDTrade(builder, transTs, side, qty, price):
    builder.Prep(8, 32)
    builder.PrependFloat64(price)
    builder.PrependFloat64(qty)
    builder.Pad(6)
    builder.PrependInt16(side)
    builder.PrependInt64(transTs)
    return builder.Offset()
