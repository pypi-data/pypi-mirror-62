# automatically generated by the FlatBuffers compiler, do not modify

# namespace: fbs

import flatbuffers

class MarketDataRequestReject(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsMarketDataRequestReject(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MarketDataRequestReject()
        x.Init(buf, n + offset)
        return x

    # MarketDataRequestReject
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MarketDataRequestReject
    def MdReqId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # MarketDataRequestReject
    def ErrorCode(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # MarketDataRequestReject
    def ErrorMessage(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def MarketDataRequestRejectStart(builder): builder.StartObject(3)
def MarketDataRequestRejectAddMdReqId(builder, mdReqId): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(mdReqId), 0)
def MarketDataRequestRejectAddErrorCode(builder, errorCode): builder.PrependInt32Slot(1, errorCode, 0)
def MarketDataRequestRejectAddErrorMessage(builder, errorMessage): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(errorMessage), 0)
def MarketDataRequestRejectEnd(builder): return builder.EndObject()
