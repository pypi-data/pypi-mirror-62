"""
Main interface for cloudfront service type definitions.

Usage::

    from mypy_boto3.cloudfront.type_defs import ClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef

    data: ClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef = {...}
"""
from datetime import datetime
import sys
from typing import List

if sys.version_info >= (3, 8):
    from typing import Literal
else:
    from typing_extensions import Literal
if sys.version_info >= (3, 8):
    from typing import TypedDict
else:
    from typing_extensions import TypedDict


__all__ = (
    "ClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    "ClientCreateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    "ClientCreateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef",
    "ClientCreateCloudFrontOriginAccessIdentityResponseTypeDef",
    "ClientCreateDistributionDistributionConfigAliasesTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    "ClientCreateDistributionDistributionConfigCacheBehaviorsTypeDef",
    "ClientCreateDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    "ClientCreateDistributionDistributionConfigCustomErrorResponsesTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    "ClientCreateDistributionDistributionConfigLoggingTypeDef",
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsTypeDef",
    "ClientCreateDistributionDistributionConfigOriginGroupsTypeDef",
    "ClientCreateDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    "ClientCreateDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    "ClientCreateDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientCreateDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    "ClientCreateDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    "ClientCreateDistributionDistributionConfigOriginsItemsTypeDef",
    "ClientCreateDistributionDistributionConfigOriginsTypeDef",
    "ClientCreateDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    "ClientCreateDistributionDistributionConfigRestrictionsTypeDef",
    "ClientCreateDistributionDistributionConfigViewerCertificateTypeDef",
    "ClientCreateDistributionDistributionConfigTypeDef",
    "ClientCreateDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    "ClientCreateDistributionResponseDistributionActiveTrustedSignersItemsTypeDef",
    "ClientCreateDistributionResponseDistributionActiveTrustedSignersTypeDef",
    "ClientCreateDistributionResponseDistributionAliasICPRecordalsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigAliasesTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigLoggingTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigRestrictionsTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef",
    "ClientCreateDistributionResponseDistributionDistributionConfigTypeDef",
    "ClientCreateDistributionResponseDistributionTypeDef",
    "ClientCreateDistributionResponseTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigAliasesTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCustomErrorResponsesItemsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCustomErrorResponsesTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigLoggingTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsMembersTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomHeadersTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigRestrictionsGeoRestrictionTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigRestrictionsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigViewerCertificateTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsTagsItemsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsTagsTypeDef",
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersItemsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionAliasICPRecordalsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigAliasesTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCustomErrorResponsesTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigLoggingTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigRestrictionsTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigViewerCertificateTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigTypeDef",
    "ClientCreateDistributionWithTagsResponseDistributionTypeDef",
    "ClientCreateDistributionWithTagsResponseTypeDef",
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef",
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef",
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionTypeDef",
    "ClientCreateFieldLevelEncryptionConfigResponseTypeDef",
    "ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    "ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    "ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    "ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef",
    "ClientCreateFieldLevelEncryptionProfileResponseTypeDef",
    "ClientCreateInvalidationInvalidationBatchPathsTypeDef",
    "ClientCreateInvalidationInvalidationBatchTypeDef",
    "ClientCreateInvalidationResponseInvalidationInvalidationBatchPathsTypeDef",
    "ClientCreateInvalidationResponseInvalidationInvalidationBatchTypeDef",
    "ClientCreateInvalidationResponseInvalidationTypeDef",
    "ClientCreateInvalidationResponseTypeDef",
    "ClientCreatePublicKeyPublicKeyConfigTypeDef",
    "ClientCreatePublicKeyResponsePublicKeyPublicKeyConfigTypeDef",
    "ClientCreatePublicKeyResponsePublicKeyTypeDef",
    "ClientCreatePublicKeyResponseTypeDef",
    "ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    "ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef",
    "ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef",
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef",
    "ClientCreateStreamingDistributionResponseStreamingDistributionTypeDef",
    "ClientCreateStreamingDistributionResponseTypeDef",
    "ClientCreateStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    "ClientCreateStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    "ClientCreateStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    "ClientCreateStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    "ClientCreateStreamingDistributionStreamingDistributionConfigTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersItemsTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionTypeDef",
    "ClientCreateStreamingDistributionWithTagsResponseTypeDef",
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigAliasesTypeDef",
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigLoggingTypeDef",
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigS3OriginTypeDef",
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTrustedSignersTypeDef",
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTypeDef",
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTagsItemsTypeDef",
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTagsTypeDef",
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef",
    "ClientGetCloudFrontOriginAccessIdentityConfigResponseCloudFrontOriginAccessIdentityConfigTypeDef",
    "ClientGetCloudFrontOriginAccessIdentityConfigResponseTypeDef",
    "ClientGetCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    "ClientGetCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef",
    "ClientGetCloudFrontOriginAccessIdentityResponseTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigAliasesTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCustomErrorResponsesItemsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigCustomErrorResponsesTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigLoggingTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsMembersTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomHeadersTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigOriginsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigRestrictionsGeoRestrictionTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigRestrictionsTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigViewerCertificateTypeDef",
    "ClientGetDistributionConfigResponseDistributionConfigTypeDef",
    "ClientGetDistributionConfigResponseTypeDef",
    "ClientGetDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    "ClientGetDistributionResponseDistributionActiveTrustedSignersItemsTypeDef",
    "ClientGetDistributionResponseDistributionActiveTrustedSignersTypeDef",
    "ClientGetDistributionResponseDistributionAliasICPRecordalsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigAliasesTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigLoggingTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigRestrictionsTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef",
    "ClientGetDistributionResponseDistributionDistributionConfigTypeDef",
    "ClientGetDistributionResponseDistributionTypeDef",
    "ClientGetDistributionResponseTypeDef",
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigTypeDef",
    "ClientGetFieldLevelEncryptionConfigResponseTypeDef",
    "ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    "ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    "ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    "ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigTypeDef",
    "ClientGetFieldLevelEncryptionProfileConfigResponseTypeDef",
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef",
    "ClientGetFieldLevelEncryptionProfileResponseTypeDef",
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef",
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionTypeDef",
    "ClientGetFieldLevelEncryptionResponseTypeDef",
    "ClientGetInvalidationResponseInvalidationInvalidationBatchPathsTypeDef",
    "ClientGetInvalidationResponseInvalidationInvalidationBatchTypeDef",
    "ClientGetInvalidationResponseInvalidationTypeDef",
    "ClientGetInvalidationResponseTypeDef",
    "ClientGetPublicKeyConfigResponsePublicKeyConfigTypeDef",
    "ClientGetPublicKeyConfigResponseTypeDef",
    "ClientGetPublicKeyResponsePublicKeyPublicKeyConfigTypeDef",
    "ClientGetPublicKeyResponsePublicKeyTypeDef",
    "ClientGetPublicKeyResponseTypeDef",
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigAliasesTypeDef",
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigLoggingTypeDef",
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigS3OriginTypeDef",
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigTrustedSignersTypeDef",
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigTypeDef",
    "ClientGetStreamingDistributionConfigResponseTypeDef",
    "ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    "ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef",
    "ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef",
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef",
    "ClientGetStreamingDistributionResponseStreamingDistributionTypeDef",
    "ClientGetStreamingDistributionResponseTypeDef",
    "ClientListCloudFrontOriginAccessIdentitiesResponseCloudFrontOriginAccessIdentityListItemsTypeDef",
    "ClientListCloudFrontOriginAccessIdentitiesResponseCloudFrontOriginAccessIdentityListTypeDef",
    "ClientListCloudFrontOriginAccessIdentitiesResponseTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsAliasICPRecordalsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsAliasesTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCustomErrorResponsesItemsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCustomErrorResponsesTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsMembersItemsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsMembersTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomHeadersItemsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomHeadersTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomOriginConfigTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsS3OriginConfigTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsRestrictionsGeoRestrictionTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsRestrictionsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsViewerCertificateTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsTypeDef",
    "ClientListDistributionsByWebAclIdResponseDistributionListTypeDef",
    "ClientListDistributionsByWebAclIdResponseTypeDef",
    "ClientListDistributionsResponseDistributionListItemsAliasICPRecordalsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsAliasesTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCustomErrorResponsesItemsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsCustomErrorResponsesTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsMembersItemsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsMembersTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomHeadersItemsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomHeadersTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomOriginConfigTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsS3OriginConfigTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsOriginsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsRestrictionsGeoRestrictionTypeDef",
    "ClientListDistributionsResponseDistributionListItemsRestrictionsTypeDef",
    "ClientListDistributionsResponseDistributionListItemsViewerCertificateTypeDef",
    "ClientListDistributionsResponseDistributionListItemsTypeDef",
    "ClientListDistributionsResponseDistributionListTypeDef",
    "ClientListDistributionsResponseTypeDef",
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigContentTypeProfilesTypeDef",
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigTypeDef",
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigQueryArgProfilesTypeDef",
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigTypeDef",
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsTypeDef",
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListTypeDef",
    "ClientListFieldLevelEncryptionConfigsResponseTypeDef",
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesItemsFieldPatternsTypeDef",
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesItemsTypeDef",
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesTypeDef",
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsTypeDef",
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListTypeDef",
    "ClientListFieldLevelEncryptionProfilesResponseTypeDef",
    "ClientListInvalidationsResponseInvalidationListItemsTypeDef",
    "ClientListInvalidationsResponseInvalidationListTypeDef",
    "ClientListInvalidationsResponseTypeDef",
    "ClientListPublicKeysResponsePublicKeyListItemsTypeDef",
    "ClientListPublicKeysResponsePublicKeyListTypeDef",
    "ClientListPublicKeysResponseTypeDef",
    "ClientListStreamingDistributionsResponseStreamingDistributionListItemsAliasesTypeDef",
    "ClientListStreamingDistributionsResponseStreamingDistributionListItemsS3OriginTypeDef",
    "ClientListStreamingDistributionsResponseStreamingDistributionListItemsTrustedSignersTypeDef",
    "ClientListStreamingDistributionsResponseStreamingDistributionListItemsTypeDef",
    "ClientListStreamingDistributionsResponseStreamingDistributionListTypeDef",
    "ClientListStreamingDistributionsResponseTypeDef",
    "ClientListTagsForResourceResponseTagsItemsTypeDef",
    "ClientListTagsForResourceResponseTagsTypeDef",
    "ClientListTagsForResourceResponseTypeDef",
    "ClientTagResourceTagsItemsTypeDef",
    "ClientTagResourceTagsTypeDef",
    "ClientUntagResourceTagKeysTypeDef",
    "ClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    "ClientUpdateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    "ClientUpdateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef",
    "ClientUpdateCloudFrontOriginAccessIdentityResponseTypeDef",
    "ClientUpdateDistributionDistributionConfigAliasesTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsTypeDef",
    "ClientUpdateDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    "ClientUpdateDistributionDistributionConfigCustomErrorResponsesTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    "ClientUpdateDistributionDistributionConfigLoggingTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginGroupsTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginsItemsTypeDef",
    "ClientUpdateDistributionDistributionConfigOriginsTypeDef",
    "ClientUpdateDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    "ClientUpdateDistributionDistributionConfigRestrictionsTypeDef",
    "ClientUpdateDistributionDistributionConfigViewerCertificateTypeDef",
    "ClientUpdateDistributionDistributionConfigTypeDef",
    "ClientUpdateDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    "ClientUpdateDistributionResponseDistributionActiveTrustedSignersItemsTypeDef",
    "ClientUpdateDistributionResponseDistributionActiveTrustedSignersTypeDef",
    "ClientUpdateDistributionResponseDistributionAliasICPRecordalsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigAliasesTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigLoggingTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigRestrictionsTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef",
    "ClientUpdateDistributionResponseDistributionDistributionConfigTypeDef",
    "ClientUpdateDistributionResponseDistributionTypeDef",
    "ClientUpdateDistributionResponseTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionTypeDef",
    "ClientUpdateFieldLevelEncryptionConfigResponseTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef",
    "ClientUpdateFieldLevelEncryptionProfileResponseTypeDef",
    "ClientUpdatePublicKeyPublicKeyConfigTypeDef",
    "ClientUpdatePublicKeyResponsePublicKeyPublicKeyConfigTypeDef",
    "ClientUpdatePublicKeyResponsePublicKeyTypeDef",
    "ClientUpdatePublicKeyResponseTypeDef",
    "ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    "ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef",
    "ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef",
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef",
    "ClientUpdateStreamingDistributionResponseStreamingDistributionTypeDef",
    "ClientUpdateStreamingDistributionResponseTypeDef",
    "ClientUpdateStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    "ClientUpdateStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    "ClientUpdateStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    "ClientUpdateStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    "ClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef",
    "CloudFrontOriginAccessIdentitySummaryTypeDef",
    "CloudFrontOriginAccessIdentityListTypeDef",
    "ListCloudFrontOriginAccessIdentitiesResultTypeDef",
    "AliasICPRecordalTypeDef",
    "AliasesTypeDef",
    "CachedMethodsTypeDef",
    "AllowedMethodsTypeDef",
    "CookieNamesTypeDef",
    "CookiePreferenceTypeDef",
    "HeadersTypeDef",
    "QueryStringCacheKeysTypeDef",
    "ForwardedValuesTypeDef",
    "LambdaFunctionAssociationTypeDef",
    "LambdaFunctionAssociationsTypeDef",
    "TrustedSignersTypeDef",
    "CacheBehaviorTypeDef",
    "CacheBehaviorsTypeDef",
    "CustomErrorResponseTypeDef",
    "CustomErrorResponsesTypeDef",
    "DefaultCacheBehaviorTypeDef",
    "StatusCodesTypeDef",
    "OriginGroupFailoverCriteriaTypeDef",
    "OriginGroupMemberTypeDef",
    "OriginGroupMembersTypeDef",
    "OriginGroupTypeDef",
    "OriginGroupsTypeDef",
    "OriginCustomHeaderTypeDef",
    "CustomHeadersTypeDef",
    "OriginSslProtocolsTypeDef",
    "CustomOriginConfigTypeDef",
    "S3OriginConfigTypeDef",
    "OriginTypeDef",
    "OriginsTypeDef",
    "GeoRestrictionTypeDef",
    "RestrictionsTypeDef",
    "ViewerCertificateTypeDef",
    "DistributionSummaryTypeDef",
    "DistributionListTypeDef",
    "ListDistributionsResultTypeDef",
    "InvalidationSummaryTypeDef",
    "InvalidationListTypeDef",
    "ListInvalidationsResultTypeDef",
    "S3OriginTypeDef",
    "StreamingDistributionSummaryTypeDef",
    "StreamingDistributionListTypeDef",
    "ListStreamingDistributionsResultTypeDef",
    "PaginatorConfigTypeDef",
    "WaiterConfigTypeDef",
)

_RequiredClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef = TypedDict(
    "_RequiredClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    {"CallerReference": str},
)
_OptionalClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef = TypedDict(
    "_OptionalClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    {"Comment": str},
    total=False,
)


class ClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef(
    _RequiredClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
    _OptionalClientCreateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
):
    pass


ClientCreateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef = TypedDict(
    "ClientCreateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    {"CallerReference": str, "Comment": str},
    total=False,
)

ClientCreateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef = TypedDict(
    "ClientCreateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef",
    {
        "Id": str,
        "S3CanonicalUserId": str,
        "CloudFrontOriginAccessIdentityConfig": ClientCreateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
    },
    total=False,
)

ClientCreateCloudFrontOriginAccessIdentityResponseTypeDef = TypedDict(
    "ClientCreateCloudFrontOriginAccessIdentityResponseTypeDef",
    {
        "CloudFrontOriginAccessIdentity": ClientCreateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef,
        "Location": str,
        "ETag": str,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigAliasesTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientCreateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientCreateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientCreateDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientCreateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientCreateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigCacheBehaviorsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[ClientCreateDistributionDistributionConfigCacheBehaviorsItemsTypeDef],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientCreateDistributionDistributionConfigCustomErrorResponsesTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[ClientCreateDistributionDistributionConfigCustomErrorResponsesItemsTypeDef],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionDistributionConfigDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigLoggingTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "IncludeCookies": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientCreateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientCreateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientCreateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientCreateDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientCreateDistributionDistributionConfigOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigOriginGroupsItemsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientCreateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientCreateDistributionDistributionConfigOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigOriginGroupsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[ClientCreateDistributionDistributionConfigOriginGroupsItemsTypeDef],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientCreateDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientCreateDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientCreateDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientCreateDistributionDistributionConfigOriginsItemsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientCreateDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientCreateDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientCreateDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientCreateDistributionDistributionConfigOriginsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigOriginsTypeDef",
    {"Quantity": int, "Items": List[ClientCreateDistributionDistributionConfigOriginsItemsTypeDef]},
    total=False,
)

ClientCreateDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientCreateDistributionDistributionConfigRestrictionsTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigRestrictionsTypeDef",
    {"GeoRestriction": ClientCreateDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef},
    total=False,
)

ClientCreateDistributionDistributionConfigViewerCertificateTypeDef = TypedDict(
    "ClientCreateDistributionDistributionConfigViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

_RequiredClientCreateDistributionDistributionConfigTypeDef = TypedDict(
    "_RequiredClientCreateDistributionDistributionConfigTypeDef", {"CallerReference": str}
)
_OptionalClientCreateDistributionDistributionConfigTypeDef = TypedDict(
    "_OptionalClientCreateDistributionDistributionConfigTypeDef",
    {
        "Aliases": ClientCreateDistributionDistributionConfigAliasesTypeDef,
        "DefaultRootObject": str,
        "Origins": ClientCreateDistributionDistributionConfigOriginsTypeDef,
        "OriginGroups": ClientCreateDistributionDistributionConfigOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientCreateDistributionDistributionConfigDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientCreateDistributionDistributionConfigCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientCreateDistributionDistributionConfigCustomErrorResponsesTypeDef,
        "Comment": str,
        "Logging": ClientCreateDistributionDistributionConfigLoggingTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientCreateDistributionDistributionConfigViewerCertificateTypeDef,
        "Restrictions": ClientCreateDistributionDistributionConfigRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
    },
    total=False,
)


class ClientCreateDistributionDistributionConfigTypeDef(
    _RequiredClientCreateDistributionDistributionConfigTypeDef,
    _OptionalClientCreateDistributionDistributionConfigTypeDef,
):
    pass


ClientCreateDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionActiveTrustedSignersItemsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionActiveTrustedSignersItemsTypeDef",
    {
        "AwsAccountNumber": str,
        "KeyPairIds": ClientCreateDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionActiveTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionActiveTrustedSignersTypeDef",
    {
        "Enabled": bool,
        "Quantity": int,
        "Items": List[ClientCreateDistributionResponseDistributionActiveTrustedSignersItemsTypeDef],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionAliasICPRecordalsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionAliasICPRecordalsTypeDef",
    {"CNAME": str, "ICPRecordalStatus": Literal["APPROVED", "SUSPENDED", "PENDING"]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigAliasesTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigLoggingTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "IncludeCookies": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigOriginsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigOriginsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigRestrictionsTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigRestrictionsTypeDef",
    {
        "GeoRestriction": ClientCreateDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

ClientCreateDistributionResponseDistributionDistributionConfigTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "Aliases": ClientCreateDistributionResponseDistributionDistributionConfigAliasesTypeDef,
        "DefaultRootObject": str,
        "Origins": ClientCreateDistributionResponseDistributionDistributionConfigOriginsTypeDef,
        "OriginGroups": ClientCreateDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientCreateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientCreateDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientCreateDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef,
        "Comment": str,
        "Logging": ClientCreateDistributionResponseDistributionDistributionConfigLoggingTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientCreateDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef,
        "Restrictions": ClientCreateDistributionResponseDistributionDistributionConfigRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
    },
    total=False,
)

ClientCreateDistributionResponseDistributionTypeDef = TypedDict(
    "ClientCreateDistributionResponseDistributionTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "InProgressInvalidationBatches": int,
        "DomainName": str,
        "ActiveTrustedSigners": ClientCreateDistributionResponseDistributionActiveTrustedSignersTypeDef,
        "DistributionConfig": ClientCreateDistributionResponseDistributionDistributionConfigTypeDef,
        "AliasICPRecordals": List[
            ClientCreateDistributionResponseDistributionAliasICPRecordalsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionResponseTypeDef = TypedDict(
    "ClientCreateDistributionResponseTypeDef",
    {
        "Distribution": ClientCreateDistributionResponseDistributionTypeDef,
        "Location": str,
        "ETag": str,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigAliasesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCustomErrorResponsesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCustomErrorResponsesItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigLoggingTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "IncludeCookies": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigRestrictionsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigRestrictionsTypeDef",
    {
        "GeoRestriction": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigRestrictionsGeoRestrictionTypeDef
    },
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigViewerCertificateTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

_RequiredClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigTypeDef = TypedDict(
    "_RequiredClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigTypeDef",
    {"CallerReference": str},
)
_OptionalClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigTypeDef = TypedDict(
    "_OptionalClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigTypeDef",
    {
        "Aliases": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigAliasesTypeDef,
        "DefaultRootObject": str,
        "Origins": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginsTypeDef,
        "OriginGroups": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigCustomErrorResponsesTypeDef,
        "Comment": str,
        "Logging": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigLoggingTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigViewerCertificateTypeDef,
        "Restrictions": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
    },
    total=False,
)


class ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigTypeDef(
    _RequiredClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigTypeDef,
    _OptionalClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigTypeDef,
):
    pass


ClientCreateDistributionWithTagsDistributionConfigWithTagsTagsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsTagsItemsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)

ClientCreateDistributionWithTagsDistributionConfigWithTagsTagsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsDistributionConfigWithTagsTagsTypeDef",
    {"Items": List[ClientCreateDistributionWithTagsDistributionConfigWithTagsTagsItemsTypeDef]},
    total=False,
)

_RequiredClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef = TypedDict(
    "_RequiredClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef",
    {
        "DistributionConfig": ClientCreateDistributionWithTagsDistributionConfigWithTagsDistributionConfigTypeDef
    },
)
_OptionalClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef = TypedDict(
    "_OptionalClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef",
    {"Tags": ClientCreateDistributionWithTagsDistributionConfigWithTagsTagsTypeDef},
    total=False,
)


class ClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef(
    _RequiredClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef,
    _OptionalClientCreateDistributionWithTagsDistributionConfigWithTagsTypeDef,
):
    pass


ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersItemsTypeDef",
    {
        "AwsAccountNumber": str,
        "KeyPairIds": ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersTypeDef",
    {
        "Enabled": bool,
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionAliasICPRecordalsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionAliasICPRecordalsTypeDef",
    {"CNAME": str, "ICPRecordalStatus": Literal["APPROVED", "SUSPENDED", "PENDING"]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigAliasesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCustomErrorResponsesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigLoggingTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "IncludeCookies": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigRestrictionsTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigRestrictionsTypeDef",
    {
        "GeoRestriction": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigViewerCertificateTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionDistributionConfigTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "Aliases": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigAliasesTypeDef,
        "DefaultRootObject": str,
        "Origins": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginsTypeDef,
        "OriginGroups": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigCustomErrorResponsesTypeDef,
        "Comment": str,
        "Logging": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigLoggingTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigViewerCertificateTypeDef,
        "Restrictions": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseDistributionTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseDistributionTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "InProgressInvalidationBatches": int,
        "DomainName": str,
        "ActiveTrustedSigners": ClientCreateDistributionWithTagsResponseDistributionActiveTrustedSignersTypeDef,
        "DistributionConfig": ClientCreateDistributionWithTagsResponseDistributionDistributionConfigTypeDef,
        "AliasICPRecordals": List[
            ClientCreateDistributionWithTagsResponseDistributionAliasICPRecordalsTypeDef
        ],
    },
    total=False,
)

ClientCreateDistributionWithTagsResponseTypeDef = TypedDict(
    "ClientCreateDistributionWithTagsResponseTypeDef",
    {
        "Distribution": ClientCreateDistributionWithTagsResponseDistributionTypeDef,
        "Location": str,
        "ETag": str,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    {"Format": str, "ProfileId": str, "ContentType": str},
    total=False,
)

ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    {
        "ForwardWhenContentTypeIsUnknown": bool,
        "ContentTypeProfiles": ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    {"QueryArg": str, "ProfileId": str},
    total=False,
)

ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    {
        "ForwardWhenQueryArgProfileIsUnknown": bool,
        "QueryArgProfiles": ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef,
    },
    total=False,
)

_RequiredClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef = TypedDict(
    "_RequiredClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef",
    {"CallerReference": str},
)
_OptionalClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef = TypedDict(
    "_OptionalClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef",
    {
        "Comment": str,
        "QueryArgProfileConfig": ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef,
        "ContentTypeProfileConfig": ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef,
    },
    total=False,
)


class ClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef(
    _RequiredClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef,
    _OptionalClientCreateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef,
):
    pass


ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    {"Format": str, "ProfileId": str, "ContentType": str},
    total=False,
)

ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    {
        "ForwardWhenContentTypeIsUnknown": bool,
        "ContentTypeProfiles": ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    {"QueryArg": str, "ProfileId": str},
    total=False,
)

ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    {
        "ForwardWhenQueryArgProfileIsUnknown": bool,
        "QueryArgProfiles": ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef",
    {
        "CallerReference": str,
        "Comment": str,
        "QueryArgProfileConfig": ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef,
        "ContentTypeProfileConfig": ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionTypeDef",
    {
        "Id": str,
        "LastModifiedTime": datetime,
        "FieldLevelEncryptionConfig": ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionConfigResponseTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionConfigResponseTypeDef",
    {
        "FieldLevelEncryption": ClientCreateFieldLevelEncryptionConfigResponseFieldLevelEncryptionTypeDef,
        "Location": str,
        "ETag": str,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    {
        "PublicKeyId": str,
        "ProviderId": str,
        "FieldPatterns": ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef
        ],
    },
    total=False,
)

_RequiredClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef = TypedDict(
    "_RequiredClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    {"Name": str},
)
_OptionalClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef = TypedDict(
    "_OptionalClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    {
        "CallerReference": str,
        "Comment": str,
        "EncryptionEntities": ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef,
    },
    total=False,
)


class ClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef(
    _RequiredClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
    _OptionalClientCreateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
):
    pass


ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    {
        "PublicKeyId": str,
        "ProviderId": str,
        "FieldPatterns": ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    {
        "Name": str,
        "CallerReference": str,
        "Comment": str,
        "EncryptionEntities": ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef",
    {
        "Id": str,
        "LastModifiedTime": datetime,
        "FieldLevelEncryptionProfileConfig": ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
    },
    total=False,
)

ClientCreateFieldLevelEncryptionProfileResponseTypeDef = TypedDict(
    "ClientCreateFieldLevelEncryptionProfileResponseTypeDef",
    {
        "FieldLevelEncryptionProfile": ClientCreateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef,
        "Location": str,
        "ETag": str,
    },
    total=False,
)

_RequiredClientCreateInvalidationInvalidationBatchPathsTypeDef = TypedDict(
    "_RequiredClientCreateInvalidationInvalidationBatchPathsTypeDef", {"Quantity": int}
)
_OptionalClientCreateInvalidationInvalidationBatchPathsTypeDef = TypedDict(
    "_OptionalClientCreateInvalidationInvalidationBatchPathsTypeDef",
    {"Items": List[str]},
    total=False,
)


class ClientCreateInvalidationInvalidationBatchPathsTypeDef(
    _RequiredClientCreateInvalidationInvalidationBatchPathsTypeDef,
    _OptionalClientCreateInvalidationInvalidationBatchPathsTypeDef,
):
    pass


_RequiredClientCreateInvalidationInvalidationBatchTypeDef = TypedDict(
    "_RequiredClientCreateInvalidationInvalidationBatchTypeDef",
    {"Paths": ClientCreateInvalidationInvalidationBatchPathsTypeDef},
)
_OptionalClientCreateInvalidationInvalidationBatchTypeDef = TypedDict(
    "_OptionalClientCreateInvalidationInvalidationBatchTypeDef",
    {"CallerReference": str},
    total=False,
)


class ClientCreateInvalidationInvalidationBatchTypeDef(
    _RequiredClientCreateInvalidationInvalidationBatchTypeDef,
    _OptionalClientCreateInvalidationInvalidationBatchTypeDef,
):
    pass


ClientCreateInvalidationResponseInvalidationInvalidationBatchPathsTypeDef = TypedDict(
    "ClientCreateInvalidationResponseInvalidationInvalidationBatchPathsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateInvalidationResponseInvalidationInvalidationBatchTypeDef = TypedDict(
    "ClientCreateInvalidationResponseInvalidationInvalidationBatchTypeDef",
    {
        "Paths": ClientCreateInvalidationResponseInvalidationInvalidationBatchPathsTypeDef,
        "CallerReference": str,
    },
    total=False,
)

ClientCreateInvalidationResponseInvalidationTypeDef = TypedDict(
    "ClientCreateInvalidationResponseInvalidationTypeDef",
    {
        "Id": str,
        "Status": str,
        "CreateTime": datetime,
        "InvalidationBatch": ClientCreateInvalidationResponseInvalidationInvalidationBatchTypeDef,
    },
    total=False,
)

ClientCreateInvalidationResponseTypeDef = TypedDict(
    "ClientCreateInvalidationResponseTypeDef",
    {"Location": str, "Invalidation": ClientCreateInvalidationResponseInvalidationTypeDef},
    total=False,
)

_RequiredClientCreatePublicKeyPublicKeyConfigTypeDef = TypedDict(
    "_RequiredClientCreatePublicKeyPublicKeyConfigTypeDef", {"CallerReference": str}
)
_OptionalClientCreatePublicKeyPublicKeyConfigTypeDef = TypedDict(
    "_OptionalClientCreatePublicKeyPublicKeyConfigTypeDef",
    {"Name": str, "EncodedKey": str, "Comment": str},
    total=False,
)


class ClientCreatePublicKeyPublicKeyConfigTypeDef(
    _RequiredClientCreatePublicKeyPublicKeyConfigTypeDef,
    _OptionalClientCreatePublicKeyPublicKeyConfigTypeDef,
):
    pass


ClientCreatePublicKeyResponsePublicKeyPublicKeyConfigTypeDef = TypedDict(
    "ClientCreatePublicKeyResponsePublicKeyPublicKeyConfigTypeDef",
    {"CallerReference": str, "Name": str, "EncodedKey": str, "Comment": str},
    total=False,
)

ClientCreatePublicKeyResponsePublicKeyTypeDef = TypedDict(
    "ClientCreatePublicKeyResponsePublicKeyTypeDef",
    {
        "Id": str,
        "CreatedTime": datetime,
        "PublicKeyConfig": ClientCreatePublicKeyResponsePublicKeyPublicKeyConfigTypeDef,
    },
    total=False,
)

ClientCreatePublicKeyResponseTypeDef = TypedDict(
    "ClientCreatePublicKeyResponseTypeDef",
    {"PublicKey": ClientCreatePublicKeyResponsePublicKeyTypeDef, "Location": str, "ETag": str},
    total=False,
)

ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef",
    {
        "AwsAccountNumber": str,
        "KeyPairIds": ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef,
    },
    total=False,
)

ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef",
    {
        "Enabled": bool,
        "Quantity": int,
        "Items": List[
            ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    {"DomainName": str, "OriginAccessIdentity": str},
    total=False,
)

ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "S3Origin": ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef,
        "Aliases": ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef,
        "Comment": str,
        "Logging": ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef,
        "TrustedSigners": ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
    total=False,
)

ClientCreateStreamingDistributionResponseStreamingDistributionTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseStreamingDistributionTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "DomainName": str,
        "ActiveTrustedSigners": ClientCreateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef,
        "StreamingDistributionConfig": ClientCreateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef,
    },
    total=False,
)

ClientCreateStreamingDistributionResponseTypeDef = TypedDict(
    "ClientCreateStreamingDistributionResponseTypeDef",
    {
        "StreamingDistribution": ClientCreateStreamingDistributionResponseStreamingDistributionTypeDef,
        "Location": str,
        "ETag": str,
    },
    total=False,
)

ClientCreateStreamingDistributionStreamingDistributionConfigAliasesTypeDef = TypedDict(
    "ClientCreateStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateStreamingDistributionStreamingDistributionConfigLoggingTypeDef = TypedDict(
    "ClientCreateStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientCreateStreamingDistributionStreamingDistributionConfigS3OriginTypeDef = TypedDict(
    "ClientCreateStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    {"DomainName": str, "OriginAccessIdentity": str},
    total=False,
)

ClientCreateStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef = TypedDict(
    "ClientCreateStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

_RequiredClientCreateStreamingDistributionStreamingDistributionConfigTypeDef = TypedDict(
    "_RequiredClientCreateStreamingDistributionStreamingDistributionConfigTypeDef",
    {"CallerReference": str},
)
_OptionalClientCreateStreamingDistributionStreamingDistributionConfigTypeDef = TypedDict(
    "_OptionalClientCreateStreamingDistributionStreamingDistributionConfigTypeDef",
    {
        "S3Origin": ClientCreateStreamingDistributionStreamingDistributionConfigS3OriginTypeDef,
        "Aliases": ClientCreateStreamingDistributionStreamingDistributionConfigAliasesTypeDef,
        "Comment": str,
        "Logging": ClientCreateStreamingDistributionStreamingDistributionConfigLoggingTypeDef,
        "TrustedSigners": ClientCreateStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
    total=False,
)


class ClientCreateStreamingDistributionStreamingDistributionConfigTypeDef(
    _RequiredClientCreateStreamingDistributionStreamingDistributionConfigTypeDef,
    _OptionalClientCreateStreamingDistributionStreamingDistributionConfigTypeDef,
):
    pass


ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersItemsTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersItemsTypeDef",
    {
        "AwsAccountNumber": str,
        "KeyPairIds": ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef,
    },
    total=False,
)

ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersTypeDef",
    {
        "Enabled": bool,
        "Quantity": int,
        "Items": List[
            ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersItemsTypeDef
        ],
    },
    total=False,
)

ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    {"DomainName": str, "OriginAccessIdentity": str},
    total=False,
)

ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "S3Origin": ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef,
        "Aliases": ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef,
        "Comment": str,
        "Logging": ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef,
        "TrustedSigners": ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
    total=False,
)

ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "DomainName": str,
        "ActiveTrustedSigners": ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionActiveTrustedSignersTypeDef,
        "StreamingDistributionConfig": ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionStreamingDistributionConfigTypeDef,
    },
    total=False,
)

ClientCreateStreamingDistributionWithTagsResponseTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsResponseTypeDef",
    {
        "StreamingDistribution": ClientCreateStreamingDistributionWithTagsResponseStreamingDistributionTypeDef,
        "Location": str,
        "ETag": str,
    },
    total=False,
)

ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigAliasesTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigLoggingTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigS3OriginTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigS3OriginTypeDef",
    {"DomainName": str, "OriginAccessIdentity": str},
    total=False,
)

ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTrustedSignersTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

_RequiredClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTypeDef = TypedDict(
    "_RequiredClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTypeDef",
    {"CallerReference": str},
)
_OptionalClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTypeDef = TypedDict(
    "_OptionalClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTypeDef",
    {
        "S3Origin": ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigS3OriginTypeDef,
        "Aliases": ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigAliasesTypeDef,
        "Comment": str,
        "Logging": ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigLoggingTypeDef,
        "TrustedSigners": ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTrustedSignersTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
    total=False,
)


class ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTypeDef(
    _RequiredClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTypeDef,
    _OptionalClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTypeDef,
):
    pass


ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTagsItemsTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTagsItemsTypeDef",
    {"Key": str, "Value": str},
    total=False,
)

ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTagsTypeDef = TypedDict(
    "ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTagsTypeDef",
    {
        "Items": List[
            ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTagsItemsTypeDef
        ]
    },
    total=False,
)

_RequiredClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef = TypedDict(
    "_RequiredClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef",
    {
        "StreamingDistributionConfig": ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsStreamingDistributionConfigTypeDef
    },
)
_OptionalClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef = TypedDict(
    "_OptionalClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef",
    {
        "Tags": ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTagsTypeDef
    },
    total=False,
)


class ClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef(
    _RequiredClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef,
    _OptionalClientCreateStreamingDistributionWithTagsStreamingDistributionConfigWithTagsTypeDef,
):
    pass


ClientGetCloudFrontOriginAccessIdentityConfigResponseCloudFrontOriginAccessIdentityConfigTypeDef = TypedDict(
    "ClientGetCloudFrontOriginAccessIdentityConfigResponseCloudFrontOriginAccessIdentityConfigTypeDef",
    {"CallerReference": str, "Comment": str},
    total=False,
)

ClientGetCloudFrontOriginAccessIdentityConfigResponseTypeDef = TypedDict(
    "ClientGetCloudFrontOriginAccessIdentityConfigResponseTypeDef",
    {
        "CloudFrontOriginAccessIdentityConfig": ClientGetCloudFrontOriginAccessIdentityConfigResponseCloudFrontOriginAccessIdentityConfigTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientGetCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef = TypedDict(
    "ClientGetCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    {"CallerReference": str, "Comment": str},
    total=False,
)

ClientGetCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef = TypedDict(
    "ClientGetCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef",
    {
        "Id": str,
        "S3CanonicalUserId": str,
        "CloudFrontOriginAccessIdentityConfig": ClientGetCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
    },
    total=False,
)

ClientGetCloudFrontOriginAccessIdentityResponseTypeDef = TypedDict(
    "ClientGetCloudFrontOriginAccessIdentityResponseTypeDef",
    {
        "CloudFrontOriginAccessIdentity": ClientGetCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigAliasesTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigCustomErrorResponsesTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionConfigResponseDistributionConfigCustomErrorResponsesItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigLoggingTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "IncludeCookies": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginGroupsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionConfigResponseDistributionConfigOriginGroupsItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginsItemsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientGetDistributionConfigResponseDistributionConfigOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientGetDistributionConfigResponseDistributionConfigOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigOriginsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigOriginsTypeDef",
    {
        "Quantity": int,
        "Items": List[ClientGetDistributionConfigResponseDistributionConfigOriginsItemsTypeDef],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigRestrictionsTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigRestrictionsTypeDef",
    {
        "GeoRestriction": ClientGetDistributionConfigResponseDistributionConfigRestrictionsGeoRestrictionTypeDef
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigViewerCertificateTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

ClientGetDistributionConfigResponseDistributionConfigTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "Aliases": ClientGetDistributionConfigResponseDistributionConfigAliasesTypeDef,
        "DefaultRootObject": str,
        "Origins": ClientGetDistributionConfigResponseDistributionConfigOriginsTypeDef,
        "OriginGroups": ClientGetDistributionConfigResponseDistributionConfigOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientGetDistributionConfigResponseDistributionConfigDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientGetDistributionConfigResponseDistributionConfigCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientGetDistributionConfigResponseDistributionConfigCustomErrorResponsesTypeDef,
        "Comment": str,
        "Logging": ClientGetDistributionConfigResponseDistributionConfigLoggingTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientGetDistributionConfigResponseDistributionConfigViewerCertificateTypeDef,
        "Restrictions": ClientGetDistributionConfigResponseDistributionConfigRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
    },
    total=False,
)

ClientGetDistributionConfigResponseTypeDef = TypedDict(
    "ClientGetDistributionConfigResponseTypeDef",
    {
        "DistributionConfig": ClientGetDistributionConfigResponseDistributionConfigTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientGetDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionActiveTrustedSignersItemsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionActiveTrustedSignersItemsTypeDef",
    {
        "AwsAccountNumber": str,
        "KeyPairIds": ClientGetDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef,
    },
    total=False,
)

ClientGetDistributionResponseDistributionActiveTrustedSignersTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionActiveTrustedSignersTypeDef",
    {
        "Enabled": bool,
        "Quantity": int,
        "Items": List[ClientGetDistributionResponseDistributionActiveTrustedSignersItemsTypeDef],
    },
    total=False,
)

ClientGetDistributionResponseDistributionAliasICPRecordalsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionAliasICPRecordalsTypeDef",
    {"CNAME": str, "ICPRecordalStatus": Literal["APPROVED", "SUSPENDED", "PENDING"]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigAliasesTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigLoggingTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "IncludeCookies": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigOriginsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigOriginsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigRestrictionsTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigRestrictionsTypeDef",
    {
        "GeoRestriction": ClientGetDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

ClientGetDistributionResponseDistributionDistributionConfigTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "Aliases": ClientGetDistributionResponseDistributionDistributionConfigAliasesTypeDef,
        "DefaultRootObject": str,
        "Origins": ClientGetDistributionResponseDistributionDistributionConfigOriginsTypeDef,
        "OriginGroups": ClientGetDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientGetDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientGetDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientGetDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef,
        "Comment": str,
        "Logging": ClientGetDistributionResponseDistributionDistributionConfigLoggingTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientGetDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef,
        "Restrictions": ClientGetDistributionResponseDistributionDistributionConfigRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
    },
    total=False,
)

ClientGetDistributionResponseDistributionTypeDef = TypedDict(
    "ClientGetDistributionResponseDistributionTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "InProgressInvalidationBatches": int,
        "DomainName": str,
        "ActiveTrustedSigners": ClientGetDistributionResponseDistributionActiveTrustedSignersTypeDef,
        "DistributionConfig": ClientGetDistributionResponseDistributionDistributionConfigTypeDef,
        "AliasICPRecordals": List[
            ClientGetDistributionResponseDistributionAliasICPRecordalsTypeDef
        ],
    },
    total=False,
)

ClientGetDistributionResponseTypeDef = TypedDict(
    "ClientGetDistributionResponseTypeDef",
    {"Distribution": ClientGetDistributionResponseDistributionTypeDef, "ETag": str},
    total=False,
)

ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    {"Format": str, "ProfileId": str, "ContentType": str},
    total=False,
)

ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    {
        "ForwardWhenContentTypeIsUnknown": bool,
        "ContentTypeProfiles": ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    {"QueryArg": str, "ProfileId": str},
    total=False,
)

ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    {
        "ForwardWhenQueryArgProfileIsUnknown": bool,
        "QueryArgProfiles": ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigTypeDef",
    {
        "CallerReference": str,
        "Comment": str,
        "QueryArgProfileConfig": ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef,
        "ContentTypeProfileConfig": ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionConfigResponseTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionConfigResponseTypeDef",
    {
        "FieldLevelEncryptionConfig": ClientGetFieldLevelEncryptionConfigResponseFieldLevelEncryptionConfigTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    {
        "PublicKeyId": str,
        "ProviderId": str,
        "FieldPatterns": ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef
        ],
    },
    total=False,
)

ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigTypeDef",
    {
        "Name": str,
        "CallerReference": str,
        "Comment": str,
        "EncryptionEntities": ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionProfileConfigResponseTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileConfigResponseTypeDef",
    {
        "FieldLevelEncryptionProfileConfig": ClientGetFieldLevelEncryptionProfileConfigResponseFieldLevelEncryptionProfileConfigTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    {
        "PublicKeyId": str,
        "ProviderId": str,
        "FieldPatterns": ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef
        ],
    },
    total=False,
)

ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    {
        "Name": str,
        "CallerReference": str,
        "Comment": str,
        "EncryptionEntities": ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef",
    {
        "Id": str,
        "LastModifiedTime": datetime,
        "FieldLevelEncryptionProfileConfig": ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionProfileResponseTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionProfileResponseTypeDef",
    {
        "FieldLevelEncryptionProfile": ClientGetFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    {"Format": str, "ProfileId": str, "ContentType": str},
    total=False,
)

ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    {
        "ForwardWhenContentTypeIsUnknown": bool,
        "ContentTypeProfiles": ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    {"QueryArg": str, "ProfileId": str},
    total=False,
)

ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    {
        "ForwardWhenQueryArgProfileIsUnknown": bool,
        "QueryArgProfiles": ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef",
    {
        "CallerReference": str,
        "Comment": str,
        "QueryArgProfileConfig": ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef,
        "ContentTypeProfileConfig": ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionTypeDef",
    {
        "Id": str,
        "LastModifiedTime": datetime,
        "FieldLevelEncryptionConfig": ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef,
    },
    total=False,
)

ClientGetFieldLevelEncryptionResponseTypeDef = TypedDict(
    "ClientGetFieldLevelEncryptionResponseTypeDef",
    {
        "FieldLevelEncryption": ClientGetFieldLevelEncryptionResponseFieldLevelEncryptionTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientGetInvalidationResponseInvalidationInvalidationBatchPathsTypeDef = TypedDict(
    "ClientGetInvalidationResponseInvalidationInvalidationBatchPathsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetInvalidationResponseInvalidationInvalidationBatchTypeDef = TypedDict(
    "ClientGetInvalidationResponseInvalidationInvalidationBatchTypeDef",
    {
        "Paths": ClientGetInvalidationResponseInvalidationInvalidationBatchPathsTypeDef,
        "CallerReference": str,
    },
    total=False,
)

ClientGetInvalidationResponseInvalidationTypeDef = TypedDict(
    "ClientGetInvalidationResponseInvalidationTypeDef",
    {
        "Id": str,
        "Status": str,
        "CreateTime": datetime,
        "InvalidationBatch": ClientGetInvalidationResponseInvalidationInvalidationBatchTypeDef,
    },
    total=False,
)

ClientGetInvalidationResponseTypeDef = TypedDict(
    "ClientGetInvalidationResponseTypeDef",
    {"Invalidation": ClientGetInvalidationResponseInvalidationTypeDef},
    total=False,
)

ClientGetPublicKeyConfigResponsePublicKeyConfigTypeDef = TypedDict(
    "ClientGetPublicKeyConfigResponsePublicKeyConfigTypeDef",
    {"CallerReference": str, "Name": str, "EncodedKey": str, "Comment": str},
    total=False,
)

ClientGetPublicKeyConfigResponseTypeDef = TypedDict(
    "ClientGetPublicKeyConfigResponseTypeDef",
    {"PublicKeyConfig": ClientGetPublicKeyConfigResponsePublicKeyConfigTypeDef, "ETag": str},
    total=False,
)

ClientGetPublicKeyResponsePublicKeyPublicKeyConfigTypeDef = TypedDict(
    "ClientGetPublicKeyResponsePublicKeyPublicKeyConfigTypeDef",
    {"CallerReference": str, "Name": str, "EncodedKey": str, "Comment": str},
    total=False,
)

ClientGetPublicKeyResponsePublicKeyTypeDef = TypedDict(
    "ClientGetPublicKeyResponsePublicKeyTypeDef",
    {
        "Id": str,
        "CreatedTime": datetime,
        "PublicKeyConfig": ClientGetPublicKeyResponsePublicKeyPublicKeyConfigTypeDef,
    },
    total=False,
)

ClientGetPublicKeyResponseTypeDef = TypedDict(
    "ClientGetPublicKeyResponseTypeDef",
    {"PublicKey": ClientGetPublicKeyResponsePublicKeyTypeDef, "ETag": str},
    total=False,
)

ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigAliasesTypeDef = TypedDict(
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigLoggingTypeDef = TypedDict(
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigS3OriginTypeDef = TypedDict(
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigS3OriginTypeDef",
    {"DomainName": str, "OriginAccessIdentity": str},
    total=False,
)

ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigTrustedSignersTypeDef = TypedDict(
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigTypeDef = TypedDict(
    "ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "S3Origin": ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigS3OriginTypeDef,
        "Aliases": ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigAliasesTypeDef,
        "Comment": str,
        "Logging": ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigLoggingTypeDef,
        "TrustedSigners": ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigTrustedSignersTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
    total=False,
)

ClientGetStreamingDistributionConfigResponseTypeDef = TypedDict(
    "ClientGetStreamingDistributionConfigResponseTypeDef",
    {
        "StreamingDistributionConfig": ClientGetStreamingDistributionConfigResponseStreamingDistributionConfigTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef",
    {
        "AwsAccountNumber": str,
        "KeyPairIds": ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef,
    },
    total=False,
)

ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef",
    {
        "Enabled": bool,
        "Quantity": int,
        "Items": List[
            ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef
        ],
    },
    total=False,
)

ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    {"DomainName": str, "OriginAccessIdentity": str},
    total=False,
)

ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "S3Origin": ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef,
        "Aliases": ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef,
        "Comment": str,
        "Logging": ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef,
        "TrustedSigners": ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
    total=False,
)

ClientGetStreamingDistributionResponseStreamingDistributionTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseStreamingDistributionTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "DomainName": str,
        "ActiveTrustedSigners": ClientGetStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef,
        "StreamingDistributionConfig": ClientGetStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef,
    },
    total=False,
)

ClientGetStreamingDistributionResponseTypeDef = TypedDict(
    "ClientGetStreamingDistributionResponseTypeDef",
    {
        "StreamingDistribution": ClientGetStreamingDistributionResponseStreamingDistributionTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientListCloudFrontOriginAccessIdentitiesResponseCloudFrontOriginAccessIdentityListItemsTypeDef = TypedDict(
    "ClientListCloudFrontOriginAccessIdentitiesResponseCloudFrontOriginAccessIdentityListItemsTypeDef",
    {"Id": str, "S3CanonicalUserId": str, "Comment": str},
    total=False,
)

ClientListCloudFrontOriginAccessIdentitiesResponseCloudFrontOriginAccessIdentityListTypeDef = TypedDict(
    "ClientListCloudFrontOriginAccessIdentitiesResponseCloudFrontOriginAccessIdentityListTypeDef",
    {
        "Marker": str,
        "NextMarker": str,
        "MaxItems": int,
        "IsTruncated": bool,
        "Quantity": int,
        "Items": List[
            ClientListCloudFrontOriginAccessIdentitiesResponseCloudFrontOriginAccessIdentityListItemsTypeDef
        ],
    },
    total=False,
)

ClientListCloudFrontOriginAccessIdentitiesResponseTypeDef = TypedDict(
    "ClientListCloudFrontOriginAccessIdentitiesResponseTypeDef",
    {
        "CloudFrontOriginAccessIdentityList": ClientListCloudFrontOriginAccessIdentitiesResponseCloudFrontOriginAccessIdentityListTypeDef
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsAliasICPRecordalsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsAliasICPRecordalsTypeDef",
    {"CNAME": str, "ICPRecordalStatus": Literal["APPROVED", "SUSPENDED", "PENDING"]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsAliasesTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsCustomErrorResponsesTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsByWebAclIdResponseDistributionListItemsCustomErrorResponsesItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsRestrictionsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsRestrictionsTypeDef",
    {
        "GeoRestriction": ClientListDistributionsByWebAclIdResponseDistributionListItemsRestrictionsGeoRestrictionTypeDef
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsViewerCertificateTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListItemsTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListItemsTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "DomainName": str,
        "Aliases": ClientListDistributionsByWebAclIdResponseDistributionListItemsAliasesTypeDef,
        "Origins": ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginsTypeDef,
        "OriginGroups": ClientListDistributionsByWebAclIdResponseDistributionListItemsOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientListDistributionsByWebAclIdResponseDistributionListItemsDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientListDistributionsByWebAclIdResponseDistributionListItemsCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientListDistributionsByWebAclIdResponseDistributionListItemsCustomErrorResponsesTypeDef,
        "Comment": str,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientListDistributionsByWebAclIdResponseDistributionListItemsViewerCertificateTypeDef,
        "Restrictions": ClientListDistributionsByWebAclIdResponseDistributionListItemsRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
        "AliasICPRecordals": List[
            ClientListDistributionsByWebAclIdResponseDistributionListItemsAliasICPRecordalsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseDistributionListTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseDistributionListTypeDef",
    {
        "Marker": str,
        "NextMarker": str,
        "MaxItems": int,
        "IsTruncated": bool,
        "Quantity": int,
        "Items": List[ClientListDistributionsByWebAclIdResponseDistributionListItemsTypeDef],
    },
    total=False,
)

ClientListDistributionsByWebAclIdResponseTypeDef = TypedDict(
    "ClientListDistributionsByWebAclIdResponseTypeDef",
    {"DistributionList": ClientListDistributionsByWebAclIdResponseDistributionListTypeDef},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsAliasICPRecordalsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsAliasICPRecordalsTypeDef",
    {"CNAME": str, "ICPRecordalStatus": Literal["APPROVED", "SUSPENDED", "PENDING"]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsAliasesTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCacheBehaviorsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsResponseDistributionListItemsCacheBehaviorsItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsCustomErrorResponsesTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsResponseDistributionListItemsCustomErrorResponsesItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginGroupsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[ClientListDistributionsResponseDistributionListItemsOriginGroupsItemsTypeDef],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginsItemsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientListDistributionsResponseDistributionListItemsOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientListDistributionsResponseDistributionListItemsOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsOriginsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsOriginsTypeDef",
    {
        "Quantity": int,
        "Items": List[ClientListDistributionsResponseDistributionListItemsOriginsItemsTypeDef],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsRestrictionsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsRestrictionsTypeDef",
    {
        "GeoRestriction": ClientListDistributionsResponseDistributionListItemsRestrictionsGeoRestrictionTypeDef
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsViewerCertificateTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListItemsTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListItemsTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "DomainName": str,
        "Aliases": ClientListDistributionsResponseDistributionListItemsAliasesTypeDef,
        "Origins": ClientListDistributionsResponseDistributionListItemsOriginsTypeDef,
        "OriginGroups": ClientListDistributionsResponseDistributionListItemsOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientListDistributionsResponseDistributionListItemsDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientListDistributionsResponseDistributionListItemsCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientListDistributionsResponseDistributionListItemsCustomErrorResponsesTypeDef,
        "Comment": str,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientListDistributionsResponseDistributionListItemsViewerCertificateTypeDef,
        "Restrictions": ClientListDistributionsResponseDistributionListItemsRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
        "AliasICPRecordals": List[
            ClientListDistributionsResponseDistributionListItemsAliasICPRecordalsTypeDef
        ],
    },
    total=False,
)

ClientListDistributionsResponseDistributionListTypeDef = TypedDict(
    "ClientListDistributionsResponseDistributionListTypeDef",
    {
        "Marker": str,
        "NextMarker": str,
        "MaxItems": int,
        "IsTruncated": bool,
        "Quantity": int,
        "Items": List[ClientListDistributionsResponseDistributionListItemsTypeDef],
    },
    total=False,
)

ClientListDistributionsResponseTypeDef = TypedDict(
    "ClientListDistributionsResponseTypeDef",
    {"DistributionList": ClientListDistributionsResponseDistributionListTypeDef},
    total=False,
)

ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigContentTypeProfilesItemsTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    {"Format": str, "ProfileId": str, "ContentType": str},
    total=False,
)

ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigContentTypeProfilesTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigContentTypeProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigContentTypeProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigTypeDef",
    {
        "ForwardWhenContentTypeIsUnknown": bool,
        "ContentTypeProfiles": ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigContentTypeProfilesTypeDef,
    },
    total=False,
)

ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigQueryArgProfilesItemsTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    {"QueryArg": str, "ProfileId": str},
    total=False,
)

ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigQueryArgProfilesTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigQueryArgProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigQueryArgProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigTypeDef",
    {
        "ForwardWhenQueryArgProfileIsUnknown": bool,
        "QueryArgProfiles": ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigQueryArgProfilesTypeDef,
    },
    total=False,
)

ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsTypeDef",
    {
        "Id": str,
        "LastModifiedTime": datetime,
        "Comment": str,
        "QueryArgProfileConfig": ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsQueryArgProfileConfigTypeDef,
        "ContentTypeProfileConfig": ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsContentTypeProfileConfigTypeDef,
    },
    total=False,
)

ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListTypeDef",
    {
        "NextMarker": str,
        "MaxItems": int,
        "Quantity": int,
        "Items": List[
            ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListItemsTypeDef
        ],
    },
    total=False,
)

ClientListFieldLevelEncryptionConfigsResponseTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionConfigsResponseTypeDef",
    {
        "FieldLevelEncryptionList": ClientListFieldLevelEncryptionConfigsResponseFieldLevelEncryptionListTypeDef
    },
    total=False,
)

ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesItemsFieldPatternsTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesItemsFieldPatternsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesItemsTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesItemsTypeDef",
    {
        "PublicKeyId": str,
        "ProviderId": str,
        "FieldPatterns": ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesItemsFieldPatternsTypeDef,
    },
    total=False,
)

ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesItemsTypeDef
        ],
    },
    total=False,
)

ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsTypeDef",
    {
        "Id": str,
        "LastModifiedTime": datetime,
        "Name": str,
        "EncryptionEntities": ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsEncryptionEntitiesTypeDef,
        "Comment": str,
    },
    total=False,
)

ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListTypeDef",
    {
        "NextMarker": str,
        "MaxItems": int,
        "Quantity": int,
        "Items": List[
            ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListItemsTypeDef
        ],
    },
    total=False,
)

ClientListFieldLevelEncryptionProfilesResponseTypeDef = TypedDict(
    "ClientListFieldLevelEncryptionProfilesResponseTypeDef",
    {
        "FieldLevelEncryptionProfileList": ClientListFieldLevelEncryptionProfilesResponseFieldLevelEncryptionProfileListTypeDef
    },
    total=False,
)

ClientListInvalidationsResponseInvalidationListItemsTypeDef = TypedDict(
    "ClientListInvalidationsResponseInvalidationListItemsTypeDef",
    {"Id": str, "CreateTime": datetime, "Status": str},
    total=False,
)

ClientListInvalidationsResponseInvalidationListTypeDef = TypedDict(
    "ClientListInvalidationsResponseInvalidationListTypeDef",
    {
        "Marker": str,
        "NextMarker": str,
        "MaxItems": int,
        "IsTruncated": bool,
        "Quantity": int,
        "Items": List[ClientListInvalidationsResponseInvalidationListItemsTypeDef],
    },
    total=False,
)

ClientListInvalidationsResponseTypeDef = TypedDict(
    "ClientListInvalidationsResponseTypeDef",
    {"InvalidationList": ClientListInvalidationsResponseInvalidationListTypeDef},
    total=False,
)

ClientListPublicKeysResponsePublicKeyListItemsTypeDef = TypedDict(
    "ClientListPublicKeysResponsePublicKeyListItemsTypeDef",
    {"Id": str, "Name": str, "CreatedTime": datetime, "EncodedKey": str, "Comment": str},
    total=False,
)

ClientListPublicKeysResponsePublicKeyListTypeDef = TypedDict(
    "ClientListPublicKeysResponsePublicKeyListTypeDef",
    {
        "NextMarker": str,
        "MaxItems": int,
        "Quantity": int,
        "Items": List[ClientListPublicKeysResponsePublicKeyListItemsTypeDef],
    },
    total=False,
)

ClientListPublicKeysResponseTypeDef = TypedDict(
    "ClientListPublicKeysResponseTypeDef",
    {"PublicKeyList": ClientListPublicKeysResponsePublicKeyListTypeDef},
    total=False,
)

ClientListStreamingDistributionsResponseStreamingDistributionListItemsAliasesTypeDef = TypedDict(
    "ClientListStreamingDistributionsResponseStreamingDistributionListItemsAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientListStreamingDistributionsResponseStreamingDistributionListItemsS3OriginTypeDef = TypedDict(
    "ClientListStreamingDistributionsResponseStreamingDistributionListItemsS3OriginTypeDef",
    {"DomainName": str, "OriginAccessIdentity": str},
    total=False,
)

ClientListStreamingDistributionsResponseStreamingDistributionListItemsTrustedSignersTypeDef = TypedDict(
    "ClientListStreamingDistributionsResponseStreamingDistributionListItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientListStreamingDistributionsResponseStreamingDistributionListItemsTypeDef = TypedDict(
    "ClientListStreamingDistributionsResponseStreamingDistributionListItemsTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "DomainName": str,
        "S3Origin": ClientListStreamingDistributionsResponseStreamingDistributionListItemsS3OriginTypeDef,
        "Aliases": ClientListStreamingDistributionsResponseStreamingDistributionListItemsAliasesTypeDef,
        "TrustedSigners": ClientListStreamingDistributionsResponseStreamingDistributionListItemsTrustedSignersTypeDef,
        "Comment": str,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
    total=False,
)

ClientListStreamingDistributionsResponseStreamingDistributionListTypeDef = TypedDict(
    "ClientListStreamingDistributionsResponseStreamingDistributionListTypeDef",
    {
        "Marker": str,
        "NextMarker": str,
        "MaxItems": int,
        "IsTruncated": bool,
        "Quantity": int,
        "Items": List[
            ClientListStreamingDistributionsResponseStreamingDistributionListItemsTypeDef
        ],
    },
    total=False,
)

ClientListStreamingDistributionsResponseTypeDef = TypedDict(
    "ClientListStreamingDistributionsResponseTypeDef",
    {
        "StreamingDistributionList": ClientListStreamingDistributionsResponseStreamingDistributionListTypeDef
    },
    total=False,
)

ClientListTagsForResourceResponseTagsItemsTypeDef = TypedDict(
    "ClientListTagsForResourceResponseTagsItemsTypeDef", {"Key": str, "Value": str}, total=False
)

ClientListTagsForResourceResponseTagsTypeDef = TypedDict(
    "ClientListTagsForResourceResponseTagsTypeDef",
    {"Items": List[ClientListTagsForResourceResponseTagsItemsTypeDef]},
    total=False,
)

ClientListTagsForResourceResponseTypeDef = TypedDict(
    "ClientListTagsForResourceResponseTypeDef",
    {"Tags": ClientListTagsForResourceResponseTagsTypeDef},
    total=False,
)

_RequiredClientTagResourceTagsItemsTypeDef = TypedDict(
    "_RequiredClientTagResourceTagsItemsTypeDef", {"Key": str}
)
_OptionalClientTagResourceTagsItemsTypeDef = TypedDict(
    "_OptionalClientTagResourceTagsItemsTypeDef", {"Value": str}, total=False
)


class ClientTagResourceTagsItemsTypeDef(
    _RequiredClientTagResourceTagsItemsTypeDef, _OptionalClientTagResourceTagsItemsTypeDef
):
    pass


ClientTagResourceTagsTypeDef = TypedDict(
    "ClientTagResourceTagsTypeDef", {"Items": List[ClientTagResourceTagsItemsTypeDef]}, total=False
)

ClientUntagResourceTagKeysTypeDef = TypedDict(
    "ClientUntagResourceTagKeysTypeDef", {"Items": List[str]}, total=False
)

_RequiredClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef = TypedDict(
    "_RequiredClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    {"CallerReference": str},
)
_OptionalClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef = TypedDict(
    "_OptionalClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    {"Comment": str},
    total=False,
)


class ClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef(
    _RequiredClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
    _OptionalClientUpdateCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
):
    pass


ClientUpdateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef = TypedDict(
    "ClientUpdateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef",
    {"CallerReference": str, "Comment": str},
    total=False,
)

ClientUpdateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef = TypedDict(
    "ClientUpdateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef",
    {
        "Id": str,
        "S3CanonicalUserId": str,
        "CloudFrontOriginAccessIdentityConfig": ClientUpdateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityCloudFrontOriginAccessIdentityConfigTypeDef,
    },
    total=False,
)

ClientUpdateCloudFrontOriginAccessIdentityResponseTypeDef = TypedDict(
    "ClientUpdateCloudFrontOriginAccessIdentityResponseTypeDef",
    {
        "CloudFrontOriginAccessIdentity": ClientUpdateCloudFrontOriginAccessIdentityResponseCloudFrontOriginAccessIdentityTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigAliasesTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigCacheBehaviorsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[ClientUpdateDistributionDistributionConfigCacheBehaviorsItemsTypeDef],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientUpdateDistributionDistributionConfigCustomErrorResponsesTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[ClientUpdateDistributionDistributionConfigCustomErrorResponsesItemsTypeDef],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigLoggingTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "IncludeCookies": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientUpdateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginGroupsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientUpdateDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientUpdateDistributionDistributionConfigOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginGroupsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[ClientUpdateDistributionDistributionConfigOriginGroupsItemsTypeDef],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientUpdateDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientUpdateDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientUpdateDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientUpdateDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigOriginsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigOriginsTypeDef",
    {"Quantity": int, "Items": List[ClientUpdateDistributionDistributionConfigOriginsItemsTypeDef]},
    total=False,
)

ClientUpdateDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientUpdateDistributionDistributionConfigRestrictionsTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigRestrictionsTypeDef",
    {"GeoRestriction": ClientUpdateDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef},
    total=False,
)

ClientUpdateDistributionDistributionConfigViewerCertificateTypeDef = TypedDict(
    "ClientUpdateDistributionDistributionConfigViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

_RequiredClientUpdateDistributionDistributionConfigTypeDef = TypedDict(
    "_RequiredClientUpdateDistributionDistributionConfigTypeDef", {"CallerReference": str}
)
_OptionalClientUpdateDistributionDistributionConfigTypeDef = TypedDict(
    "_OptionalClientUpdateDistributionDistributionConfigTypeDef",
    {
        "Aliases": ClientUpdateDistributionDistributionConfigAliasesTypeDef,
        "DefaultRootObject": str,
        "Origins": ClientUpdateDistributionDistributionConfigOriginsTypeDef,
        "OriginGroups": ClientUpdateDistributionDistributionConfigOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientUpdateDistributionDistributionConfigDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientUpdateDistributionDistributionConfigCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientUpdateDistributionDistributionConfigCustomErrorResponsesTypeDef,
        "Comment": str,
        "Logging": ClientUpdateDistributionDistributionConfigLoggingTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientUpdateDistributionDistributionConfigViewerCertificateTypeDef,
        "Restrictions": ClientUpdateDistributionDistributionConfigRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
    },
    total=False,
)


class ClientUpdateDistributionDistributionConfigTypeDef(
    _RequiredClientUpdateDistributionDistributionConfigTypeDef,
    _OptionalClientUpdateDistributionDistributionConfigTypeDef,
):
    pass


ClientUpdateDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionActiveTrustedSignersItemsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionActiveTrustedSignersItemsTypeDef",
    {
        "AwsAccountNumber": str,
        "KeyPairIds": ClientUpdateDistributionResponseDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionActiveTrustedSignersTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionActiveTrustedSignersTypeDef",
    {
        "Enabled": bool,
        "Quantity": int,
        "Items": List[ClientUpdateDistributionResponseDistributionActiveTrustedSignersItemsTypeDef],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionAliasICPRecordalsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionAliasICPRecordalsTypeDef",
    {"CNAME": str, "ICPRecordalStatus": Literal["APPROVED", "SUSPENDED", "PENDING"]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigAliasesTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesCookiesTypeDef,
        "Headers": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsForwardedValuesTypeDef,
        "TrustedSigners": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef",
    {"ErrorCode": int, "ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionResponseDistributionDistributionConfigCustomErrorResponsesItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
        "CachedMethods": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsCachedMethodsTypeDef,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef",
    {
        "Forward": Literal["none", "whitelist", "all"],
        "WhitelistedNames": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesWhitelistedNamesTypeDef,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef",
    {
        "QueryString": bool,
        "Cookies": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesCookiesTypeDef,
        "Headers": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesHeadersTypeDef,
        "QueryStringCacheKeys": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesQueryStringCacheKeysTypeDef,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
        "IncludeBody": bool,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorForwardedValuesTypeDef,
        "TrustedSigners": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
        "AllowedMethods": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorAllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorLambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigLoggingTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "IncludeCookies": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef",
    {"Quantity": int, "Items": List[int]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef",
    {
        "StatusCodes": ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaStatusCodesTypeDef
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef",
    {"OriginId": str},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef",
    {
        "Id": str,
        "FailoverCriteria": ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsFailoverCriteriaTypeDef,
        "Members": ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsMembersTypeDef,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef",
    {"HeaderName": str, "HeaderValue": str},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
        "OriginSslProtocols": ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigOriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef",
    {"OriginAccessIdentity": str},
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef",
    {
        "Id": str,
        "DomainName": str,
        "OriginPath": str,
        "CustomHeaders": ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomHeadersTypeDef,
        "S3OriginConfig": ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsS3OriginConfigTypeDef,
        "CustomOriginConfig": ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsCustomOriginConfigTypeDef,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigOriginsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigOriginsTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateDistributionResponseDistributionDistributionConfigOriginsItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef",
    {
        "RestrictionType": Literal["blacklist", "whitelist", "none"],
        "Quantity": int,
        "Items": List[str],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigRestrictionsTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigRestrictionsTypeDef",
    {
        "GeoRestriction": ClientUpdateDistributionResponseDistributionDistributionConfigRestrictionsGeoRestrictionTypeDef
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionDistributionConfigTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "Aliases": ClientUpdateDistributionResponseDistributionDistributionConfigAliasesTypeDef,
        "DefaultRootObject": str,
        "Origins": ClientUpdateDistributionResponseDistributionDistributionConfigOriginsTypeDef,
        "OriginGroups": ClientUpdateDistributionResponseDistributionDistributionConfigOriginGroupsTypeDef,
        "DefaultCacheBehavior": ClientUpdateDistributionResponseDistributionDistributionConfigDefaultCacheBehaviorTypeDef,
        "CacheBehaviors": ClientUpdateDistributionResponseDistributionDistributionConfigCacheBehaviorsTypeDef,
        "CustomErrorResponses": ClientUpdateDistributionResponseDistributionDistributionConfigCustomErrorResponsesTypeDef,
        "Comment": str,
        "Logging": ClientUpdateDistributionResponseDistributionDistributionConfigLoggingTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ClientUpdateDistributionResponseDistributionDistributionConfigViewerCertificateTypeDef,
        "Restrictions": ClientUpdateDistributionResponseDistributionDistributionConfigRestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
    },
    total=False,
)

ClientUpdateDistributionResponseDistributionTypeDef = TypedDict(
    "ClientUpdateDistributionResponseDistributionTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "InProgressInvalidationBatches": int,
        "DomainName": str,
        "ActiveTrustedSigners": ClientUpdateDistributionResponseDistributionActiveTrustedSignersTypeDef,
        "DistributionConfig": ClientUpdateDistributionResponseDistributionDistributionConfigTypeDef,
        "AliasICPRecordals": List[
            ClientUpdateDistributionResponseDistributionAliasICPRecordalsTypeDef
        ],
    },
    total=False,
)

ClientUpdateDistributionResponseTypeDef = TypedDict(
    "ClientUpdateDistributionResponseTypeDef",
    {"Distribution": ClientUpdateDistributionResponseDistributionTypeDef, "ETag": str},
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    {"Format": str, "ProfileId": str, "ContentType": str},
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    {
        "ForwardWhenContentTypeIsUnknown": bool,
        "ContentTypeProfiles": ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    {"QueryArg": str, "ProfileId": str},
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    {
        "ForwardWhenQueryArgProfileIsUnknown": bool,
        "QueryArgProfiles": ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef,
    },
    total=False,
)

_RequiredClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef = TypedDict(
    "_RequiredClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef",
    {"CallerReference": str},
)
_OptionalClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef = TypedDict(
    "_OptionalClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef",
    {
        "Comment": str,
        "QueryArgProfileConfig": ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef,
        "ContentTypeProfileConfig": ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef,
    },
    total=False,
)


class ClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef(
    _RequiredClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef,
    _OptionalClientUpdateFieldLevelEncryptionConfigFieldLevelEncryptionConfigTypeDef,
):
    pass


ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef",
    {"Format": str, "ProfileId": str, "ContentType": str},
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef",
    {
        "ForwardWhenContentTypeIsUnknown": bool,
        "ContentTypeProfiles": ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigContentTypeProfilesTypeDef,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef",
    {"QueryArg": str, "ProfileId": str},
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef",
    {
        "ForwardWhenQueryArgProfileIsUnknown": bool,
        "QueryArgProfiles": ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigQueryArgProfilesTypeDef,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef",
    {
        "CallerReference": str,
        "Comment": str,
        "QueryArgProfileConfig": ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigQueryArgProfileConfigTypeDef,
        "ContentTypeProfileConfig": ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigContentTypeProfileConfigTypeDef,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionTypeDef",
    {
        "Id": str,
        "LastModifiedTime": datetime,
        "FieldLevelEncryptionConfig": ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionFieldLevelEncryptionConfigTypeDef,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionConfigResponseTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionConfigResponseTypeDef",
    {
        "FieldLevelEncryption": ClientUpdateFieldLevelEncryptionConfigResponseFieldLevelEncryptionTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    {
        "PublicKeyId": str,
        "ProviderId": str,
        "FieldPatterns": ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef
        ],
    },
    total=False,
)

_RequiredClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef = TypedDict(
    "_RequiredClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    {"Name": str},
)
_OptionalClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef = TypedDict(
    "_OptionalClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    {
        "CallerReference": str,
        "Comment": str,
        "EncryptionEntities": ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef,
    },
    total=False,
)


class ClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef(
    _RequiredClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
    _OptionalClientUpdateFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
):
    pass


ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef",
    {
        "PublicKeyId": str,
        "ProviderId": str,
        "FieldPatterns": ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsFieldPatternsTypeDef,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef",
    {
        "Quantity": int,
        "Items": List[
            ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef",
    {
        "Name": str,
        "CallerReference": str,
        "Comment": str,
        "EncryptionEntities": ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigEncryptionEntitiesTypeDef,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef",
    {
        "Id": str,
        "LastModifiedTime": datetime,
        "FieldLevelEncryptionProfileConfig": ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileFieldLevelEncryptionProfileConfigTypeDef,
    },
    total=False,
)

ClientUpdateFieldLevelEncryptionProfileResponseTypeDef = TypedDict(
    "ClientUpdateFieldLevelEncryptionProfileResponseTypeDef",
    {
        "FieldLevelEncryptionProfile": ClientUpdateFieldLevelEncryptionProfileResponseFieldLevelEncryptionProfileTypeDef,
        "ETag": str,
    },
    total=False,
)

_RequiredClientUpdatePublicKeyPublicKeyConfigTypeDef = TypedDict(
    "_RequiredClientUpdatePublicKeyPublicKeyConfigTypeDef", {"CallerReference": str}
)
_OptionalClientUpdatePublicKeyPublicKeyConfigTypeDef = TypedDict(
    "_OptionalClientUpdatePublicKeyPublicKeyConfigTypeDef",
    {"Name": str, "EncodedKey": str, "Comment": str},
    total=False,
)


class ClientUpdatePublicKeyPublicKeyConfigTypeDef(
    _RequiredClientUpdatePublicKeyPublicKeyConfigTypeDef,
    _OptionalClientUpdatePublicKeyPublicKeyConfigTypeDef,
):
    pass


ClientUpdatePublicKeyResponsePublicKeyPublicKeyConfigTypeDef = TypedDict(
    "ClientUpdatePublicKeyResponsePublicKeyPublicKeyConfigTypeDef",
    {"CallerReference": str, "Name": str, "EncodedKey": str, "Comment": str},
    total=False,
)

ClientUpdatePublicKeyResponsePublicKeyTypeDef = TypedDict(
    "ClientUpdatePublicKeyResponsePublicKeyTypeDef",
    {
        "Id": str,
        "CreatedTime": datetime,
        "PublicKeyConfig": ClientUpdatePublicKeyResponsePublicKeyPublicKeyConfigTypeDef,
    },
    total=False,
)

ClientUpdatePublicKeyResponseTypeDef = TypedDict(
    "ClientUpdatePublicKeyResponseTypeDef",
    {"PublicKey": ClientUpdatePublicKeyResponsePublicKeyTypeDef, "ETag": str},
    total=False,
)

ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef",
    {
        "AwsAccountNumber": str,
        "KeyPairIds": ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsKeyPairIdsTypeDef,
    },
    total=False,
)

ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef",
    {
        "Enabled": bool,
        "Quantity": int,
        "Items": List[
            ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersItemsTypeDef
        ],
    },
    total=False,
)

ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    {"DomainName": str, "OriginAccessIdentity": str},
    total=False,
)

ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef",
    {
        "CallerReference": str,
        "S3Origin": ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigS3OriginTypeDef,
        "Aliases": ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigAliasesTypeDef,
        "Comment": str,
        "Logging": ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigLoggingTypeDef,
        "TrustedSigners": ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
    total=False,
)

ClientUpdateStreamingDistributionResponseStreamingDistributionTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseStreamingDistributionTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "DomainName": str,
        "ActiveTrustedSigners": ClientUpdateStreamingDistributionResponseStreamingDistributionActiveTrustedSignersTypeDef,
        "StreamingDistributionConfig": ClientUpdateStreamingDistributionResponseStreamingDistributionStreamingDistributionConfigTypeDef,
    },
    total=False,
)

ClientUpdateStreamingDistributionResponseTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionResponseTypeDef",
    {
        "StreamingDistribution": ClientUpdateStreamingDistributionResponseStreamingDistributionTypeDef,
        "ETag": str,
    },
    total=False,
)

ClientUpdateStreamingDistributionStreamingDistributionConfigAliasesTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionStreamingDistributionConfigAliasesTypeDef",
    {"Quantity": int, "Items": List[str]},
    total=False,
)

ClientUpdateStreamingDistributionStreamingDistributionConfigLoggingTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionStreamingDistributionConfigLoggingTypeDef",
    {"Enabled": bool, "Bucket": str, "Prefix": str},
    total=False,
)

ClientUpdateStreamingDistributionStreamingDistributionConfigS3OriginTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionStreamingDistributionConfigS3OriginTypeDef",
    {"DomainName": str, "OriginAccessIdentity": str},
    total=False,
)

ClientUpdateStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef = TypedDict(
    "ClientUpdateStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef",
    {"Enabled": bool, "Quantity": int, "Items": List[str]},
    total=False,
)

_RequiredClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef = TypedDict(
    "_RequiredClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef",
    {"CallerReference": str},
)
_OptionalClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef = TypedDict(
    "_OptionalClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef",
    {
        "S3Origin": ClientUpdateStreamingDistributionStreamingDistributionConfigS3OriginTypeDef,
        "Aliases": ClientUpdateStreamingDistributionStreamingDistributionConfigAliasesTypeDef,
        "Comment": str,
        "Logging": ClientUpdateStreamingDistributionStreamingDistributionConfigLoggingTypeDef,
        "TrustedSigners": ClientUpdateStreamingDistributionStreamingDistributionConfigTrustedSignersTypeDef,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
    total=False,
)


class ClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef(
    _RequiredClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef,
    _OptionalClientUpdateStreamingDistributionStreamingDistributionConfigTypeDef,
):
    pass


CloudFrontOriginAccessIdentitySummaryTypeDef = TypedDict(
    "CloudFrontOriginAccessIdentitySummaryTypeDef",
    {"Id": str, "S3CanonicalUserId": str, "Comment": str},
)

_RequiredCloudFrontOriginAccessIdentityListTypeDef = TypedDict(
    "_RequiredCloudFrontOriginAccessIdentityListTypeDef",
    {"Marker": str, "MaxItems": int, "IsTruncated": bool, "Quantity": int},
)
_OptionalCloudFrontOriginAccessIdentityListTypeDef = TypedDict(
    "_OptionalCloudFrontOriginAccessIdentityListTypeDef",
    {"NextMarker": str, "Items": List[CloudFrontOriginAccessIdentitySummaryTypeDef]},
    total=False,
)


class CloudFrontOriginAccessIdentityListTypeDef(
    _RequiredCloudFrontOriginAccessIdentityListTypeDef,
    _OptionalCloudFrontOriginAccessIdentityListTypeDef,
):
    pass


ListCloudFrontOriginAccessIdentitiesResultTypeDef = TypedDict(
    "ListCloudFrontOriginAccessIdentitiesResultTypeDef",
    {"CloudFrontOriginAccessIdentityList": CloudFrontOriginAccessIdentityListTypeDef},
    total=False,
)

AliasICPRecordalTypeDef = TypedDict(
    "AliasICPRecordalTypeDef",
    {"CNAME": str, "ICPRecordalStatus": Literal["APPROVED", "SUSPENDED", "PENDING"]},
    total=False,
)

_RequiredAliasesTypeDef = TypedDict("_RequiredAliasesTypeDef", {"Quantity": int})
_OptionalAliasesTypeDef = TypedDict("_OptionalAliasesTypeDef", {"Items": List[str]}, total=False)


class AliasesTypeDef(_RequiredAliasesTypeDef, _OptionalAliasesTypeDef):
    pass


CachedMethodsTypeDef = TypedDict(
    "CachedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
)

_RequiredAllowedMethodsTypeDef = TypedDict(
    "_RequiredAllowedMethodsTypeDef",
    {
        "Quantity": int,
        "Items": List[Literal["GET", "HEAD", "POST", "PUT", "PATCH", "OPTIONS", "DELETE"]],
    },
)
_OptionalAllowedMethodsTypeDef = TypedDict(
    "_OptionalAllowedMethodsTypeDef", {"CachedMethods": CachedMethodsTypeDef}, total=False
)


class AllowedMethodsTypeDef(_RequiredAllowedMethodsTypeDef, _OptionalAllowedMethodsTypeDef):
    pass


_RequiredCookieNamesTypeDef = TypedDict("_RequiredCookieNamesTypeDef", {"Quantity": int})
_OptionalCookieNamesTypeDef = TypedDict(
    "_OptionalCookieNamesTypeDef", {"Items": List[str]}, total=False
)


class CookieNamesTypeDef(_RequiredCookieNamesTypeDef, _OptionalCookieNamesTypeDef):
    pass


_RequiredCookiePreferenceTypeDef = TypedDict(
    "_RequiredCookiePreferenceTypeDef", {"Forward": Literal["none", "whitelist", "all"]}
)
_OptionalCookiePreferenceTypeDef = TypedDict(
    "_OptionalCookiePreferenceTypeDef", {"WhitelistedNames": CookieNamesTypeDef}, total=False
)


class CookiePreferenceTypeDef(_RequiredCookiePreferenceTypeDef, _OptionalCookiePreferenceTypeDef):
    pass


_RequiredHeadersTypeDef = TypedDict("_RequiredHeadersTypeDef", {"Quantity": int})
_OptionalHeadersTypeDef = TypedDict("_OptionalHeadersTypeDef", {"Items": List[str]}, total=False)


class HeadersTypeDef(_RequiredHeadersTypeDef, _OptionalHeadersTypeDef):
    pass


_RequiredQueryStringCacheKeysTypeDef = TypedDict(
    "_RequiredQueryStringCacheKeysTypeDef", {"Quantity": int}
)
_OptionalQueryStringCacheKeysTypeDef = TypedDict(
    "_OptionalQueryStringCacheKeysTypeDef", {"Items": List[str]}, total=False
)


class QueryStringCacheKeysTypeDef(
    _RequiredQueryStringCacheKeysTypeDef, _OptionalQueryStringCacheKeysTypeDef
):
    pass


_RequiredForwardedValuesTypeDef = TypedDict(
    "_RequiredForwardedValuesTypeDef", {"QueryString": bool, "Cookies": CookiePreferenceTypeDef}
)
_OptionalForwardedValuesTypeDef = TypedDict(
    "_OptionalForwardedValuesTypeDef",
    {"Headers": HeadersTypeDef, "QueryStringCacheKeys": QueryStringCacheKeysTypeDef},
    total=False,
)


class ForwardedValuesTypeDef(_RequiredForwardedValuesTypeDef, _OptionalForwardedValuesTypeDef):
    pass


_RequiredLambdaFunctionAssociationTypeDef = TypedDict(
    "_RequiredLambdaFunctionAssociationTypeDef",
    {
        "LambdaFunctionARN": str,
        "EventType": Literal[
            "viewer-request", "viewer-response", "origin-request", "origin-response"
        ],
    },
)
_OptionalLambdaFunctionAssociationTypeDef = TypedDict(
    "_OptionalLambdaFunctionAssociationTypeDef", {"IncludeBody": bool}, total=False
)


class LambdaFunctionAssociationTypeDef(
    _RequiredLambdaFunctionAssociationTypeDef, _OptionalLambdaFunctionAssociationTypeDef
):
    pass


_RequiredLambdaFunctionAssociationsTypeDef = TypedDict(
    "_RequiredLambdaFunctionAssociationsTypeDef", {"Quantity": int}
)
_OptionalLambdaFunctionAssociationsTypeDef = TypedDict(
    "_OptionalLambdaFunctionAssociationsTypeDef",
    {"Items": List[LambdaFunctionAssociationTypeDef]},
    total=False,
)


class LambdaFunctionAssociationsTypeDef(
    _RequiredLambdaFunctionAssociationsTypeDef, _OptionalLambdaFunctionAssociationsTypeDef
):
    pass


_RequiredTrustedSignersTypeDef = TypedDict(
    "_RequiredTrustedSignersTypeDef", {"Enabled": bool, "Quantity": int}
)
_OptionalTrustedSignersTypeDef = TypedDict(
    "_OptionalTrustedSignersTypeDef", {"Items": List[str]}, total=False
)


class TrustedSignersTypeDef(_RequiredTrustedSignersTypeDef, _OptionalTrustedSignersTypeDef):
    pass


_RequiredCacheBehaviorTypeDef = TypedDict(
    "_RequiredCacheBehaviorTypeDef",
    {
        "PathPattern": str,
        "TargetOriginId": str,
        "ForwardedValues": ForwardedValuesTypeDef,
        "TrustedSigners": TrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
    },
)
_OptionalCacheBehaviorTypeDef = TypedDict(
    "_OptionalCacheBehaviorTypeDef",
    {
        "AllowedMethods": AllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": LambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)


class CacheBehaviorTypeDef(_RequiredCacheBehaviorTypeDef, _OptionalCacheBehaviorTypeDef):
    pass


_RequiredCacheBehaviorsTypeDef = TypedDict("_RequiredCacheBehaviorsTypeDef", {"Quantity": int})
_OptionalCacheBehaviorsTypeDef = TypedDict(
    "_OptionalCacheBehaviorsTypeDef", {"Items": List[CacheBehaviorTypeDef]}, total=False
)


class CacheBehaviorsTypeDef(_RequiredCacheBehaviorsTypeDef, _OptionalCacheBehaviorsTypeDef):
    pass


_RequiredCustomErrorResponseTypeDef = TypedDict(
    "_RequiredCustomErrorResponseTypeDef", {"ErrorCode": int}
)
_OptionalCustomErrorResponseTypeDef = TypedDict(
    "_OptionalCustomErrorResponseTypeDef",
    {"ResponsePagePath": str, "ResponseCode": str, "ErrorCachingMinTTL": int},
    total=False,
)


class CustomErrorResponseTypeDef(
    _RequiredCustomErrorResponseTypeDef, _OptionalCustomErrorResponseTypeDef
):
    pass


_RequiredCustomErrorResponsesTypeDef = TypedDict(
    "_RequiredCustomErrorResponsesTypeDef", {"Quantity": int}
)
_OptionalCustomErrorResponsesTypeDef = TypedDict(
    "_OptionalCustomErrorResponsesTypeDef", {"Items": List[CustomErrorResponseTypeDef]}, total=False
)


class CustomErrorResponsesTypeDef(
    _RequiredCustomErrorResponsesTypeDef, _OptionalCustomErrorResponsesTypeDef
):
    pass


_RequiredDefaultCacheBehaviorTypeDef = TypedDict(
    "_RequiredDefaultCacheBehaviorTypeDef",
    {
        "TargetOriginId": str,
        "ForwardedValues": ForwardedValuesTypeDef,
        "TrustedSigners": TrustedSignersTypeDef,
        "ViewerProtocolPolicy": Literal["allow-all", "https-only", "redirect-to-https"],
        "MinTTL": int,
    },
)
_OptionalDefaultCacheBehaviorTypeDef = TypedDict(
    "_OptionalDefaultCacheBehaviorTypeDef",
    {
        "AllowedMethods": AllowedMethodsTypeDef,
        "SmoothStreaming": bool,
        "DefaultTTL": int,
        "MaxTTL": int,
        "Compress": bool,
        "LambdaFunctionAssociations": LambdaFunctionAssociationsTypeDef,
        "FieldLevelEncryptionId": str,
    },
    total=False,
)


class DefaultCacheBehaviorTypeDef(
    _RequiredDefaultCacheBehaviorTypeDef, _OptionalDefaultCacheBehaviorTypeDef
):
    pass


StatusCodesTypeDef = TypedDict("StatusCodesTypeDef", {"Quantity": int, "Items": List[int]})

OriginGroupFailoverCriteriaTypeDef = TypedDict(
    "OriginGroupFailoverCriteriaTypeDef", {"StatusCodes": StatusCodesTypeDef}
)

OriginGroupMemberTypeDef = TypedDict("OriginGroupMemberTypeDef", {"OriginId": str})

OriginGroupMembersTypeDef = TypedDict(
    "OriginGroupMembersTypeDef", {"Quantity": int, "Items": List[OriginGroupMemberTypeDef]}
)

OriginGroupTypeDef = TypedDict(
    "OriginGroupTypeDef",
    {
        "Id": str,
        "FailoverCriteria": OriginGroupFailoverCriteriaTypeDef,
        "Members": OriginGroupMembersTypeDef,
    },
)

_RequiredOriginGroupsTypeDef = TypedDict("_RequiredOriginGroupsTypeDef", {"Quantity": int})
_OptionalOriginGroupsTypeDef = TypedDict(
    "_OptionalOriginGroupsTypeDef", {"Items": List[OriginGroupTypeDef]}, total=False
)


class OriginGroupsTypeDef(_RequiredOriginGroupsTypeDef, _OptionalOriginGroupsTypeDef):
    pass


OriginCustomHeaderTypeDef = TypedDict(
    "OriginCustomHeaderTypeDef", {"HeaderName": str, "HeaderValue": str}
)

_RequiredCustomHeadersTypeDef = TypedDict("_RequiredCustomHeadersTypeDef", {"Quantity": int})
_OptionalCustomHeadersTypeDef = TypedDict(
    "_OptionalCustomHeadersTypeDef", {"Items": List[OriginCustomHeaderTypeDef]}, total=False
)


class CustomHeadersTypeDef(_RequiredCustomHeadersTypeDef, _OptionalCustomHeadersTypeDef):
    pass


OriginSslProtocolsTypeDef = TypedDict(
    "OriginSslProtocolsTypeDef",
    {"Quantity": int, "Items": List[Literal["SSLv3", "TLSv1", "TLSv1.1", "TLSv1.2"]]},
)

_RequiredCustomOriginConfigTypeDef = TypedDict(
    "_RequiredCustomOriginConfigTypeDef",
    {
        "HTTPPort": int,
        "HTTPSPort": int,
        "OriginProtocolPolicy": Literal["http-only", "match-viewer", "https-only"],
    },
)
_OptionalCustomOriginConfigTypeDef = TypedDict(
    "_OptionalCustomOriginConfigTypeDef",
    {
        "OriginSslProtocols": OriginSslProtocolsTypeDef,
        "OriginReadTimeout": int,
        "OriginKeepaliveTimeout": int,
    },
    total=False,
)


class CustomOriginConfigTypeDef(
    _RequiredCustomOriginConfigTypeDef, _OptionalCustomOriginConfigTypeDef
):
    pass


S3OriginConfigTypeDef = TypedDict("S3OriginConfigTypeDef", {"OriginAccessIdentity": str})

_RequiredOriginTypeDef = TypedDict("_RequiredOriginTypeDef", {"Id": str, "DomainName": str})
_OptionalOriginTypeDef = TypedDict(
    "_OptionalOriginTypeDef",
    {
        "OriginPath": str,
        "CustomHeaders": CustomHeadersTypeDef,
        "S3OriginConfig": S3OriginConfigTypeDef,
        "CustomOriginConfig": CustomOriginConfigTypeDef,
    },
    total=False,
)


class OriginTypeDef(_RequiredOriginTypeDef, _OptionalOriginTypeDef):
    pass


OriginsTypeDef = TypedDict("OriginsTypeDef", {"Quantity": int, "Items": List[OriginTypeDef]})

_RequiredGeoRestrictionTypeDef = TypedDict(
    "_RequiredGeoRestrictionTypeDef",
    {"RestrictionType": Literal["blacklist", "whitelist", "none"], "Quantity": int},
)
_OptionalGeoRestrictionTypeDef = TypedDict(
    "_OptionalGeoRestrictionTypeDef", {"Items": List[str]}, total=False
)


class GeoRestrictionTypeDef(_RequiredGeoRestrictionTypeDef, _OptionalGeoRestrictionTypeDef):
    pass


RestrictionsTypeDef = TypedDict("RestrictionsTypeDef", {"GeoRestriction": GeoRestrictionTypeDef})

ViewerCertificateTypeDef = TypedDict(
    "ViewerCertificateTypeDef",
    {
        "CloudFrontDefaultCertificate": bool,
        "IAMCertificateId": str,
        "ACMCertificateArn": str,
        "SSLSupportMethod": Literal["sni-only", "vip"],
        "MinimumProtocolVersion": Literal[
            "SSLv3", "TLSv1", "TLSv1_2016", "TLSv1.1_2016", "TLSv1.2_2018"
        ],
        "Certificate": str,
        "CertificateSource": Literal["cloudfront", "iam", "acm"],
    },
    total=False,
)

_RequiredDistributionSummaryTypeDef = TypedDict(
    "_RequiredDistributionSummaryTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "DomainName": str,
        "Aliases": AliasesTypeDef,
        "Origins": OriginsTypeDef,
        "DefaultCacheBehavior": DefaultCacheBehaviorTypeDef,
        "CacheBehaviors": CacheBehaviorsTypeDef,
        "CustomErrorResponses": CustomErrorResponsesTypeDef,
        "Comment": str,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
        "ViewerCertificate": ViewerCertificateTypeDef,
        "Restrictions": RestrictionsTypeDef,
        "WebACLId": str,
        "HttpVersion": Literal["http1.1", "http2"],
        "IsIPV6Enabled": bool,
    },
)
_OptionalDistributionSummaryTypeDef = TypedDict(
    "_OptionalDistributionSummaryTypeDef",
    {"OriginGroups": OriginGroupsTypeDef, "AliasICPRecordals": List[AliasICPRecordalTypeDef]},
    total=False,
)


class DistributionSummaryTypeDef(
    _RequiredDistributionSummaryTypeDef, _OptionalDistributionSummaryTypeDef
):
    pass


_RequiredDistributionListTypeDef = TypedDict(
    "_RequiredDistributionListTypeDef",
    {"Marker": str, "MaxItems": int, "IsTruncated": bool, "Quantity": int},
)
_OptionalDistributionListTypeDef = TypedDict(
    "_OptionalDistributionListTypeDef",
    {"NextMarker": str, "Items": List[DistributionSummaryTypeDef]},
    total=False,
)


class DistributionListTypeDef(_RequiredDistributionListTypeDef, _OptionalDistributionListTypeDef):
    pass


ListDistributionsResultTypeDef = TypedDict(
    "ListDistributionsResultTypeDef", {"DistributionList": DistributionListTypeDef}, total=False
)

InvalidationSummaryTypeDef = TypedDict(
    "InvalidationSummaryTypeDef", {"Id": str, "CreateTime": datetime, "Status": str}
)

_RequiredInvalidationListTypeDef = TypedDict(
    "_RequiredInvalidationListTypeDef",
    {"Marker": str, "MaxItems": int, "IsTruncated": bool, "Quantity": int},
)
_OptionalInvalidationListTypeDef = TypedDict(
    "_OptionalInvalidationListTypeDef",
    {"NextMarker": str, "Items": List[InvalidationSummaryTypeDef]},
    total=False,
)


class InvalidationListTypeDef(_RequiredInvalidationListTypeDef, _OptionalInvalidationListTypeDef):
    pass


ListInvalidationsResultTypeDef = TypedDict(
    "ListInvalidationsResultTypeDef", {"InvalidationList": InvalidationListTypeDef}, total=False
)

S3OriginTypeDef = TypedDict("S3OriginTypeDef", {"DomainName": str, "OriginAccessIdentity": str})

StreamingDistributionSummaryTypeDef = TypedDict(
    "StreamingDistributionSummaryTypeDef",
    {
        "Id": str,
        "ARN": str,
        "Status": str,
        "LastModifiedTime": datetime,
        "DomainName": str,
        "S3Origin": S3OriginTypeDef,
        "Aliases": AliasesTypeDef,
        "TrustedSigners": TrustedSignersTypeDef,
        "Comment": str,
        "PriceClass": Literal["PriceClass_100", "PriceClass_200", "PriceClass_All"],
        "Enabled": bool,
    },
)

_RequiredStreamingDistributionListTypeDef = TypedDict(
    "_RequiredStreamingDistributionListTypeDef",
    {"Marker": str, "MaxItems": int, "IsTruncated": bool, "Quantity": int},
)
_OptionalStreamingDistributionListTypeDef = TypedDict(
    "_OptionalStreamingDistributionListTypeDef",
    {"NextMarker": str, "Items": List[StreamingDistributionSummaryTypeDef]},
    total=False,
)


class StreamingDistributionListTypeDef(
    _RequiredStreamingDistributionListTypeDef, _OptionalStreamingDistributionListTypeDef
):
    pass


ListStreamingDistributionsResultTypeDef = TypedDict(
    "ListStreamingDistributionsResultTypeDef",
    {"StreamingDistributionList": StreamingDistributionListTypeDef},
    total=False,
)

PaginatorConfigTypeDef = TypedDict(
    "PaginatorConfigTypeDef", {"MaxItems": int, "PageSize": int, "StartingToken": str}, total=False
)

WaiterConfigTypeDef = TypedDict(
    "WaiterConfigTypeDef", {"Delay": int, "MaxAttempts": int}, total=False
)
