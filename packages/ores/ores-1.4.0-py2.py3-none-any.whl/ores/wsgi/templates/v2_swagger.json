{
  "info": {
    "version": "2",
    "title": "ORES scoring interface",
    "description": "A RESTful API for scoring revisions (v2 paths).  These paths provide\naccess to a set of scoring models.  This API primarily differs from v1 in\nthat there is only one response document schema that any path returns.\nThis response document contains 'error' information, 'warnings' and\n'scores' structures.\n\nThere's also new functionality for returning 'feature' values used in\nscoring and 'inject'ing custom feature values for scoring.\n"
  },
  "basePath": "/",
  "swagger": "2.0",
  "schemes": [
    "{{scheme|safe}}"
  ],
  "host": "{{host|safe}}",
  "produces": [
    "application/json"
  ],
  "definitions": {
    "ScoreDocument": {
      "description": "A score generated by a model for a specific revision (or the error that occurred while generating a score)",
      "type": "object",
      "properties": {
        "error": {
          "description": "If scoring this revision failed, this field contains information about the error",
          "type": "object",
          "properties": {
            "code": {
              "description": "A short string identifying the error",
              "type": "string"
            },
            "message": {
              "description": "A human-readable explanation of what went wrong",
              "type": "string"
            }
          }
        },
        "additionalProperties": {
          "type": [
            "number",
            "string",
            "boolean",
            "array",
            "object"
          ]
        }
      }
    },
    "ContextDocument": {
      "description": "A mapping between model names on ModelDocuments",
      "additionalProperties": {
        "$ref": "#/definitions/ModelDocument"
      },
      "type": "object"
    },
    "ResponseDocument": {
      "type": "object",
      "properties": {
        "warnings": {
          "description": "A list of warnings raised while generating a response",
          "items": {
            "$ref": "#/definitions/ErrorWarningDocument"
          },
          "type": "array"
        },
        "error": {
          "description": "An error that prevented processing the request",
          "type": "object",
          "properties": {
            "code": {
              "description": "A short string identifying the error",
              "type": "string"
            },
            "message": {
              "description": "A human-readable explanation of what went wrong",
              "type": "string"
            }
          }
        },
        "scores": {
          "description": "A mapping between contect names and ContextDocuments",
          "additionalProperties": {
            "$ref": "#/definitions/ContextDocument"
          },
          "type": "object"
        }
      }
    },
    "ErrorWarningDocument": {
      "type": "object",
      "properties": {
        "code": {
          "description": "A short string identifying the error",
          "type": "string"
        },
        "message": {
          "description": "A human-readable explanation of what went wrong",
          "type": "string"
        }
      }
    },
    "ModelDocument": {
      "type": "object",
      "properties": {
        "version": {
          "description": "A semantic version number for the model",
          "type": "string"
        },
        "features": {
          "description": "A mapping of feature names to the values generated in scoring",
          "additionalProperties": {
            "type": [
              "number",
              "boolean"
            ]
          },
          "type": "object"
        },
        "scores": {
          "description": "A mapping between revid and ScoreDocuments",
          "additionalProperties": {
            "$ref": "#/definitions/ScoreDocument"
          },
          "type": "object"
        },
        "info": {
          "required": [
            "type",
            "version"
          ],
          "description": "Extended information about the model",
          "type": "object",
          "properties": {
            "version": {
              "description": "A semantic version string",
              "type": "string"
            },
            "trained": {
              "description": "The datetime at which the model was trained (in seconds since Jan. 1st 1970)",
              "type": "number"
            },
            "params": {
              "description": "A list of parameters used when constructing the model",
              "additionalProperties": true,
              "type": "object"
            },
            "type": {
              "description": "The type of model used to score",
              "type": "string"
            },
            "test_stats": {
              "description": "A list of test statistics used on the model.",
              "additionalProperties": true,
              "type": "object"
            }
          }
        }
      }
    }
  },
  "paths": {
    "/v2/precache": {
      "get": {
        "summary": "Precache scores of {revids} based on precaching configs.",
        "parameters": [
          {
            "required": true,
            "name": "context",
            "in": "query",
            "description": "The name of the {context} to find {model}.  This is usually the\ndbname of a wiki project.\n",
            "type": "string",
            "format": "string"
          },
          {
            "required": false,
            "name": "bot",
            "in": "query",
            "description": "If the edit is made by a bot",
            "type": "string",
            "format": "Empty string if true"
          },
          {
            "required": true,
            "name": "revids",
            "in": "query",
            "description": "The revision IDs to score (split multiple ids with \"|\")",
            "type": "number",
            "format": "integer"
          }
        ],
        "description": "This route provides access to all {models} configured for precaching within a {context}.",
        "tags": [
          "scoring"
        ],
        "responses": {
          "503": {
            "description": "Server overloaded -- Slow down and/or please try again later",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          },
          "200": {
            "description": "A JSON document containing scores or information about the available models",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          },
          "default": {
            "description": "An error occurred that prevented any scores from being generated",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          }
        }
      }
    },
    "/v2/scores/{context}": {
      "get": {
        "summary": "Score {revids} using multiple {models} in the same request.",
        "parameters": [
          {
            "required": true,
            "name": "context",
            "in": "path",
            "description": "The name of the {context} to find {model}.  This is usually the\ndbname of a wiki project.\n",
            "type": "string",
            "format": "string"
          },
          {
            "required": false,
            "name": "models",
            "in": "query",
            "description": "The name of a model to use when scoring",
            "type": "string",
            "format": "\\\"|\\\" delimited model names"
          },
          {
            "required": false,
            "name": "revids",
            "in": "query",
            "description": "The revision IDs to score (split multiple ids with \"|\")",
            "type": "number",
            "format": "integer"
          },
          {
            "required": false,
            "name": "model_info",
            "in": "query",
            "description": "Model information fields to include in the response.  If no value is\nprovided, all info fields will be returned.  Otherise, fields will\nbe limited to those provided (e.g. \"type|test_stats\").\n",
            "type": "string",
            "format": "\\\"|\\\" delimited field names"
          }
        ],
        "description": "This route provides access to all {models} within a {context}.  This\npath is useful for either exploring information about {models} available\nwithin a {context} or scoring one or more {revids} using one or more\n{models} at the same time.\n",
        "tags": [
          "scoring"
        ],
        "responses": {
          "503": {
            "description": "Server overloaded -- Slow down and/or please try again later",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          },
          "200": {
            "description": "A JSON document containing scores or information about the available models",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          },
          "default": {
            "description": "An error occurred that prevented any scores from being generated",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          }
        }
      }
    },
    "/v2/scores/{context}/{model}": {
      "get": {
        "summary": "Score many {revids} using {model} in the same request.",
        "parameters": [
          {
            "required": true,
            "name": "context",
            "in": "path",
            "description": "The name of the {context} to find {model}.  This is usually the\ndbname of a wiki project.\n",
            "type": "string",
            "format": "string"
          },
          {
            "required": true,
            "name": "model",
            "in": "path",
            "description": "The name of a model to use when scoring",
            "type": "string",
            "format": "string"
          },
          {
            "required": false,
            "name": "revids",
            "in": "query",
            "description": "The revision IDs to score",
            "type": "number",
            "format": "\\\"|\\\" delimited integers"
          },
          {
            "required": false,
            "name": "model_info",
            "in": "query",
            "description": "Model information fields to include in the response.  If no value is\nprovided, all info fields will be returned.  Otherise, fields will\nbe limited to those provided (e.g. \"type|test_stats\").\n",
            "type": "string",
            "format": "\\\"|\\\" delimited field names"
          }
        ],
        "description": "Provides a means of scoring many {revids} using {model} in the same\nrequest.\n",
        "tags": [
          "scoring"
        ],
        "responses": {
          "503": {
            "description": "Server overloaded -- Slow down and/or please try again later",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          },
          "200": {
            "description": "A JSON document containing scores",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          },
          "default": {
            "description": "An error occurred that prevented any scores from being generated",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          }
        }
      }
    },
    "/v2/scores/": {
      "get": {
        "summary": "List available scoring contexts and models.",
        "parameters": [
          {
            "required": false,
            "name": "model_info",
            "in": "query",
            "description": "Model information fields to include in the response.  If no value is\nprovided, all info fields will be returned.  Otherise, fields will\nbe limited to those provided (e.g. \"type|test_stats\").\n",
            "type": "string",
            "format": "\\\"|\\\" delimited field names"
          }
        ],
        "description": "This route provides a list of available contexts for scoring.\nGenerally a wiki is 1:1 with a context and a context is expressed as\nthe database name of the wiki.  For example \"enwiki\" is English\nWikipedia and \"wikidatawiki\" is Wikidata.\n",
        "tags": [
          "scoring"
        ],
        "responses": {
          "200": {
            "description": "A JSON document information about the available contexts and models",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          },
          "default": {
            "description": "An error occurred that prevented contexts from being retrieved",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          }
        }
      }
    },
    "/v2/scores/{context}/{model}/{revid}": {
      "get": {
        "summary": "Score a single {revid} using {model}.",
        "parameters": [
          {
            "required": true,
            "name": "context",
            "in": "path",
            "description": "The name of the {context} to find {model}.  This is usually the\ndbname of a wiki project.\n",
            "type": "string",
            "format": "string"
          },
          {
            "required": true,
            "name": "model",
            "in": "path",
            "description": "The name of a model to use when scoring",
            "type": "string",
            "format": "string"
          },
          {
            "required": true,
            "name": "revid",
            "in": "path",
            "description": "The revision ID to score",
            "type": "number",
            "format": "integer"
          },
          {
            "required": false,
            "name": "model_info",
            "in": "query",
            "description": "Model information fields to include in the response.  If no value is\nprovided, all info fields will be returned.  Otherise, fields will\nbe limited to those provided (e.g. \"type|test_stats\").\n",
            "type": "string",
            "format": "\\\"|\\\" delimited field names"
          },
          {
            "required": false,
            "name": "features",
            "in": "query",
            "description": "If present, feature values used in scoring will be presented in the\nresponse\n",
            "type": "boolean",
            "format": "n/a"
          },
          {
            "required": false,
            "name": "inject",
            "in": "query",
            "description": "A JSON formatted set of of pre-computed datasources/features to use\nwhen scoring.  Keys correspond to the name of dependencies used\nwhen scoring (e.g. features and datasources).\n",
            "type": "JSON",
            "format": "key-value pairs"
          }
        ],
        "description": "Provides a means of scoring {revid} using {model} in {context}.\n",
        "tags": [
          "scoring"
        ],
        "responses": {
          "503": {
            "description": "Server overloaded -- Slow down and/or please try again later",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          },
          "200": {
            "description": "A JSON document containing scores",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          },
          "default": {
            "description": "An error occurred that prevented any scores from being generated",
            "schema": {
              "$ref": "#/definitions/ResponseDocument"
            }
          }
        }
      }
    }
  }
}
