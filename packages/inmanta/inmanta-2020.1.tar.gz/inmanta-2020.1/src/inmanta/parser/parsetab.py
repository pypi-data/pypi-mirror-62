
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTrightMLSrightMLS_ENDAND AS CID CMP_OP DEFINED DICT ELSE END ENTITY EXTENDS FALSE FLOAT FOR ID IF IMPLEMENT IMPLEMENTATION IMPORT IN INDEX INT IS MATCHING MLS MLS_END NOT NULL OR PARENTS PEQ REGEX REL SEP STRING TRUE TYPEDEF UNDEF USING WHENmain : top_stmt mainmain : emptytop_stmt : mls\n                | entity_def\n                | implement_def\n                | implementation_def\n                | relation\n                | statement\n                | typedef\n                | index\n                | import empty : import : IMPORT ns_refimport : IMPORT ns_ref AS IDstatement : assign\n                | constructor\n                | function_call\n                | for\n                | ifstmt_list : statement stmt_liststmt_list : statementassign : var_ref \'=\' operandassign : var_ref PEQ operandfor : FOR ID IN operand \':\' blockif : IF condition \':\' blockif : IF condition \':\' stmt_list ELSE \':\' blockentity_def : ENTITY CID \':\' entity_body_outer entity_def : ENTITY ID \':\' entity_body_outer entity_def : ENTITY CID EXTENDS class_ref_list \':\' entity_body_outer entity_def : ENTITY ID EXTENDS class_ref_list \':\' entity_body_outer entity_body_outer : mls entity_body ENDentity_body_outer : entity_body END entity_body_outer : END entity_body_outer : mls END entity_body : entity_body attr entity_body : attrattr_base_type : ns_refattr_type_multi : attr_base_type \'[\' \']\'attr_type_opt : attr_type_multi \'?\'\n        | attr_base_type \'?\'attr_type : attr_type_opt\n        | attr_type_multi\n        | attr_base_typeattr : attr_type IDattr : attr_type ID \'=\' constant\n           | attr_type ID \'=\' constant_listattr : attr_type ID \'=\' UNDEFattr : DICT IDattr : DICT ID \'=\' map_defattr : DICT ID \'=\' NULLattr : DICT \'?\' IDattr : DICT \'?\'  ID \'=\' map_defattr : DICT \'?\'  ID \'=\' NULLimplement_def : IMPLEMENT class_ref USING PARENTSimplement_def : IMPLEMENT class_ref USING ns_listimplement_def : IMPLEMENT class_ref USING ns_list WHEN conditionimplement_def : IMPLEMENT class_ref USING ns_list mlsimplement_def : IMPLEMENT class_ref USING PARENTS mlsimplement_def : IMPLEMENT class_ref USING ns_list WHEN condition mlsimplementation_def : IMPLEMENTATION ID FOR class_ref implementationimplementation : \':\' mls blockimplementation : \':\' blockblock : stmt_list ENDblock : ENDrelation : class_ref ID multi REL multi class_ref IDrelation : class_ref ID multi REL multi class_ref ID mlsrelation : relationnew mlsrelation : relationnewrelationnew : class_ref \'.\' ID multi REL class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi REL class_refrelationnew : class_ref \'.\' ID multi operand_list class_ref \'.\' ID multirelationnew : class_ref \'.\' ID multi operand_list class_refmulti : \'[\' INT \']\' multi : \'[\' INT \':\' \']\' multi : \'[\' INT \':\' INT \']\' multi : \'[\'  \':\' INT \']\' typedef : typedef_innertypedef : typedef_inner mlstypedef_inner : TYPEDEF ID AS ns_ref MATCHING REGEX\n                | TYPEDEF ID AS ns_ref MATCHING conditiontypedef_inner : TYPEDEF CID AS constructorindex : INDEX class_ref \'(\' id_list \')\' condition : \'(\' condition \')\'condition : operand CMP_OP operand\n                | operand IN list_def\n                | operand IN var_ref\n                | condition AND condition\n                | condition OR condition condition : function_call\n                | var_ref\n                | map_lookupcondition : NOT conditioncondition : var_ref \'.\' ID IS DEFINEDcondition : ID IS DEFINEDcondition : boolean_constant operand : constant\n              | function_call\n              | constructor\n              | list_def\n              | map_def\n              | var_ref\n              | index_lookup\n              | map_lookup map_lookup : attr_ref \'[\' operand \']\'\n                   | local_var \'[\' operand \']\'\n                   | map_lookup \'[\' operand \']\' constructor : class_ref \'(\' param_list \')\'  function_call : ns_ref \'(\' function_param_list \')\' list_def : \'[\' operand_list \']\'pair_list : STRING \':\' operand \',\' pair_list\n        | STRING \':\' operand empty pair_list_emptypair_list : pair_list_empty\n        pair_list_empty : empty map_def : \'{\' pair_list \'}\' index_lookup : class_ref \'[\' param_list \']\' index_lookup : attr_ref \'[\' param_list \']\' constant : INT\n    | FLOAT\n     constant : NULL\n     constant : REGEX\n     constant : boolean_constant  boolean_constant : TRUE\n     boolean_constant : FALSE\n     constant : STRING  constant : mls  constant_list : \'[\' constants \']\' constants : constantconstants : constants : constant \',\' constantswrapped_kwargs : \'*\' \'*\' operandparam_list_element : ID \'=\' operandparam_list_element : wrapped_kwargsparam_list : param_list_empty\n        param_list_empty : emptyparam_list : param_list_element empty param_list_empty\n            | param_list_element \',\' param_listfunction_param_list_element : param_list_elementfunction_param_list_element : operandfunction_param_list : function_param_list_empty\n        function_param_list_empty : emptyfunction_param_list : function_param_list_element empty function_param_list_empty\n            | function_param_list_element \',\' function_param_listoperand_list : operand \',\' operand_listoperand_list : operandoperand_list :ns_list : ns_ref \',\' ns_listns_list : ns_refvar_ref : attr_refattr_ref : var_ref \'.\' IDlocal_var : ns_refvar_ref : ns_refclass_ref : CIDclass_ref : ns_ref SEP CIDclass_ref_list : class_ref \',\' class_ref_listclass_ref_list : var_ref \',\' class_ref_listclass_ref_list : class_refclass_ref_list : var_refns_ref : ns_ref SEP IDns_ref : IDid_list : ID "," id_listid_list : IDmls : MLS_ENDmls : MLS mls'
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,35,36,37,47,48,50,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,106,107,108,116,117,118,119,120,121,122,123,132,146,149,161,163,164,165,170,179,180,184,186,190,191,192,193,194,195,196,197,199,202,206,209,211,212,224,226,229,238,241,246,249,250,251,253,254,257,262,265,266,267,270,271,272,273,275,277,280,283,284,292,293,294,297,298,305,310,311,],[-12,0,-12,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,-152,-159,-68,-15,-16,-17,-18,-19,-77,-148,-1,-163,-67,-78,-13,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,-92,-27,-33,-28,-54,-55,-147,-107,-14,-108,-25,-64,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-81,-34,-32,-58,-57,-73,-60,-82,-63,-106,-104,-116,-105,-115,-31,-29,-30,-56,-146,-74,-76,-70,-72,-62,-24,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'MLS_END':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,35,37,47,48,50,52,53,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,86,88,102,106,107,108,116,117,118,119,120,121,122,123,125,126,128,131,132,135,138,146,149,161,163,164,165,169,170,173,174,179,180,182,183,184,186,190,191,192,193,194,195,196,197,199,202,203,206,207,209,211,212,220,223,224,225,226,229,238,239,241,246,249,250,251,253,254,256,257,258,262,265,266,267,270,271,272,273,275,277,280,283,284,288,292,293,294,297,298,305,309,310,311,],[13,13,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,13,-152,-159,13,-15,-16,-17,-18,-19,13,13,-148,-163,-67,-78,-13,13,13,13,13,-99,-90,-89,-91,13,-159,-95,-96,-98,-100,-102,-151,-148,13,-122,-123,-117,-118,-119,-120,-124,-125,13,13,13,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,13,13,13,13,-92,13,13,-27,-33,-28,13,13,-147,13,-107,13,13,-14,-108,13,13,-25,-64,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,13,-114,13,-81,-34,-32,13,13,-58,13,-57,-73,-60,13,-82,-63,-106,-104,-116,-105,-115,13,-31,13,-29,-30,13,-146,-74,-76,-70,-72,-62,-24,-93,-79,-80,13,-59,13,-75,-61,-26,-66,13,-69,-71,]),'MLS':([0,2,4,5,6,7,8,9,10,11,12,13,14,16,17,22,23,24,25,26,27,28,33,35,37,47,48,50,52,53,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,86,88,102,106,107,108,116,117,118,119,120,121,122,123,125,126,128,131,132,135,138,146,149,161,163,164,165,169,170,173,174,179,180,182,183,184,186,190,191,192,193,194,195,196,197,199,202,203,206,207,209,211,212,220,223,224,225,226,229,238,239,241,246,249,250,251,253,254,256,257,258,262,265,266,267,270,271,272,273,275,277,280,283,284,288,292,293,294,297,298,305,309,310,311,],[14,14,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,14,-152,-159,14,-15,-16,-17,-18,-19,14,14,-148,-163,-67,-78,-13,14,14,14,14,-99,-90,-89,-91,14,-159,-95,-96,-98,-100,-102,-151,-148,14,-122,-123,-117,-118,-119,-120,-124,-125,14,14,14,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,14,14,14,14,-92,14,14,-27,-33,-28,14,14,-147,14,-107,14,14,-14,-108,14,14,-25,-64,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,14,-114,14,-81,-34,-32,14,14,-58,14,-57,-73,-60,14,-82,-63,-106,-104,-116,-105,-115,14,-31,14,-29,-30,14,-146,-74,-76,-70,-72,-62,-24,-93,-79,-80,14,-59,14,-75,-61,-26,-66,14,-69,-71,]),'ENTITY':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,35,37,47,48,50,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,106,107,108,116,117,118,119,120,121,122,123,132,146,149,161,163,164,165,170,179,180,184,186,190,191,192,193,194,195,196,197,199,202,206,209,211,212,224,226,229,238,241,246,249,250,251,253,254,257,262,265,266,267,270,271,272,273,275,277,280,283,284,292,293,294,297,298,305,310,311,],[15,15,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,-152,-159,-68,-15,-16,-17,-18,-19,-77,-148,-163,-67,-78,-13,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,-92,-27,-33,-28,-54,-55,-147,-107,-14,-108,-25,-64,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-81,-34,-32,-58,-57,-73,-60,-82,-63,-106,-104,-116,-105,-115,-31,-29,-30,-56,-146,-74,-76,-70,-72,-62,-24,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'IMPLEMENT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,35,37,47,48,50,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,106,107,108,116,117,118,119,120,121,122,123,132,146,149,161,163,164,165,170,179,180,184,186,190,191,192,193,194,195,196,197,199,202,206,209,211,212,224,226,229,238,241,246,249,250,251,253,254,257,262,265,266,267,270,271,272,273,275,277,280,283,284,292,293,294,297,298,305,310,311,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,-152,-159,-68,-15,-16,-17,-18,-19,-77,-148,-163,-67,-78,-13,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,-92,-27,-33,-28,-54,-55,-147,-107,-14,-108,-25,-64,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-81,-34,-32,-58,-57,-73,-60,-82,-63,-106,-104,-116,-105,-115,-31,-29,-30,-56,-146,-74,-76,-70,-72,-62,-24,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'IMPLEMENTATION':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,35,37,47,48,50,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,106,107,108,116,117,118,119,120,121,122,123,132,146,149,161,163,164,165,170,179,180,184,186,190,191,192,193,194,195,196,197,199,202,206,209,211,212,224,226,229,238,241,246,249,250,251,253,254,257,262,265,266,267,270,271,272,273,275,277,280,283,284,292,293,294,297,298,305,310,311,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,-152,-159,-68,-15,-16,-17,-18,-19,-77,-148,-163,-67,-78,-13,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,-92,-27,-33,-28,-54,-55,-147,-107,-14,-108,-25,-64,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-81,-34,-32,-58,-57,-73,-60,-82,-63,-106,-104,-116,-105,-115,-31,-29,-30,-56,-146,-74,-76,-70,-72,-62,-24,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'INDEX':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,35,37,47,48,50,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,106,107,108,116,117,118,119,120,121,122,123,132,146,149,161,163,164,165,170,179,180,184,186,190,191,192,193,194,195,196,197,199,202,206,209,211,212,224,226,229,238,241,246,249,250,251,253,254,257,262,265,266,267,270,271,272,273,275,277,280,283,284,292,293,294,297,298,305,310,311,],[29,29,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,-152,-159,-68,-15,-16,-17,-18,-19,-77,-148,-163,-67,-78,-13,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,-92,-27,-33,-28,-54,-55,-147,-107,-14,-108,-25,-64,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-81,-34,-32,-58,-57,-73,-60,-82,-63,-106,-104,-116,-105,-115,-31,-29,-30,-56,-146,-74,-76,-70,-72,-62,-24,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'IMPORT':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,35,37,47,48,50,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,106,107,108,116,117,118,119,120,121,122,123,132,146,149,161,163,164,165,170,179,180,184,186,190,191,192,193,194,195,196,197,199,202,206,209,211,212,224,226,229,238,241,246,249,250,251,253,254,257,262,265,266,267,270,271,272,273,275,277,280,283,284,292,293,294,297,298,305,310,311,],[30,30,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,-152,-159,-68,-15,-16,-17,-18,-19,-77,-148,-163,-67,-78,-13,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,-92,-27,-33,-28,-54,-55,-147,-107,-14,-108,-25,-64,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-81,-34,-32,-58,-57,-73,-60,-82,-63,-106,-104,-116,-105,-115,-31,-29,-30,-56,-146,-74,-76,-70,-72,-62,-24,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'CID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,22,23,24,25,26,27,28,29,33,34,35,37,47,48,50,51,52,53,54,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,87,89,101,102,106,107,108,116,117,118,119,120,121,122,123,124,125,126,128,131,132,134,135,137,138,145,146,149,161,163,164,165,169,170,173,174,179,180,182,183,184,186,187,190,191,192,193,194,195,196,197,199,202,203,206,207,209,211,212,221,222,224,225,226,228,229,232,233,238,239,240,241,246,249,250,251,252,253,254,256,257,262,265,266,267,270,271,272,273,274,275,277,279,280,283,284,292,293,294,297,298,305,310,311,],[16,16,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,38,-152,-159,16,-68,-15,-16,-17,-18,-19,-77,16,16,85,-148,-163,-67,-78,-13,106,16,16,16,16,-99,-90,-89,-91,16,-159,-95,-96,-98,-100,-102,-151,-148,16,-122,-123,-117,-118,-119,-120,-124,-125,16,16,16,16,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,16,16,16,16,16,-92,106,16,-144,16,16,-27,-33,-28,-54,-55,-147,16,-107,16,16,-14,-108,16,16,-25,-64,16,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,16,-114,16,-81,-34,-32,16,16,-58,16,-57,16,-73,16,16,-60,16,16,-82,-63,-106,-104,-116,-143,-105,-115,16,-31,-29,-30,-56,-146,-74,-76,-70,-72,16,-62,-24,16,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'FOR':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,35,37,45,47,48,50,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,106,107,108,116,117,118,119,120,121,122,123,124,132,146,149,161,163,164,165,170,179,180,184,186,187,190,191,192,193,194,195,196,197,199,202,206,209,211,212,224,226,229,238,239,240,241,246,249,250,251,253,254,257,262,265,266,267,270,271,272,273,274,275,277,279,280,283,284,292,293,294,297,298,305,310,311,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,-152,-159,-68,-15,-16,-17,-18,-19,-77,-148,-163,101,-67,-78,-13,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,21,-92,-27,-33,-28,-54,-55,-147,-107,-14,-108,-25,-64,21,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-81,-34,-32,-58,-57,-73,-60,21,21,-82,-63,-106,-104,-116,-105,-115,-31,-29,-30,-56,-146,-74,-76,-70,-72,21,-62,-24,21,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'IF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,35,37,47,48,50,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,106,107,108,116,117,118,119,120,121,122,123,124,132,146,149,161,163,164,165,170,179,180,184,186,187,190,191,192,193,194,195,196,197,199,202,206,209,211,212,224,226,229,238,239,240,241,246,249,250,251,253,254,257,262,265,266,267,270,271,272,273,274,275,277,279,280,283,284,292,293,294,297,298,305,310,311,],[33,33,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,-152,-159,-68,-15,-16,-17,-18,-19,-77,-148,-163,-67,-78,-13,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,33,-92,-27,-33,-28,-54,-55,-147,-107,-14,-108,-25,-64,33,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-81,-34,-32,-58,-57,-73,-60,33,33,-82,-63,-106,-104,-116,-105,-115,-31,-29,-30,-56,-146,-74,-76,-70,-72,33,-62,-24,33,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'TYPEDEF':([0,2,4,5,6,7,8,9,10,11,12,13,16,17,22,23,24,25,26,27,28,35,37,47,48,50,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,106,107,108,116,117,118,119,120,121,122,123,132,146,149,161,163,164,165,170,179,180,184,186,190,191,192,193,194,195,196,197,199,202,206,209,211,212,224,226,229,238,241,246,249,250,251,253,254,257,262,265,266,267,270,271,272,273,275,277,280,283,284,292,293,294,297,298,305,310,311,],[34,34,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,-152,-159,-68,-15,-16,-17,-18,-19,-77,-148,-163,-67,-78,-13,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,-92,-27,-33,-28,-54,-55,-147,-107,-14,-108,-25,-64,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-81,-34,-32,-58,-57,-73,-60,-82,-63,-106,-104,-116,-105,-115,-31,-29,-30,-56,-146,-74,-76,-70,-72,-62,-24,-93,-79,-80,-59,-65,-75,-61,-26,-66,-69,-71,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,33,34,35,37,43,44,47,48,50,51,52,53,54,55,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,86,87,88,89,90,101,102,103,104,105,106,107,108,116,117,118,119,120,121,122,123,124,125,126,128,129,130,131,132,134,135,137,138,139,144,145,146,147,148,149,150,151,152,153,154,155,156,161,163,164,165,169,170,172,173,174,179,180,182,183,184,186,187,190,191,192,193,194,195,196,197,199,202,203,206,207,209,210,211,212,213,214,215,216,217,218,220,221,222,223,224,225,226,227,228,229,232,233,238,239,240,241,242,246,249,250,251,252,253,254,256,257,260,261,262,265,266,267,268,270,271,272,273,274,275,277,279,280,283,284,285,286,287,289,290,292,293,294,295,296,297,298,303,304,305,308,310,311,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-162,39,-152,-159,17,42,45,46,-68,-15,-16,-17,-18,-19,-77,17,17,64,84,-148,-163,93,98,-67,-78,-13,107,115,17,17,123,64,-99,-90,-89,-91,64,-159,-95,-96,-98,-100,-102,-151,-148,17,-122,-123,-117,-118,-119,-120,-124,-125,17,17,17,17,17,17,17,178,179,107,-153,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,17,64,64,17,17,197,17,-92,107,115,-144,17,98,17,17,-27,17,17,-33,-36,214,215,-41,-42,-43,-37,-28,-54,-55,-147,17,-107,98,17,17,-14,-108,115,115,-25,-64,17,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,17,-114,17,-81,17,-34,-32,-35,-44,-48,260,-39,-40,17,17,17,17,-58,64,-57,17,17,-73,17,17,-60,17,17,-82,178,-63,-106,-104,-116,-143,-105,-115,64,-31,-51,-38,-29,-30,-56,-146,293,-74,-76,-70,-72,17,-62,-24,17,-93,-79,-80,-45,-46,-47,-49,-50,-59,-65,-75,306,307,-61,-26,-52,-53,-66,-126,-69,-71,]),'CMP_OP':([13,37,58,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,107,170,180,197,202,206,249,250,251,253,254,283,],[-162,-163,128,-99,-101,-97,-103,-159,-121,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-158,-107,-108,-149,-109,-114,-106,-104,-116,-105,-115,-120,]),'IN':([13,37,46,58,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,107,170,180,197,202,206,249,250,251,253,254,283,],[-162,-163,102,129,-99,-101,-97,-103,-159,-121,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-158,-107,-108,-149,-109,-114,-106,-104,-116,-105,-115,-120,]),',':([13,16,17,35,37,59,66,67,68,69,74,75,76,77,78,79,80,81,96,99,106,107,108,111,113,114,115,116,117,118,119,120,123,137,158,159,160,165,170,178,180,202,206,236,237,249,250,251,253,254,255,302,],[-162,-152,-159,-148,-163,-99,-96,-98,-100,-102,-122,-123,-117,-118,-119,-120,-124,-125,172,-132,-153,-158,-151,182,-137,-138,-159,-97,-101,-103,-121,-148,-149,203,221,222,-151,227,-107,242,-108,-109,-114,-131,-130,-106,-104,-116,-105,-115,281,309,]),')':([13,17,35,37,44,52,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,94,95,96,97,99,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,127,132,170,171,172,177,178,180,181,182,190,191,192,193,194,195,196,197,199,202,206,234,235,236,237,243,244,249,250,251,253,254,278,280,],[-162,-159,-148,-163,-12,-12,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,170,-133,-12,-134,-132,-158,-151,180,-139,-12,-140,-137,-138,-159,-97,-101,-103,-121,-148,-149,192,-92,-107,-12,-12,241,-161,-108,-12,-12,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-135,-136,-131,-130,-141,-142,-106,-104,-116,-105,-115,-160,-93,]),'ELSE':([13,17,23,24,25,26,27,37,59,66,67,68,69,74,75,76,77,78,79,80,81,107,108,116,117,118,119,120,121,122,123,170,180,184,185,186,187,202,206,246,247,249,250,251,253,254,277,298,],[-162,-159,-15,-16,-17,-18,-19,-163,-99,-96,-98,-100,-102,-122,-123,-117,-118,-119,-120,-124,-125,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,-107,-108,-25,245,-64,-21,-109,-114,-63,-20,-106,-104,-116,-105,-115,-24,-26,]),'END':([13,17,23,24,25,26,27,37,59,66,67,68,69,74,75,76,77,78,79,80,81,86,88,107,108,116,117,118,119,120,121,122,123,124,147,148,150,170,180,184,185,186,187,202,206,210,213,214,215,220,223,239,240,246,247,249,250,251,253,254,260,274,276,277,279,285,286,287,289,290,298,303,304,308,],[-162,-159,-15,-16,-17,-18,-19,-163,-99,-96,-98,-100,-102,-122,-123,-117,-118,-119,-120,-124,-125,149,149,-158,-151,-97,-101,-103,-121,-148,-22,-23,-149,186,211,212,-36,-107,-108,-25,246,-64,-21,-109,-114,257,-35,-44,-48,149,149,186,186,-63,-20,-106,-104,-116,-105,-115,-51,186,246,-24,186,-45,-46,-47,-49,-50,-26,-52,-53,-126,]),']':([13,17,37,59,66,67,68,69,72,74,75,76,77,78,79,80,81,95,96,97,99,107,108,115,116,117,118,119,120,123,135,136,137,139,167,170,171,172,180,183,198,200,201,202,203,204,205,206,219,230,231,234,235,236,237,249,250,251,252,253,254,269,288,301,302,309,312,],[-162,-159,-163,-99,-96,-98,-100,-102,-145,-122,-123,-117,-118,-119,-120,-124,-125,-133,-12,-134,-132,-158,-151,-159,-97,-101,-103,-121,-148,-149,-12,202,-144,-12,229,-107,-12,-12,-108,-12,249,250,251,-109,-145,253,254,-114,261,270,271,-135,-136,-131,-130,-106,-104,-116,-143,-105,-115,294,-128,308,-127,-128,-129,]),'DICT':([13,37,74,75,76,77,78,79,80,81,86,88,119,147,148,150,206,210,213,214,215,220,223,260,285,286,287,289,290,303,304,308,],[-162,-163,-122,-123,-117,-118,-119,-120,-124,-125,152,152,-121,152,152,-36,-114,152,-35,-44,-48,152,152,-51,-45,-46,-47,-49,-50,-52,-53,-126,]),':':([13,16,17,35,37,38,39,56,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,92,106,107,108,116,117,118,119,120,123,132,141,157,158,159,160,162,167,170,175,176,180,190,191,192,193,194,195,196,197,199,202,206,245,249,250,251,253,254,263,264,280,],[-162,-152,-159,-148,-163,86,88,124,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,168,-153,-158,-151,-97,-101,-103,-121,-148,-149,-92,207,220,-156,-157,-151,223,230,-107,239,240,-108,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,279,-106,-104,-116,-105,-115,-154,-155,-93,]),'AND':([13,17,35,37,56,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,107,108,116,117,118,119,120,123,127,132,170,180,190,191,192,193,194,195,196,197,199,202,206,249,250,251,253,254,266,280,284,],[-162,-159,-148,-163,125,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-158,-151,-97,-101,-103,-121,-148,-149,125,-92,-107,-108,-87,125,-83,-84,-85,-86,-151,-149,-94,-109,-114,-106,-104,-116,-105,-115,125,-93,125,]),'OR':([13,17,35,37,56,59,60,61,62,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,107,108,116,117,118,119,120,123,127,132,170,180,190,191,192,193,194,195,196,197,199,202,206,249,250,251,253,254,266,280,284,],[-162,-159,-148,-163,126,-99,-90,-89,-91,-159,-95,-96,-98,-100,-102,-151,-148,-122,-123,-117,-118,-119,-120,-124,-125,-158,-151,-97,-101,-103,-121,-148,-149,126,-92,-107,-108,-87,-88,-83,-84,-85,-86,-151,-149,-94,-109,-114,-106,-104,-116,-105,-115,126,-93,126,]),'}':([13,17,37,59,66,67,68,69,74,75,76,77,78,79,80,81,83,107,108,116,117,118,119,120,123,140,142,143,170,180,202,206,249,250,251,253,254,255,281,282,299,300,],[-162,-159,-163,-99,-96,-98,-100,-102,-122,-123,-117,-118,-119,-120,-124,-125,-12,-158,-151,-97,-101,-103,-121,-148,-149,206,-113,-112,-107,-108,-109,-114,-106,-104,-116,-105,-115,-12,-12,-12,-110,-111,]),'.':([16,17,19,31,32,35,60,64,70,71,106,107,108,115,117,120,123,159,160,189,195,196,197,272,273,],[-152,-159,43,-151,55,-148,130,-159,-151,-148,-153,-158,-151,-159,55,-148,-149,55,-151,-151,55,-151,-149,295,296,]),'(':([16,17,19,31,33,49,57,63,64,70,82,106,107,108,115,125,126,188,189,225,256,],[-152,-159,44,52,57,103,57,57,-159,52,44,-153,-158,52,-159,57,57,44,52,57,57,]),'USING':([16,40,106,],[-152,90,-153,]),'[':([16,17,33,42,52,53,54,57,62,63,64,70,71,72,73,82,93,102,106,107,108,115,118,120,123,125,126,128,129,131,135,138,155,156,166,169,173,174,182,183,197,203,207,225,229,249,250,253,256,258,270,271,294,306,307,],[-152,-159,72,92,72,72,72,72,131,72,-159,-150,135,72,138,139,92,72,-153,-158,-150,-159,131,183,-149,72,72,72,72,72,72,72,219,-37,92,72,72,72,72,72,-149,72,72,72,-73,-106,-104,-105,72,288,-74,-76,-75,92,92,]),'SEP':([17,31,41,50,64,70,107,108,115,156,160,165,189,196,208,],[-159,51,51,105,-159,134,-158,134,-159,105,51,105,51,105,105,]),'=':([17,31,32,35,98,107,115,123,189,214,215,260,],[-159,-151,53,-148,173,-158,173,-149,-151,258,259,291,]),'PEQ':([17,31,32,35,107,123,189,],[-159,-151,54,-148,-158,-149,-151,]),'AS':([17,50,84,85,107,],[-159,104,144,145,-158,]),'?':([17,107,152,154,155,156,261,],[-159,-158,216,217,218,-37,-38,]),'WHEN':([17,107,164,165,267,],[-159,-158,225,-147,-146,]),'MATCHING':([17,107,208,],[-159,-158,256,]),'NOT':([33,57,63,125,126,225,256,],[63,63,63,63,63,63,63,]),'TRUE':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,229,256,258,270,271,288,294,309,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-73,74,74,-74,-76,74,-75,74,]),'FALSE':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,229,256,258,270,271,288,294,309,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-73,75,75,-74,-76,75,-75,75,]),'INT':([33,52,53,54,57,63,72,92,102,125,126,128,131,135,138,168,169,173,174,182,183,203,207,225,229,230,256,258,270,271,288,294,309,],[76,76,76,76,76,76,76,167,76,76,76,76,76,76,76,231,76,76,76,76,76,76,76,76,-73,269,76,76,-74,-76,76,-75,76,]),'FLOAT':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,229,256,258,270,271,288,294,309,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-73,77,77,-74,-76,77,-75,77,]),'NULL':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,229,256,258,259,270,271,288,291,294,309,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-73,78,78,290,-74,-76,78,304,-75,78,]),'REGEX':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,229,256,258,270,271,288,294,309,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-73,283,79,-74,-76,79,-75,79,]),'STRING':([33,52,53,54,57,63,72,83,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,229,256,258,270,271,281,288,294,309,],[80,80,80,80,80,80,80,141,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-73,80,80,-74,-76,141,80,-75,80,]),'{':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,229,256,259,270,271,291,294,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-73,83,83,-74,-76,83,-75,]),'EXTENDS':([38,39,],[87,89,]),'*':([44,52,100,135,139,172,182,183,],[100,100,174,100,100,100,100,100,]),'IS':([64,197,],[133,248,]),'PARENTS':([90,],[163,]),'REL':([91,169,229,270,271,294,],[166,232,-73,-74,-76,-75,]),'DEFINED':([133,248,],[199,280,]),'UNDEF':([258,],[287,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,2,],[1,36,]),'top_stmt':([0,2,],[2,2,]),'empty':([0,2,44,52,83,96,111,135,139,171,172,181,182,183,255,281,282,],[3,3,97,112,142,171,181,97,97,97,97,112,112,97,282,142,142,]),'mls':([0,2,14,22,28,33,52,53,54,57,63,72,86,88,102,125,126,128,131,135,138,163,164,169,173,174,182,183,203,207,220,223,225,239,256,258,266,288,293,309,],[4,4,37,47,48,81,81,81,81,81,81,81,147,147,81,81,81,81,81,81,81,224,226,81,81,81,81,81,81,81,147,147,81,274,81,81,292,81,305,81,]),'entity_def':([0,2,],[5,5,]),'implement_def':([0,2,],[6,6,]),'implementation_def':([0,2,],[7,7,]),'relation':([0,2,],[8,8,]),'statement':([0,2,124,187,239,240,274,279,],[9,9,187,187,187,187,187,187,]),'typedef':([0,2,],[10,10,]),'index':([0,2,],[11,11,]),'import':([0,2,],[12,12,]),'class_ref':([0,2,18,29,33,52,53,54,57,63,72,87,89,101,102,124,125,126,128,131,135,138,145,169,173,174,182,183,187,203,207,221,222,225,228,232,233,239,240,256,274,279,],[19,19,40,49,82,82,82,82,82,82,82,158,158,175,82,188,82,82,82,82,82,82,188,82,82,82,82,82,188,82,82,158,158,82,268,272,273,188,188,82,188,188,]),'relationnew':([0,2,],[22,22,]),'assign':([0,2,124,187,239,240,274,279,],[23,23,23,23,23,23,23,23,]),'constructor':([0,2,33,52,53,54,57,63,72,102,124,125,126,128,131,135,138,145,169,173,174,182,183,187,203,207,225,239,240,256,274,279,],[24,24,67,67,67,67,67,67,67,67,24,67,67,67,67,67,67,209,67,67,67,67,67,24,67,67,67,24,24,67,24,24,]),'function_call':([0,2,33,52,53,54,57,63,72,102,124,125,126,128,131,135,138,169,173,174,182,183,187,203,207,225,239,240,256,274,279,],[25,25,61,116,116,116,61,61,116,116,25,61,61,116,116,116,116,116,116,116,116,116,25,116,116,61,25,25,61,25,25,]),'for':([0,2,124,187,239,240,274,279,],[26,26,26,26,26,26,26,26,]),'if':([0,2,124,187,239,240,274,279,],[27,27,27,27,27,27,27,27,]),'typedef_inner':([0,2,],[28,28,]),'ns_ref':([0,2,18,29,30,33,52,53,54,57,63,72,86,87,88,89,90,101,102,124,125,126,128,129,131,135,138,144,145,147,148,169,173,174,182,183,187,203,207,210,220,221,222,223,225,227,228,232,233,239,240,256,274,279,],[31,31,41,41,50,70,108,108,108,70,70,108,156,160,156,160,165,41,108,189,70,70,108,196,108,108,108,208,41,156,156,108,108,108,108,108,189,108,108,156,156,160,160,156,70,165,41,41,41,189,189,70,189,189,]),'var_ref':([0,2,33,52,53,54,57,63,72,87,89,102,124,125,126,128,129,131,135,138,169,173,174,182,183,187,203,207,221,222,225,239,240,256,274,279,],[32,32,60,117,117,117,60,60,117,159,159,117,32,60,60,117,195,117,117,117,117,117,117,117,117,32,117,117,159,159,60,32,32,60,32,32,]),'attr_ref':([0,2,33,52,53,54,57,63,72,87,89,102,124,125,126,128,129,131,135,138,169,173,174,182,183,187,203,207,221,222,225,239,240,256,274,279,],[35,35,71,120,120,120,71,71,120,35,35,120,35,71,71,120,35,120,120,120,120,120,120,120,120,35,120,120,35,35,71,35,35,71,35,35,]),'condition':([33,57,63,125,126,225,256,],[56,127,132,190,191,266,284,]),'operand':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,256,],[58,114,121,122,58,58,137,176,58,58,193,198,200,204,137,236,237,114,200,137,255,58,58,]),'list_def':([33,52,53,54,57,63,72,102,125,126,128,129,131,135,138,169,173,174,182,183,203,207,225,256,],[59,59,59,59,59,59,59,59,59,59,59,194,59,59,59,59,59,59,59,59,59,59,59,59,]),'map_lookup':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,256,],[62,118,118,118,62,62,118,118,62,62,118,118,118,118,118,118,118,118,118,118,118,62,62,]),'boolean_constant':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,256,258,288,309,],[65,119,119,119,65,65,119,119,65,65,119,119,119,119,119,119,119,119,119,119,119,65,65,119,119,119,]),'constant':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,256,258,288,309,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,285,302,302,]),'map_def':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,256,259,291,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,289,303,]),'index_lookup':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,256,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'local_var':([33,52,53,54,57,63,72,102,125,126,128,131,135,138,169,173,174,182,183,203,207,225,256,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'multi':([42,93,166,306,307,],[91,169,228,310,311,]),'param_list':([44,135,139,172,183,],[94,201,205,235,201,]),'param_list_empty':([44,135,139,171,172,183,],[95,95,95,234,95,95,]),'param_list_element':([44,52,135,139,172,182,183,],[96,113,96,96,96,113,96,]),'wrapped_kwargs':([44,52,135,139,172,182,183,],[99,99,99,99,99,99,99,]),'function_param_list':([52,182,],[109,244,]),'function_param_list_empty':([52,181,182,],[110,243,110,]),'function_param_list_element':([52,182,],[111,111,]),'operand_list':([72,169,203,],[136,233,252,]),'pair_list':([83,281,],[140,299,]),'pair_list_empty':([83,281,282,],[143,143,300,]),'entity_body_outer':([86,88,220,223,],[146,161,262,265,]),'entity_body':([86,88,147,220,223,],[148,148,210,148,148,]),'attr':([86,88,147,148,210,220,223,],[150,150,150,213,213,150,150,]),'attr_type':([86,88,147,148,210,220,223,],[151,151,151,151,151,151,151,]),'attr_type_opt':([86,88,147,148,210,220,223,],[153,153,153,153,153,153,153,]),'attr_type_multi':([86,88,147,148,210,220,223,],[154,154,154,154,154,154,154,]),'attr_base_type':([86,88,147,148,210,220,223,],[155,155,155,155,155,155,155,]),'class_ref_list':([87,89,221,222,],[157,162,263,264,]),'ns_list':([90,227,],[164,267,]),'id_list':([103,242,],[177,278,]),'block':([124,239,240,274,279,],[184,275,277,297,298,]),'stmt_list':([124,187,239,240,274,279,],[185,247,276,276,276,276,]),'implementation':([175,],[238,]),'constant_list':([258,],[286,]),'constants':([288,309,],[301,312,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> top_stmt main','main',2,'p_main_collect','plyInmantaParser.py',104),
  ('main -> empty','main',1,'p_main_term','plyInmantaParser.py',111),
  ('top_stmt -> mls','top_stmt',1,'p_top_stmt','plyInmantaParser.py',116),
  ('top_stmt -> entity_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',117),
  ('top_stmt -> implement_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',118),
  ('top_stmt -> implementation_def','top_stmt',1,'p_top_stmt','plyInmantaParser.py',119),
  ('top_stmt -> relation','top_stmt',1,'p_top_stmt','plyInmantaParser.py',120),
  ('top_stmt -> statement','top_stmt',1,'p_top_stmt','plyInmantaParser.py',121),
  ('top_stmt -> typedef','top_stmt',1,'p_top_stmt','plyInmantaParser.py',122),
  ('top_stmt -> index','top_stmt',1,'p_top_stmt','plyInmantaParser.py',123),
  ('top_stmt -> import','top_stmt',1,'p_top_stmt','plyInmantaParser.py',124),
  ('empty -> <empty>','empty',0,'p_empty','plyInmantaParser.py',129),
  ('import -> IMPORT ns_ref','import',2,'p_import','plyInmantaParser.py',139),
  ('import -> IMPORT ns_ref AS ID','import',4,'p_import_1','plyInmantaParser.py',145),
  ('statement -> assign','statement',1,'p_stmt','plyInmantaParser.py',156),
  ('statement -> constructor','statement',1,'p_stmt','plyInmantaParser.py',157),
  ('statement -> function_call','statement',1,'p_stmt','plyInmantaParser.py',158),
  ('statement -> for','statement',1,'p_stmt','plyInmantaParser.py',159),
  ('statement -> if','statement',1,'p_stmt','plyInmantaParser.py',160),
  ('stmt_list -> statement stmt_list','stmt_list',2,'p_stmt_list_collect','plyInmantaParser.py',174),
  ('stmt_list -> statement','stmt_list',1,'p_stmt_list_term','plyInmantaParser.py',181),
  ('assign -> var_ref = operand','assign',3,'p_assign','plyInmantaParser.py',186),
  ('assign -> var_ref PEQ operand','assign',3,'p_assign_extend','plyInmantaParser.py',192),
  ('for -> FOR ID IN operand : block','for',6,'p_for','plyInmantaParser.py',198),
  ('if -> IF condition : block','if',4,'p_if','plyInmantaParser.py',204),
  ('if -> IF condition : stmt_list ELSE : block','if',7,'p_if_else','plyInmantaParser.py',210),
  ('entity_def -> ENTITY CID : entity_body_outer','entity_def',4,'p_entity','plyInmantaParser.py',221),
  ('entity_def -> ENTITY ID : entity_body_outer','entity_def',4,'p_entity_err_1','plyInmantaParser.py',227),
  ('entity_def -> ENTITY CID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends','plyInmantaParser.py',232),
  ('entity_def -> ENTITY ID EXTENDS class_ref_list : entity_body_outer','entity_def',6,'p_entity_extends_err','plyInmantaParser.py',238),
  ('entity_body_outer -> mls entity_body END','entity_body_outer',3,'p_entity_body_outer','plyInmantaParser.py',243),
  ('entity_body_outer -> entity_body END','entity_body_outer',2,'p_entity_body_outer_1','plyInmantaParser.py',248),
  ('entity_body_outer -> END','entity_body_outer',1,'p_entity_body_outer_none','plyInmantaParser.py',253),
  ('entity_body_outer -> mls END','entity_body_outer',2,'p_entity_body_outer_4','plyInmantaParser.py',258),
  ('entity_body -> entity_body attr','entity_body',2,'p_entity_body_collect','plyInmantaParser.py',263),
  ('entity_body -> attr','entity_body',1,'p_entity_body','plyInmantaParser.py',269),
  ('attr_base_type -> ns_ref','attr_base_type',1,'p_attribute_base_type','plyInmantaParser.py',274),
  ('attr_type_multi -> attr_base_type [ ]','attr_type_multi',3,'p_attribute_type_multi','plyInmantaParser.py',279),
  ('attr_type_opt -> attr_type_multi ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',285),
  ('attr_type_opt -> attr_base_type ?','attr_type_opt',2,'p_attribute_type_opt','plyInmantaParser.py',286),
  ('attr_type -> attr_type_opt','attr_type',1,'p_attribute_type','plyInmantaParser.py',292),
  ('attr_type -> attr_type_multi','attr_type',1,'p_attribute_type','plyInmantaParser.py',293),
  ('attr_type -> attr_base_type','attr_type',1,'p_attribute_type','plyInmantaParser.py',294),
  ('attr -> attr_type ID','attr',2,'p_attr','plyInmantaParser.py',299),
  ('attr -> attr_type ID = constant','attr',4,'p_attr_cte','plyInmantaParser.py',305),
  ('attr -> attr_type ID = constant_list','attr',4,'p_attr_cte','plyInmantaParser.py',306),
  ('attr -> attr_type ID = UNDEF','attr',4,'p_attr_undef','plyInmantaParser.py',312),
  ('attr -> DICT ID','attr',2,'p_attr_dict','plyInmantaParser.py',318),
  ('attr -> DICT ID = map_def','attr',4,'p_attr_list_dict','plyInmantaParser.py',324),
  ('attr -> DICT ID = NULL','attr',4,'p_attr_list_dict_null_err','plyInmantaParser.py',330),
  ('attr -> DICT ? ID','attr',3,'p_attr_dict_nullable','plyInmantaParser.py',335),
  ('attr -> DICT ? ID = map_def','attr',5,'p_attr_list_dict_nullable','plyInmantaParser.py',341),
  ('attr -> DICT ? ID = NULL','attr',5,'p_attr_list_dict_null','plyInmantaParser.py',347),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS','implement_def',4,'p_implement_inh','plyInmantaParser.py',354),
  ('implement_def -> IMPLEMENT class_ref USING ns_list','implement_def',4,'p_implement','plyInmantaParser.py',360),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition','implement_def',6,'p_implement_when','plyInmantaParser.py',366),
  ('implement_def -> IMPLEMENT class_ref USING ns_list mls','implement_def',5,'p_implement_comment','plyInmantaParser.py',372),
  ('implement_def -> IMPLEMENT class_ref USING PARENTS mls','implement_def',5,'p_implement_inh_comment','plyInmantaParser.py',378),
  ('implement_def -> IMPLEMENT class_ref USING ns_list WHEN condition mls','implement_def',7,'p_implement_when_comment','plyInmantaParser.py',384),
  ('implementation_def -> IMPLEMENTATION ID FOR class_ref implementation','implementation_def',5,'p_implementation_def','plyInmantaParser.py',393),
  ('implementation -> : mls block','implementation',3,'p_implementation','plyInmantaParser.py',405),
  ('implementation -> : block','implementation',2,'p_implementation_1','plyInmantaParser.py',410),
  ('block -> stmt_list END','block',2,'p_block','plyInmantaParser.py',415),
  ('block -> END','block',1,'p_block_empty','plyInmantaParser.py',420),
  ('relation -> class_ref ID multi REL multi class_ref ID','relation',7,'p_relation','plyInmantaParser.py',428),
  ('relation -> class_ref ID multi REL multi class_ref ID mls','relation',8,'p_relation_comment','plyInmantaParser.py',438),
  ('relation -> relationnew mls','relation',2,'p_relation_new_outer_comment','plyInmantaParser.py',450),
  ('relation -> relationnew','relation',1,'p_relation_new_outer','plyInmantaParser.py',457),
  ('relationnew -> class_ref . ID multi REL class_ref . ID multi','relationnew',9,'p_relation_new','plyInmantaParser.py',462),
  ('relationnew -> class_ref . ID multi REL class_ref','relationnew',6,'p_relation_new_unidir','plyInmantaParser.py',468),
  ('relationnew -> class_ref . ID multi operand_list class_ref . ID multi','relationnew',9,'p_relation_new_annotated','plyInmantaParser.py',474),
  ('relationnew -> class_ref . ID multi operand_list class_ref','relationnew',6,'p_relation_new_annotated_unidir','plyInmantaParser.py',480),
  ('multi -> [ INT ]','multi',3,'p_multi_1','plyInmantaParser.py',486),
  ('multi -> [ INT : ]','multi',4,'p_multi_2','plyInmantaParser.py',491),
  ('multi -> [ INT : INT ]','multi',5,'p_multi_3','plyInmantaParser.py',496),
  ('multi -> [ : INT ]','multi',4,'p_multi_4','plyInmantaParser.py',501),
  ('typedef -> typedef_inner','typedef',1,'p_typedef_outer','plyInmantaParser.py',509),
  ('typedef -> typedef_inner mls','typedef',2,'p_typedef_outer_comment','plyInmantaParser.py',514),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING REGEX','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',521),
  ('typedef_inner -> TYPEDEF ID AS ns_ref MATCHING condition','typedef_inner',6,'p_typedef_1','plyInmantaParser.py',522),
  ('typedef_inner -> TYPEDEF CID AS constructor','typedef_inner',4,'p_typedef_cls','plyInmantaParser.py',528),
  ('index -> INDEX class_ref ( id_list )','index',5,'p_index','plyInmantaParser.py',537),
  ('condition -> ( condition )','condition',3,'p_condition_1','plyInmantaParser.py',547),
  ('condition -> operand CMP_OP operand','condition',3,'p_condition_2','plyInmantaParser.py',552),
  ('condition -> operand IN list_def','condition',3,'p_condition_2','plyInmantaParser.py',553),
  ('condition -> operand IN var_ref','condition',3,'p_condition_2','plyInmantaParser.py',554),
  ('condition -> condition AND condition','condition',3,'p_condition_2','plyInmantaParser.py',555),
  ('condition -> condition OR condition','condition',3,'p_condition_2','plyInmantaParser.py',556),
  ('condition -> function_call','condition',1,'p_condition_3','plyInmantaParser.py',563),
  ('condition -> var_ref','condition',1,'p_condition_3','plyInmantaParser.py',564),
  ('condition -> map_lookup','condition',1,'p_condition_3','plyInmantaParser.py',565),
  ('condition -> NOT condition','condition',2,'p_condition_not','plyInmantaParser.py',570),
  ('condition -> var_ref . ID IS DEFINED','condition',5,'p_condition_is_defined','plyInmantaParser.py',576),
  ('condition -> ID IS DEFINED','condition',3,'p_condition_is_defined_short','plyInmantaParser.py',582),
  ('condition -> boolean_constant','condition',1,'p_condition_term_1','plyInmantaParser.py',588),
  ('operand -> constant','operand',1,'p_operand','plyInmantaParser.py',598),
  ('operand -> function_call','operand',1,'p_operand','plyInmantaParser.py',599),
  ('operand -> constructor','operand',1,'p_operand','plyInmantaParser.py',600),
  ('operand -> list_def','operand',1,'p_operand','plyInmantaParser.py',601),
  ('operand -> map_def','operand',1,'p_operand','plyInmantaParser.py',602),
  ('operand -> var_ref','operand',1,'p_operand','plyInmantaParser.py',603),
  ('operand -> index_lookup','operand',1,'p_operand','plyInmantaParser.py',604),
  ('operand -> map_lookup','operand',1,'p_operand','plyInmantaParser.py',605),
  ('map_lookup -> attr_ref [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',610),
  ('map_lookup -> local_var [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',611),
  ('map_lookup -> map_lookup [ operand ]','map_lookup',4,'p_map_lookup','plyInmantaParser.py',612),
  ('constructor -> class_ref ( param_list )','constructor',4,'p_constructor','plyInmantaParser.py',617),
  ('function_call -> ns_ref ( function_param_list )','function_call',4,'p_function_call','plyInmantaParser.py',622),
  ('list_def -> [ operand_list ]','list_def',3,'p_list_def','plyInmantaParser.py',628),
  ('pair_list -> STRING : operand , pair_list','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',634),
  ('pair_list -> STRING : operand empty pair_list_empty','pair_list',5,'p_pair_list_collect','plyInmantaParser.py',635),
  ('pair_list -> pair_list_empty','pair_list',1,'p_pair_list_empty','plyInmantaParser.py',641),
  ('pair_list_empty -> empty','pair_list_empty',1,'p_pair_list_empty','plyInmantaParser.py',642),
  ('map_def -> { pair_list }','map_def',3,'p_map_def','plyInmantaParser.py',647),
  ('index_lookup -> class_ref [ param_list ]','index_lookup',4,'p_index_lookup','plyInmantaParser.py',653),
  ('index_lookup -> attr_ref [ param_list ]','index_lookup',4,'p_short_index_lookup','plyInmantaParser.py',659),
  ('constant -> INT','constant',1,'p_constant','plyInmantaParser.py',670),
  ('constant -> FLOAT','constant',1,'p_constant','plyInmantaParser.py',671),
  ('constant -> NULL','constant',1,'p_constant_none','plyInmantaParser.py',678),
  ('constant -> REGEX','constant',1,'p_constant_regex','plyInmantaParser.py',685),
  ('constant -> boolean_constant','constant',1,'p_constant_bool','plyInmantaParser.py',692),
  ('boolean_constant -> TRUE','boolean_constant',1,'p_boolean_constant_t','plyInmantaParser.py',697),
  ('boolean_constant -> FALSE','boolean_constant',1,'p_boolean_constant_f','plyInmantaParser.py',704),
  ('constant -> STRING','constant',1,'p_constant_string','plyInmantaParser.py',711),
  ('constant -> mls','constant',1,'p_constant_mls','plyInmantaParser.py',717),
  ('constant_list -> [ constants ]','constant_list',3,'p_constant_list','plyInmantaParser.py',757),
  ('constants -> constant','constants',1,'p_constants_term','plyInmantaParser.py',763),
  ('constants -> <empty>','constants',0,'p_constants_term_2','plyInmantaParser.py',768),
  ('constants -> constant , constants','constants',3,'p_constants_collect','plyInmantaParser.py',773),
  ('wrapped_kwargs -> * * operand','wrapped_kwargs',3,'p_wrapped_kwargs','plyInmantaParser.py',779),
  ('param_list_element -> ID = operand','param_list_element',3,'p_param_list_element_explicit','plyInmantaParser.py',784),
  ('param_list_element -> wrapped_kwargs','param_list_element',1,'p_param_list_element_kwargs','plyInmantaParser.py',790),
  ('param_list -> param_list_empty','param_list',1,'p_param_list_empty','plyInmantaParser.py',796),
  ('param_list_empty -> empty','param_list_empty',1,'p_param_list_empty','plyInmantaParser.py',797),
  ('param_list -> param_list_element empty param_list_empty','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',803),
  ('param_list -> param_list_element , param_list','param_list',3,'p_param_list_nonempty','plyInmantaParser.py',804),
  ('function_param_list_element -> param_list_element','function_param_list_element',1,'p_function_param_list_element','plyInmantaParser.py',819),
  ('function_param_list_element -> operand','function_param_list_element',1,'p_function_param_list_element_arg','plyInmantaParser.py',826),
  ('function_param_list -> function_param_list_empty','function_param_list',1,'p_function_param_list_empty','plyInmantaParser.py',832),
  ('function_param_list_empty -> empty','function_param_list_empty',1,'p_function_param_list_empty','plyInmantaParser.py',833),
  ('function_param_list -> function_param_list_element empty function_param_list_empty','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',839),
  ('function_param_list -> function_param_list_element , function_param_list','function_param_list',3,'p_function_param_list_nonempty','plyInmantaParser.py',840),
  ('operand_list -> operand , operand_list','operand_list',3,'p_operand_list_collect','plyInmantaParser.py',858),
  ('operand_list -> operand','operand_list',1,'p_operand_list_term','plyInmantaParser.py',864),
  ('operand_list -> <empty>','operand_list',0,'p_operand_list_term_2','plyInmantaParser.py',869),
  ('ns_list -> ns_ref , ns_list','ns_list',3,'p_ns_list_collect','plyInmantaParser.py',874),
  ('ns_list -> ns_ref','ns_list',1,'p_ns_list_term','plyInmantaParser.py',880),
  ('var_ref -> attr_ref','var_ref',1,'p_var_ref','plyInmantaParser.py',885),
  ('attr_ref -> var_ref . ID','attr_ref',3,'p_attr_ref','plyInmantaParser.py',890),
  ('local_var -> ns_ref','local_var',1,'p_local_var','plyInmantaParser.py',896),
  ('var_ref -> ns_ref','var_ref',1,'p_var_ref_2','plyInmantaParser.py',902),
  ('class_ref -> CID','class_ref',1,'p_class_ref_direct','plyInmantaParser.py',908),
  ('class_ref -> ns_ref SEP CID','class_ref',3,'p_class_ref','plyInmantaParser.py',919),
  ('class_ref_list -> class_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect','plyInmantaParser.py',931),
  ('class_ref_list -> var_ref , class_ref_list','class_ref_list',3,'p_class_ref_list_collect_err','plyInmantaParser.py',937),
  ('class_ref_list -> class_ref','class_ref_list',1,'p_class_ref_list_term','plyInmantaParser.py',942),
  ('class_ref_list -> var_ref','class_ref_list',1,'p_class_ref_list_term_err','plyInmantaParser.py',947),
  ('ns_ref -> ns_ref SEP ID','ns_ref',3,'p_ns_ref','plyInmantaParser.py',953),
  ('ns_ref -> ID','ns_ref',1,'p_ns_ref_term','plyInmantaParser.py',959),
  ('id_list -> ID , id_list','id_list',3,'p_id_list_collect','plyInmantaParser.py',964),
  ('id_list -> ID','id_list',1,'p_id_list_term','plyInmantaParser.py',970),
  ('mls -> MLS_END','mls',1,'p_mls_term','plyInmantaParser.py',975),
  ('mls -> MLS mls','mls',2,'p_mls_collect','plyInmantaParser.py',980),
]
