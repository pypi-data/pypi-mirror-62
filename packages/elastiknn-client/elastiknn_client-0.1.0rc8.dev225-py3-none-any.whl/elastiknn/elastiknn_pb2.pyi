# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer as google___protobuf___internal___containers___RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    Iterable as typing___Iterable,
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
    overload as typing___overload,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode


class Similarity(builtin___int):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    @classmethod
    def Name(cls, number: builtin___int) -> builtin___str: ...
    @classmethod
    def Value(cls, name: builtin___str) -> 'Similarity': ...
    @classmethod
    def keys(cls) -> typing___List[builtin___str]: ...
    @classmethod
    def values(cls) -> typing___List['Similarity']: ...
    @classmethod
    def items(cls) -> typing___List[typing___Tuple[builtin___str, 'Similarity']]: ...
    SIMILARITY_L1 = typing___cast('Similarity', 0)
    SIMILARITY_L2 = typing___cast('Similarity', 1)
    SIMILARITY_ANGULAR = typing___cast('Similarity', 2)
    SIMILARITY_HAMMING = typing___cast('Similarity', 3)
    SIMILARITY_JACCARD = typing___cast('Similarity', 4)
SIMILARITY_L1 = typing___cast('Similarity', 0)
SIMILARITY_L2 = typing___cast('Similarity', 1)
SIMILARITY_ANGULAR = typing___cast('Similarity', 2)
SIMILARITY_HAMMING = typing___cast('Similarity', 3)
SIMILARITY_JACCARD = typing___cast('Similarity', 4)

class ProcessorOptions(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    field_raw = ... # type: typing___Text
    dimension = ... # type: builtin___int

    @property
    def exact(self) -> ExactModelOptions: ...

    @property
    def jaccard(self) -> JaccardLshOptions: ...

    def __init__(self,
        *,
        field_raw : typing___Optional[typing___Text] = None,
        dimension : typing___Optional[builtin___int] = None,
        exact : typing___Optional[ExactModelOptions] = None,
        jaccard : typing___Optional[JaccardLshOptions] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ProcessorOptions: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> ProcessorOptions: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"exact",b"exact",u"jaccard",b"jaccard",u"model_options",b"model_options"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"dimension",b"dimension",u"exact",b"exact",u"field_raw",b"field_raw",u"jaccard",b"jaccard",u"model_options",b"model_options"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"model_options",b"model_options"]) -> typing_extensions___Literal["exact","jaccard"]: ...

class ExactModelOptions(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    similarity = ... # type: Similarity

    def __init__(self,
        *,
        similarity : typing___Optional[Similarity] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ExactModelOptions: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> ExactModelOptions: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"similarity",b"similarity"]) -> None: ...

class JaccardLshOptions(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    seed = ... # type: builtin___int
    field_processed = ... # type: typing___Text
    num_bands = ... # type: builtin___int
    num_rows = ... # type: builtin___int

    def __init__(self,
        *,
        seed : typing___Optional[builtin___int] = None,
        field_processed : typing___Optional[typing___Text] = None,
        num_bands : typing___Optional[builtin___int] = None,
        num_rows : typing___Optional[builtin___int] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> JaccardLshOptions: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> JaccardLshOptions: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"field_processed",b"field_processed",u"num_bands",b"num_bands",u"num_rows",b"num_rows",u"seed",b"seed"]) -> None: ...

class FloatVector(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    values = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___float]

    def __init__(self,
        *,
        values : typing___Optional[typing___Iterable[builtin___float]] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> FloatVector: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> FloatVector: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"values",b"values"]) -> None: ...

class SparseBoolVector(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    true_indices = ... # type: google___protobuf___internal___containers___RepeatedScalarFieldContainer[builtin___int]
    total_indices = ... # type: builtin___int

    def __init__(self,
        *,
        true_indices : typing___Optional[typing___Iterable[builtin___int]] = None,
        total_indices : typing___Optional[builtin___int] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> SparseBoolVector: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> SparseBoolVector: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"total_indices",b"total_indices",u"true_indices",b"true_indices"]) -> None: ...

class ElastiKnnVector(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...

    @property
    def float_vector(self) -> FloatVector: ...

    @property
    def sparse_bool_vector(self) -> SparseBoolVector: ...

    def __init__(self,
        *,
        float_vector : typing___Optional[FloatVector] = None,
        sparse_bool_vector : typing___Optional[SparseBoolVector] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> ElastiKnnVector: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> ElastiKnnVector: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"float_vector",b"float_vector",u"sparse_bool_vector",b"sparse_bool_vector",u"vector",b"vector"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"float_vector",b"float_vector",u"sparse_bool_vector",b"sparse_bool_vector",u"vector",b"vector"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"vector",b"vector"]) -> typing_extensions___Literal["float_vector","sparse_bool_vector"]: ...

class KNearestNeighborsQuery(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class ExactQueryOptions(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        field_raw = ... # type: typing___Text
        similarity = ... # type: Similarity

        def __init__(self,
            *,
            field_raw : typing___Optional[typing___Text] = None,
            similarity : typing___Optional[Similarity] = None,
            ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(cls, s: builtin___bytes) -> KNearestNeighborsQuery.ExactQueryOptions: ...
        else:
            @classmethod
            def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> KNearestNeighborsQuery.ExactQueryOptions: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"field_raw",b"field_raw",u"similarity",b"similarity"]) -> None: ...

    class LshQueryOptions(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        pipeline_id = ... # type: typing___Text

        def __init__(self,
            *,
            pipeline_id : typing___Optional[typing___Text] = None,
            ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(cls, s: builtin___bytes) -> KNearestNeighborsQuery.LshQueryOptions: ...
        else:
            @classmethod
            def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> KNearestNeighborsQuery.LshQueryOptions: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"pipeline_id",b"pipeline_id"]) -> None: ...

    class IndexedQueryVector(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        index = ... # type: typing___Text
        field = ... # type: typing___Text
        id = ... # type: typing___Text

        def __init__(self,
            *,
            index : typing___Optional[typing___Text] = None,
            field : typing___Optional[typing___Text] = None,
            id : typing___Optional[typing___Text] = None,
            ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(cls, s: builtin___bytes) -> KNearestNeighborsQuery.IndexedQueryVector: ...
        else:
            @classmethod
            def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> KNearestNeighborsQuery.IndexedQueryVector: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"field",b"field",u"id",b"id",u"index",b"index"]) -> None: ...

    use_cache = ... # type: builtin___bool

    @property
    def exact(self) -> KNearestNeighborsQuery.ExactQueryOptions: ...

    @property
    def lsh(self) -> KNearestNeighborsQuery.LshQueryOptions: ...

    @property
    def given(self) -> ElastiKnnVector: ...

    @property
    def indexed(self) -> KNearestNeighborsQuery.IndexedQueryVector: ...

    def __init__(self,
        *,
        exact : typing___Optional[KNearestNeighborsQuery.ExactQueryOptions] = None,
        lsh : typing___Optional[KNearestNeighborsQuery.LshQueryOptions] = None,
        given : typing___Optional[ElastiKnnVector] = None,
        indexed : typing___Optional[KNearestNeighborsQuery.IndexedQueryVector] = None,
        use_cache : typing___Optional[builtin___bool] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> KNearestNeighborsQuery: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> KNearestNeighborsQuery: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"exact",b"exact",u"given",b"given",u"indexed",b"indexed",u"lsh",b"lsh",u"query_options",b"query_options",u"query_vector",b"query_vector"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"exact",b"exact",u"given",b"given",u"indexed",b"indexed",u"lsh",b"lsh",u"query_options",b"query_options",u"query_vector",b"query_vector",u"use_cache",b"use_cache"]) -> None: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"query_options",b"query_options"]) -> typing_extensions___Literal["exact","lsh"]: ...
    @typing___overload
    def WhichOneof(self, oneof_group: typing_extensions___Literal[u"query_vector",b"query_vector"]) -> typing_extensions___Literal["given","indexed"]: ...
