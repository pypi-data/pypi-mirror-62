<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<module:module xmlns:module="XMLModule" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="XMLModule ../xsd/module_xml.xsd">
<module:field>

  <module:general_field id="heat" name="Heat transfer">
    <module:description>Heat transfer is a discipline of thermal engineering that concerns the exchange of thermal energy from one physical system to another. Heat transfer is classified into various mechanisms, such as heat conduction, convection and thermal radiation.</module:description>
    <module:analyses>
      <module:analysis id="steadystate" name="Steady state" solutions="1" type="steadystate" />
      <module:analysis id="transient" name="Transient" solutions="1" type="transient" />
    </module:analyses>
    </module:general_field>

  <module:constants>
    <module:constant id="SIGMA0" value="5.670373e-08"/>
    <module:constant id="T0ABS" value="273.15"/>
  </module:constants>

  <module:spaces>
    <module:space analysistype="steadystate">
      <module:space_config i="1" orderadjust="0" type="h1"/>
    </module:space>
    <module:space analysistype="transient">
      <module:space_config i="1" orderadjust="0" type="h1"/>
    </module:space>
  </module:spaces>

  <module:volume>
    <module:quantity id="heat_conductivity" shortname="he_lambda"/>
    <module:quantity id="heat_volume_heat" shortname="he_p"/>
    <module:quantity id="heat_density" shortname="he_rho"/>
    <module:quantity id="heat_specific_heat" shortname="he_cp"/>
    <module:quantity id="heat_velocity_x" shortname="he_vx"/>
    <module:quantity id="heat_velocity_y" shortname="he_vy"/>
    <module:quantity id="heat_velocity_angular" shortname="he_va"/>

    <module:matrix_form id="laplace" i="1"  j="1" planar="he_lambda * (udx * vdx + udy * vdy)" axi="he_lambda * r * (udr * vdr + udz * vdz)" symmetric="1" />
    <module:matrix_form id="velocity" i="1"  j="1" planar="he_rho * he_cp * ((he_vx - y * he_va) * udx + (he_vy + x * he_va) * udy) * vval" axi="r * he_rho * he_cp * (he_vy * udz) * vval" condition="(((fabs(he_rho) > 0.0) &amp;&amp; ((fabs(he_cp) > 0.0)) &amp;&amp; ((fabs(he_vx) > 0.0) || (fabs(he_vy) > 0.0) || (fabs(he_va) > 0.0))))"/>
    <module:matrix_form id="jac_laplace" i="1"  j="1" planar="dhe_lambda * uval * (dx1 * vdx + dy1 * vdy)" axi="dhe_lambda * r * uval * (dr1 * vdr + dz1 * vdz)"/>

    <module:vector_form id="rhs" i="1" j="1" planar="he_p * vval" axi="r * he_p * vval" condition="fabs(he_p) > 0.0" />
    
    <module:matrix_form id="transient" i="1" j="1" planar="he_rho * he_cp * uval * vval" axi="he_rho * he_cp * r * uval * vval"  symmetric="1" />
    
    <module:weakforms_volume>
      <module:weakform_volume analysistype="steadystate" equation="-\, \div \left( \lambda\,\, \grad T \right) + \rho c_\mathrm{p} \left(\vec{v} \cdot \grad T\right) = Q">
        <module:quantity id="heat_conductivity" nonlinearity_axi="value1" nonlinearity_planar="value1"/>
        <module:quantity id="heat_volume_heat" dependence="time" />
        <module:quantity id="heat_velocity_x"/>
        <module:quantity id="heat_velocity_y"/>
        <module:quantity id="heat_velocity_angular"/>
        <module:quantity id="heat_density" nonlinearity_axi="value1" nonlinearity_planar="value1"/>
        <module:quantity id="heat_specific_heat" nonlinearity_axi="value1" nonlinearity_planar="value1"/>

        <module:linearity_option type="linear">
          <module:matrix_form id="laplace" />
          <module:matrix_form id="velocity" />
          <module:vector_form id="rhs" />
        </module:linearity_option>

        <module:linearity_option type="picard">
          <module:matrix_form id="laplace" />
          <module:matrix_form id="velocity" />
          <module:vector_form id="rhs" />
        </module:linearity_option>

        <module:linearity_option type="newton">
          <module:matrix_form id="laplace" />
          <module:matrix_form id="velocity" />
          <module:matrix_form id="jac_laplace" />
          <module:vector_form id="rhs" coefficient="-1" />
          <module:vector_form id="laplace" variant="residual" />
          <module:vector_form id="velocity" variant="residual" />
        </module:linearity_option>

      </module:weakform_volume>
      
      <module:weakform_volume analysistype="transient" equation="-\, \div \left( \lambda\,\, \grad T \right) + \rho c_\mathrm{p} \left(\frac{\partial T}{\partial t} + \vec{v} \cdot \grad T\right) = Q">
        <module:quantity id="heat_velocity_x"/>
        <module:quantity id="heat_velocity_y"/>
        <module:quantity id="heat_velocity_angular"/>
        <module:quantity id="heat_conductivity" nonlinearity_axi="value1" nonlinearity_planar="value1"/>
        <module:quantity dependence="time" id="heat_volume_heat"/>
        <module:quantity id="heat_density" nonlinearity_axi="value1" nonlinearity_planar="value1"/>
        <module:quantity id="heat_specific_heat" nonlinearity_axi="value1" nonlinearity_planar="value1"/>

        <module:linearity_option type="linear">
          <module:matrix_form id="laplace"/>
          <module:matrix_form id="velocity"/>
          <module:vector_form id="rhs"/>
          <module:matrix_transient_form id="transient" />                    
        </module:linearity_option>

        <module:linearity_option type="picard">
          <module:matrix_form id="laplace"/>
          <module:matrix_form id="velocity"/>
          <module:vector_form id="rhs"/>
        </module:linearity_option>

        <module:linearity_option type="newton">
          <module:matrix_form id="laplace"/>
          <module:matrix_form id="velocity"/>
          <module:matrix_form id="jac_laplace"/>
          <module:vector_form id="rhs" coefficient="-1"/>
          <module:vector_form id="laplace" variant="residual"/>
          <module:vector_form id="velocity" variant="residual"/>
        </module:linearity_option>

      </module:weakform_volume>      
    </module:weakforms_volume>
  </module:volume>

  <module:surface>
    <module:quantity id="heat_temperature" shortname="he_T"/>
    <module:quantity id="heat_heat_flux" shortname="he_f"/>
    <module:quantity id="heat_convection_heat_transfer_coefficient" shortname="he_h"/>
    <module:quantity id="heat_convection_external_temperature" shortname="he_Te"/>
    <module:quantity id="heat_radiation_emissivity" shortname="he_eps"/>
    <module:quantity id="heat_radiation_ambient_temperature" shortname="he_Ta"/>

    <module:essential_form id="essential" i="1" axi="he_T" planar="he_T"/>
    <module:matrix_form id="flux_matrix" i="1" j="1" axi="he_h * r * uval * vval" planar="he_h * uval * vval"/>
    <module:vector_form id="flux_vector" i="1" j="1" axi="r * (he_f + he_h * he_Te) * vval" planar="(he_f + he_h * he_Te) * vval"/>
    <module:matrix_form id="emission_jacobian" i="1" j="1" axi="SIGMA0 * he_eps * r * 4 * uval * value1*value1*value1 * vval" planar="SIGMA0 * he_eps * 4 * uval * value1*value1*value1 * vval"/>
    <module:vector_form id="emission_vector" i="1" j="1" axi="r * (- SIGMA0 * he_eps * he_Ta*he_Ta*he_Ta*he_Ta + SIGMA0 * he_eps * value1*value1*value1*value1) * vval" planar="(- SIGMA0 * he_eps * he_Ta*he_Ta*he_Ta*he_Ta + SIGMA0 * he_eps * value1*value1*value1*value1) * vval"/>

    <module:weakforms_surface>
      <module:weakform_surface analysistype="steadystate" default="heat_temperature">
        <module:boundary equation="T = T_0" id="heat_temperature" name="Temperature">
          <module:quantity id="heat_temperature"/>

          <module:linearity_option type="linear">
            <module:essential_form id="essential" i="1" axi="he_T" planar="he_T"/>
          </module:linearity_option>

          <module:linearity_option type="picard">
            <module:essential_form id="essential" i="1" axi="he_T" planar="he_T"/>
          </module:linearity_option>

          <module:linearity_option type="newton">
            <module:essential_form id="essential" i="1" axi="he_T" planar="he_T"/>
          </module:linearity_option>
        </module:boundary>

        <module:boundary equation="f = - \lambda \frac{\partial T}{\partial n_0} = f_0 + \alpha \left ( T_\mathrm{ext} - T \right) + \epsilon \sigma \left ( T_\mathrm{amb}^4 - T^4 \right)" id="heat_heat_flux" name="Heat flux">
          <module:quantity id="heat_heat_flux"/>
          <module:quantity id="heat_convection_heat_transfer_coefficient"/>
          <module:quantity id="heat_convection_external_temperature"/>
          <module:quantity id="heat_radiation_emissivity"/>
          <module:quantity id="heat_radiation_ambient_temperature"/>

          <module:linearity_option type="linear">
            <module:matrix_form id="flux_matrix"/>
            <module:vector_form id="flux_vector"/>
          </module:linearity_option>

          <module:linearity_option type="picard">
            <module:matrix_form id="flux_matrix"/>
            <module:vector_form id="flux_vector"/>
          </module:linearity_option>

          <module:linearity_option type="newton">
            <module:matrix_form id="flux_matrix"/>
            <module:vector_form id="flux_vector" coefficient="-1"/>
            <module:vector_form id="flux_matrix" variant="residual"/>
            <module:matrix_form id="emission_jacobian"/>
            <module:vector_form id="emission_vector"/>
          </module:linearity_option>
        </module:boundary>
      </module:weakform_surface>

      <module:weakform_surface analysistype="transient" default="heat_temperature">
        <module:boundary equation="T = T_0" id="heat_temperature" name="Temperature">
          <module:quantity dependence="time" id="heat_temperature"/>

          <module:linearity_option type="linear">
            <module:essential_form id="essential" i="1" axi="he_T" planar="he_T"/>
          </module:linearity_option>

          <module:linearity_option type="picard">
            <module:essential_form id="essential" i="1" axi="he_T" planar="he_T"/>
          </module:linearity_option>

          <module:linearity_option type="newton">
            <module:essential_form id="essential" i="1" axi="he_T" planar="he_T"/>
          </module:linearity_option>
        </module:boundary>

        <module:boundary equation="f = - \lambda \frac{\partial T}{\partial n_0} = f_0 + \alpha \left ( T_\mathrm{ext} - T \right) + \epsilon \sigma \left ( T_\mathrm{amb}^4 - T^4 \right)" id="heat_heat_flux" name="Heat flux">
          <module:quantity id="heat_heat_flux" dependence="time" />
          <module:quantity id="heat_convection_heat_transfer_coefficient"/>
          <module:quantity id="heat_convection_external_temperature"/>
          <module:quantity id="heat_radiation_emissivity"/>
          <module:quantity id="heat_radiation_ambient_temperature"/>

          <module:linearity_option type="linear">
            <module:matrix_form id="flux_matrix"/>
            <module:vector_form id="flux_vector"/>
          </module:linearity_option>

          <module:linearity_option type="picard">
            <module:matrix_form id="flux_matrix"/>
            <module:vector_form id="flux_vector"/>
          </module:linearity_option>

          <module:linearity_option type="newton">
            <module:matrix_form id="flux_matrix"/>
            <module:vector_form id="flux_vector" coefficient="-1"/>
            <module:vector_form id="flux_matrix" variant="residual"/>
            <module:matrix_form id="emission_jacobian"/>
            <module:vector_form id="emission_vector"/>
          </module:linearity_option>
        </module:boundary>
      </module:weakform_surface>

    </module:weakforms_surface>
  </module:surface>

  <module:error_calculator>
        <module:calculator id="l2" name="L2 norm">
            <module:expression analysistype="steadystate" axi="(uval * vval)"
                                                          planar="(uval * vval)"/>
            <module:expression analysistype="transient" axi="(uval * vval)"
                                                          planar="(uval * vval)"/>
        </module:calculator>
        <module:calculator id="h1" name="H1 norm">
            <module:expression analysistype="steadystate" axi="(uval * vval + udr * vdr + udz * vdz)"
                                                          planar="(uval * vval + udx * vdx + udy * vdy)"/>
            <module:expression analysistype="transient" axi="(uval * vval + udr * vdr + udz * vdz)"
                                                        planar="(uval * vval + udx * vdx + udy * vdy)"/>
        </module:calculator>
  </module:error_calculator>

  <module:preprocessor>
    <module:gui type="volume">
      <module:group>
        <module:quantity condition="value > 0" default="385" id="heat_conductivity" name="Thermal conductivity" shortname="lambda" shortname_html="&lt;i>&amp;lambda;&lt;/i>" shortname_latex="\lambda" shortname_dependence="T" shortname_dependence_html="&lt;i>T&lt;/i>" unit="W/m.K" unit_html="W.m&lt;sup>-1&lt;/sup>.K&lt;sup>-1&lt;/sup>" unit_latex="W \cdot m^{-1} \cdot K^{-1}"/>
        <module:quantity condition="value >= 0" id="heat_volume_heat" name="Volume heat" is_source="1" shortname="p" shortname_html="&lt;i>p&lt;/i>" shortname_latex="p" unit="W/m3" unit_html="W.m&lt;sup>-3&lt;/sup>" unit_latex="W \cdot m^{-3}"/>
        <module:quantity condition="value >= 0" id="heat_density" name="Density" shortname="rho" shortname_html="&lt;i>&amp;rho;&lt;/i>" shortname_latex="\rho" shortname_dependence="T" shortname_dependence_html="&lt;i>T&lt;/i>" unit="kg/m3" unit_html="kg.m&lt;sup>-3&lt;/sup>" unit_latex="kg \cdot m^{-3}"/>
        <module:quantity condition="value >= 0" id="heat_specific_heat" name="Specific heat" shortname="cp" shortname_html="&lt;i>c&lt;/i>&lt;sub>P&lt;/sub>" shortname_latex="c_{P}" shortname_dependence="T" shortname_dependence_html="&lt;i>T&lt;/i>" unit="J/kg.K" unit_html="J.kg&lt;sup>-1&lt;/sup>.K&lt;sup>-1&lt;/sup>" unit_latex="J \cdot kg^{-1} \cdot K^{-1}"/>
      </module:group>
      <module:group name="Velocity">
        <module:quantity id="heat_velocity_x" name="Velocity - x" is_source="1" shortname="vx" shortname_html="&lt;i>v&lt;/i>&lt;sub>x&lt;/sub>" unit="m/s" unit_html="m.s&lt;sup>-1&lt;/sup>" unit_latex="m \cdot s^{-1}"/>
        <module:quantity id="heat_velocity_y" name="Velocity - y" is_source="1" shortname="vy" shortname_html="&lt;i>v&lt;/i>&lt;sub>y&lt;/sub>" unit="m/s" unit_html="m.s&lt;sup>-1&lt;/sup>" unit_latex="m \cdot s^{-1}"/>
        <module:quantity id="heat_velocity_angular" name="Velocity - angular" is_source="1" shortname="va" shortname_html="&lt;i>&amp;omega;&lt;/i>" unit="m/s" unit_html="m.s&lt;sup>-1&lt;/sup>" unit_latex="m \cdot s^{-1}"/>
      </module:group>
    </module:gui>
    <module:gui type="surface">
      <module:group>
        <module:quantity id="heat_temperature" name="Temperature" shortname="T" shortname_html="&lt;i>T&lt;/i>" shortname_latex="T" unit="K" unit_html="K" unit_latex="K"/>
        <module:quantity id="heat_heat_flux" name="Heat flux" shortname="f" shortname_html="&lt;i>f&lt;/i>&lt;sub>0&lt;/sub>" shortname_latex="f_0" unit="W/m2" unit_html="W.m&lt;sup>-2&lt;/sup>" unit_latex="W \cdot m^{-2}"/>
        <module:quantity condition="value >= 0" default="5" id="heat_convection_heat_transfer_coefficient" name="Heat transfer coefficient" shortname="alpha" shortname_html="&lt;i>&amp;alpha;&lt;/i>" shortname_latex="" unit="W/m2.K" unit_html="W.m&lt;sup>-2&lt;/sup>.K&lt;sup>-1&lt;/sup>" unit_latex="W \cdot m^{-2} \cdot K^{-1}"/>
        <module:quantity default="293.15" id="heat_convection_external_temperature" name="Convection - external temperature" shortname="Te" shortname_html="&lt;i>T&lt;/i>&lt;sub>e&lt;/sub>" shortname_latex="T_\mathrm{e}" unit="K" unit_html="K" unit_latex="K"/>
        <module:quantity condition="value >= 0" default="0" id="heat_radiation_emissivity" name="Emissivity" shortname="eps" shortname_html="&lt;i>&amp;epsilon;&lt;/i>" shortname_latex="" unit="-" unit_html="-" unit_latex="-"/>
        <module:quantity default="293.15" id="heat_radiation_ambient_temperature" name="Radiation - ambient temperature" shortname="Ta" shortname_html="&lt;i>T&lt;/i>&lt;sub>a&lt;/sub>" shortname_latex="T_\mathrm{a}" unit="K" unit_html="K" unit_latex="K"/>
      </module:group>
    </module:gui>
  </module:preprocessor>

  <module:postprocessor>
    <module:localvariables>
      <module:localvariable id="heat_temperature" name="Temperature" shortname="T" shortname_html="&lt;i>T&lt;/i>" shortname_latex="T" type="scalar" unit="K" unit_html="K" unit_latex="K">
        <module:expression analysistype="steadystate" axi="value1" planar="value1"/>
        <module:expression analysistype="transient" axi="value1" planar="value1"/>        
      </module:localvariable>
     <module:localvariable id="heat_temperature_degrees" name="Temperature (deg.)" shortname="Td" shortname_html="&lt;i>T&lt;/i>" shortname_latex="Td" type="scalar" unit="°C" unit_html="°C" unit_latex="°C">
        <module:expression analysistype="steadystate" axi="value1-273.15" planar="value1-273.15"/>
        <module:expression analysistype="transient" axi="value1-273.15" planar="value1-273.15"/>
      </module:localvariable>
      <module:localvariable format="%5.3e" id="heat_heat_flux" name="Heat flux" shortname="F" shortname_html="&lt;i>F&lt;/i>" shortname_latex="F" type="vector" unit="W/m2" unit_html="W.m&lt;sup>-2&lt;/sup>" unit_latex="W \cdot m^{-2}">
        <module:expression analysistype="steadystate" axi_r="- he_lambda * dr1" axi_z="- he_lambda * dz1" planar_x="- he_lambda * dx1" planar_y="- he_lambda * dy1"/>
        <module:expression analysistype="transient" axi_r="- he_lambda * dr1" axi_z="- he_lambda * dz1" planar_x="- he_lambda * dx1" planar_y="- he_lambda * dy1"/>
      </module:localvariable>
      <module:localvariable id="heat_temperature_gradient" name="Temperature gradient" shortname="G" shortname_html="&lt;i>G&lt;/i>" shortname_latex="G" type="vector" unit="K/m" unit_html="K.m&lt;sup>-1&lt;/sup>" unit_latex="K \cdot m^{-1}">
        <module:expression analysistype="steadystate" axi_r="- dr1" axi_z="- dz1" planar_x="- dx1" planar_y="- dy1"/>
        <module:expression analysistype="transient" axi_r="- dr1" axi_z="- dz1" planar_x="- dx1" planar_y="- dy1"/>
      </module:localvariable>
      <module:localvariable id="heat_conductivity" name="Thermal conductivity" shortname="lambda" shortname_html="&lt;i>&amp;lambda;&lt;/i>" shortname_latex="\lambda" type="scalar" unit="W/m.K" unit_html="W.m&lt;sup>-1&lt;/sup>.K&lt;sup>-1&lt;/sup>" unit_latex="W \cdot m^{-1} \cdot K^{-1}">
        <module:expression analysistype="steadystate" axi="he_lambda" planar="he_lambda"/>
        <module:expression analysistype="transient" axi="he_lambda" planar="he_lambda"/>
      </module:localvariable>
      <module:localvariable id="heat_volume_heat" name="Volume heat" shortname="p" shortname_html="&lt;i>p&lt;/i>" shortname_latex="p" type="scalar" unit="W/m3" unit_html="W.m&lt;sup>-3&lt;/sup>" unit_latex="W \cdot m^{-3}">
        <module:expression analysistype="steadystate" axi="he_p" planar="he_p"/>
        <module:expression analysistype="transient" axi="he_p" planar="he_p"/>
      </module:localvariable>
      <module:localvariable id="heat_density" name="Density" shortname="rho" shortname_html="&lt;i>&amp;rho;&lt;/i>" shortname_latex="\rho" type="scalar" unit="kg/m3" unit_html="kg.m&lt;sup>-3&lt;/sup>" unit_latex="kg \cdot m^{-3}">
        <module:expression analysistype="steadystate" axi="he_rho" planar="he_rho"/> 
        <module:expression analysistype="transient" axi="he_rho" planar="he_rho"/> 
      </module:localvariable>
      <module:localvariable id="heat_specific_heat" name="Specific heat" shortname="cp" shortname_html="&lt;i>c&lt;/i>&lt;sub>P&lt;/sub>" shortname_latex="c_\mathrm{P}" type="scalar" unit="J/kg.K" unit_html="J.kg&lt;sup>-1&lt;/sup>.K&lt;sup>-1&lt;/sup>" unit_latex="J \cdot kg^{-1} \cdot K^{-1}">
        <module:expression analysistype="steadystate" axi="he_cp" planar="he_cp"/> 
        <module:expression analysistype="transient" axi="he_cp" planar="he_cp"/> 
      </module:localvariable>
      <module:localvariable id="heat_velocity" name="Velocity" shortname="v" type="vector" unit="m/s" unit_html="m.s&lt;sup>-1&lt;/sup>" unit_latex="m \cdot s^{-1}">
        <module:expression analysistype="steadystate" axi_r="0" axi_z="he_vy" planar_x="he_vx - he_va * y" planar_y="he_vy + he_va * x"/>
        <module:expression analysistype="transient" axi_r="0" axi_z="he_vy" planar_x="he_vx - he_va * y" planar_y="he_vy + he_va * x"/>
      </module:localvariable>
    </module:localvariables>
    <module:view>
      <module:scalar_view>
        <module:default analysistype="steadystate" id="heat_temperature"/>
        <module:default analysistype="transient" id="heat_temperature"/>
      </module:scalar_view>
      <module:vector_view>
        <module:default analysistype="steadystate" id="heat_heat_flux"/>
        <module:default analysistype="transient" id="heat_heat_flux"/>
      </module:vector_view>
    </module:view>
    <module:volumeintegrals>
      <module:volumeintegral id="heat_volume" name="Volume" shortname="V" shortname_html="&lt;i>V&lt;/i>" shortname_latex="V" unit="m3" unit_html="m&lt;sup>3&lt;/sup>" unit_latex="m^{3}">
        <module:expression analysistype="steadystate" axi="2.0 * PI * r" planar="1.0"/>
        <module:expression analysistype="transient" axi="2.0 * PI * r" planar="1.0"/>
      </module:volumeintegral>
      <module:volumeintegral id="heat_cross_section" name="Cross section" shortname="S" shortname_html="&lt;i>S&lt;/i>" shortname_latex="S" unit="m2" unit_html="m&lt;sup>2&lt;/sup>" unit_latex="m^{2}">
        <module:expression analysistype="steadystate" axi="1.0" planar="1.0"/>
        <module:expression analysistype="transient" axi="1.0" planar="1.0"/>
      </module:volumeintegral>
      <module:volumeintegral id="heat_temperature" name="Temperature" shortname="T" shortname_html="&lt;i>T&lt;/i>" shortname_latex="T" unit="K.m3" unit_html=" K.m&lt;sup>3&lt;/sup>" unit_latex="K \cdot m^{3}">
        <module:expression analysistype="steadystate" axi="2.0 * PI * r * value1" planar="value1"/>
        <module:expression analysistype="transient" axi="2.0 * PI * r * value1" planar="value1"/>
      </module:volumeintegral>
      <module:volumeintegral id="heat_temperature_degrees" name="Temperature (deg.)" shortname="Td" shortname_html="&lt;i>T&lt;/i>" shortname_latex="Td" unit="°C.m3" unit_html=" °C.m&lt;sup>3&lt;/sup>" unit_latex="°C \cdot m^{3}">
        <module:expression analysistype="steadystate" axi="2.0 * PI * r * (value1-273.15)" planar="value1-273.15"/>
        <module:expression analysistype="transient" axi="2.0 * PI * r * (value1-273.15)" planar="value1-273.15"/>
      </module:volumeintegral>
    </module:volumeintegrals>
    <module:surfaceintegrals>
      <module:surfaceintegral id="heat_length" name="Length" shortname="l" shortname_html="&lt;i>l&lt;/i>" shortname_latex="l" unit="m" unit_html="m" unit_latex="m">
        <module:expression analysistype="steadystate" axi="1.0" planar="1.0"/>
        <module:expression analysistype="transient" axi="1.0" planar="1.0"/>
      </module:surfaceintegral>
      <module:surfaceintegral id="heat_surface" name="Surface" shortname="S" shortname_html="&lt;i>S&lt;/i>" shortname_latex="S" unit="m2" unit_html="m&lt;sup>2&lt;/sup>" unit_latex="m^{2}">
        <module:expression analysistype="steadystate" axi="2.0 * PI * r" planar="1.0"/>
        <module:expression analysistype="transient" axi="2.0 * PI * r" planar="1.0"/>
      </module:surfaceintegral>
      <module:surfaceintegral id="heat_temperature" name="Temperature" shortname="T" shortname_html="&lt;i>T&lt;/i>" shortname_latex="T" unit="K.m2" unit_html="K.m&lt;sup>2&lt;/sup>" unit_latex="K \cdot m^{2}">
        <module:expression analysistype="steadystate" axi="2.0 * PI * r * value1" planar="value1"/>
        <module:expression analysistype="transient" axi="2.0 * PI * r * value1" planar="value1"/>
      </module:surfaceintegral>
      <module:surfaceintegral id="heat_heat_flux" name="Heat flux" shortname="f" shortname_html="&lt;i>f&lt;/i>" shortname_latex="f" unit="W" unit_html="W" unit_latex="W">
        <module:expression analysistype="steadystate" axi="- 2.0 * PI * r * he_lambda * (tanz * dr1 - tanr * dz1)" planar="- he_lambda * (tany * dx1 - tanx * dy1)"/>
        <module:expression analysistype="transient" axi="- 2.0 * PI * r * he_lambda * (tanz * dr1 - tanr * dz1)" planar="- he_lambda * (tany * dx1 - tanx * dy1)"/>
      </module:surfaceintegral>
    </module:surfaceintegrals>
    <module:force/>
  </module:postprocessor>

</module:field>
</module:module>
