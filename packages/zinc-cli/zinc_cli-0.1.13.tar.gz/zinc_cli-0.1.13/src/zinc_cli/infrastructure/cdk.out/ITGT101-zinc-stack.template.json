{
  "Outputs": {
    "Site": {
      "Value": "https://zinccli.com"
    },
    "BucketArn": {
      "Value": {
        "Fn::GetAtt": [
          "SiteBucket397A1860",
          "Arn"
        ]
      }
    },
    "CertificateArn": {
      "Value": {
        "Fn::GetAtt": [
          "builtinfunctionidbucketCertificateRequestorResource79AF02AB",
          "Arn"
        ]
      }
    },
    "DistributionId": {
      "Value": {
        "Ref": "SiteDistributionCFDistribution209CF7F5"
      }
    },
    "ApiCertificateArn": {
      "Value": {
        "Fn::GetAtt": [
          "ApiCertificateCertificateRequestorResource57CB3F69",
          "Arn"
        ]
      }
    },
    "ContactFormAPIGWEndpoint5AC08D9A": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ContactFormAPIGW2E71629F"
            },
            ".execute-api.us-east-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "ContactFormAPIGWDeploymentStageprod37226E19"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Resources": {
    "SiteBucket397A1860": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "static.zinccli.com",
        "WebsiteConfiguration": {
          "ErrorDocument": "index.html",
          "IndexDocument": "index.html"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/SiteBucket/Resource"
      }
    },
    "SiteBucketPolicy3AC1D0F8": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "SiteBucket397A1860"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": "*",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "SiteBucket397A1860",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/SiteBucket/Policy/Resource"
      }
    },
    "builtinfunctionidbucketCertificateRequestorFunctionServiceRole1A05A7B8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/<built-in function id>-bucket/CertificateRequestorFunction/ServiceRole/Resource"
      }
    },
    "builtinfunctionidbucketCertificateRequestorFunctionServiceRoleDefaultPolicyFEE87989": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":route53:::hostedzone/Z2V1AL5NKD0TDT"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "builtinfunctionidbucketCertificateRequestorFunctionServiceRoleDefaultPolicyFEE87989",
        "Roles": [
          {
            "Ref": "builtinfunctionidbucketCertificateRequestorFunctionServiceRole1A05A7B8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/<built-in function id>-bucket/CertificateRequestorFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "builtinfunctionidbucketCertificateRequestorFunction38828FC8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3Bucket0997A4A0"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3VersionKey83D9C166"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3VersionKey83D9C166"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "builtinfunctionidbucketCertificateRequestorFunctionServiceRole1A05A7B8",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 900
      },
      "DependsOn": [
        "builtinfunctionidbucketCertificateRequestorFunctionServiceRoleDefaultPolicyFEE87989",
        "builtinfunctionidbucketCertificateRequestorFunctionServiceRole1A05A7B8"
      ],
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/<built-in function id>-bucket/CertificateRequestorFunction/Resource",
        "aws:asset:path": "asset.0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0",
        "aws:asset:property": "Code"
      }
    },
    "builtinfunctionidbucketCertificateRequestorResource79AF02AB": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "builtinfunctionidbucketCertificateRequestorFunction38828FC8",
            "Arn"
          ]
        },
        "DomainName": "zinccli.com",
        "HostedZoneId": "Z2V1AL5NKD0TDT"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/<built-in function id>-bucket/CertificateRequestorResource/Default"
      }
    },
    "SiteDistributionCFDistribution209CF7F5": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            "zinccli.com"
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "CachedMethods": [
              "GET",
              "HEAD"
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "QueryString": false
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": [
                  "SiteBucket397A1860",
                  "RegionalDomainName"
                ]
              },
              "Id": "origin1",
              "S3OriginConfig": {}
            }
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "AcmCertificateArn": {
              "Fn::GetAtt": [
                "builtinfunctionidbucketCertificateRequestorResource79AF02AB",
                "Arn"
              ]
            },
            "MinimumProtocolVersion": "TLSv1.1_2016",
            "SslSupportMethod": "sni-only"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/SiteDistribution/CFDistribution"
      }
    },
    "SiteAliasRecord3C0AF5BF": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "zinccli.com.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "SiteDistributionCFDistribution209CF7F5",
              "DomainName"
            ]
          },
          "HostedZoneId": "Z2FDTNDATAQYW2"
        },
        "HostedZoneId": "Z2V1AL5NKD0TDT"
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/SiteAliasRecord/Resource"
      }
    },
    "DeployWithInvalidationCustomResourceE3FF7455": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          {
            "Ref": "AssetParameters4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1S3Bucket14650576"
          }
        ],
        "SourceObjectKeys": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1S3VersionKeyBD8C65EA"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1S3VersionKeyBD8C65EA"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ],
        "DestinationBucketName": {
          "Ref": "SiteBucket397A1860"
        },
        "DistributionId": {
          "Ref": "SiteDistributionCFDistribution209CF7F5"
        },
        "DistributionPaths": [
          "/*"
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/DeployWithInvalidation/CustomResource/Default"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParameters4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1S3Bucket14650576"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParameters4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1S3Bucket14650576"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "SiteBucket397A1860",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "SiteBucket397A1860",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters6416c21be320b522db64c705872c0a54d788e3df57b34a5f0d1e8602d7521430S3Bucket13DFEC6A"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6416c21be320b522db64c705872c0a54d788e3df57b34a5f0d1e8602d7521430S3VersionKeyED938FBC"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters6416c21be320b522db64c705872c0a54d788e3df57b34a5f0d1e8602d7521430S3VersionKeyED938FBC"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": 900
      },
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
      ],
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
        "aws:asset:path": "asset.f50156b06e01f1dc6e1cd9ed0a8a839ed83b6e01c5b88cb83ec14da0322221cf.zip",
        "aws:asset:property": "Code"
      }
    },
    "ContactFormLambdaServiceRole020D5737": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormLambda/ServiceRole/Resource"
      }
    },
    "ContactFormLambdaServiceRoleDefaultPolicy99B96C03": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ses:SendEmail",
                "ses:SendRawEmail"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ContactFormLambdaServiceRoleDefaultPolicy99B96C03",
        "Roles": [
          {
            "Ref": "ContactFormLambdaServiceRole020D5737"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormLambda/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ContactFormLambdaBE8DD0D4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dcS3Bucket90967AA8"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dcS3VersionKey2608A430"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dcS3VersionKey2608A430"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "lambda_handler.handler",
        "Role": {
          "Fn::GetAtt": [
            "ContactFormLambdaServiceRole020D5737",
            "Arn"
          ]
        },
        "Runtime": "python3.7"
      },
      "DependsOn": [
        "ContactFormLambdaServiceRoleDefaultPolicy99B96C03",
        "ContactFormLambdaServiceRole020D5737"
      ],
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormLambda/Resource",
        "aws:asset:path": "asset.035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dc",
        "aws:asset:property": "Code"
      }
    },
    "ApiCertificateCertificateRequestorFunctionServiceRole86B3A678": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ApiCertificate/CertificateRequestorFunction/ServiceRole/Resource"
      }
    },
    "ApiCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy37D02D57": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:DeleteCertificate"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "route53:GetChange",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "route53:changeResourceRecordSets",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":route53:::hostedzone/Z2V1AL5NKD0TDT"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ApiCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy37D02D57",
        "Roles": [
          {
            "Ref": "ApiCertificateCertificateRequestorFunctionServiceRole86B3A678"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ApiCertificate/CertificateRequestorFunction/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ApiCertificateCertificateRequestorFunction35B7F4E7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3Bucket0997A4A0"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3VersionKey83D9C166"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3VersionKey83D9C166"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.certificateRequestHandler",
        "Role": {
          "Fn::GetAtt": [
            "ApiCertificateCertificateRequestorFunctionServiceRole86B3A678",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Timeout": 900
      },
      "DependsOn": [
        "ApiCertificateCertificateRequestorFunctionServiceRoleDefaultPolicy37D02D57",
        "ApiCertificateCertificateRequestorFunctionServiceRole86B3A678"
      ],
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ApiCertificate/CertificateRequestorFunction/Resource",
        "aws:asset:path": "asset.0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0",
        "aws:asset:property": "Code"
      }
    },
    "ApiCertificateCertificateRequestorResource57CB3F69": {
      "Type": "AWS::CloudFormation::CustomResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "ApiCertificateCertificateRequestorFunction35B7F4E7",
            "Arn"
          ]
        },
        "DomainName": "api.zinccli.com",
        "HostedZoneId": "Z2V1AL5NKD0TDT"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ApiCertificate/CertificateRequestorResource/Default"
      }
    },
    "VerifyDomainIdentityA4F38560": {
      "Type": "Custom::AWS",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "action": "verifyDomainIdentity",
          "service": "SES",
          "parameters": {
            "Domain": "zinccli.com"
          },
          "physicalResourceIdPath": "VerificationToken"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/VerifyDomainIdentity/Resource/Default"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "ses:VerifyDomainIdentity",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57aS3Bucket440FE184"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57aS3VersionKeyE00E112E"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57aS3VersionKeyE00E112E"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleDefaultPolicyD28E1A5E",
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
        "aws:asset:path": "asset.1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57a",
        "aws:asset:property": "Code"
      }
    },
    "SESVerificationRecord8B86296A": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "_amazonses.zinccli.com.",
        "Type": "TXT",
        "HostedZoneId": "Z2V1AL5NKD0TDT",
        "ResourceRecords": [
          {
            "Fn::Join": [
              "",
              [
                "\"",
                {
                  "Fn::GetAtt": [
                    "VerifyDomainIdentityA4F38560",
                    "VerificationToken"
                  ]
                },
                "\""
              ]
            ]
          }
        ],
        "TTL": "1800"
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/SESVerificationRecord/Resource"
      }
    },
    "ContactFormAPIGW2E71629F": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "ContactFormAPI"
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/Resource"
      }
    },
    "ContactFormAPIGWDeployment108377598f188f75d867609f44ede44e7889a3a1": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ContactFormAPIGW2E71629F"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "ContactFormAPIGWcontactOPTIONS8F129558",
        "ContactFormAPIGWcontactPOSTB1100F50",
        "ContactFormAPIGWcontactEED5846F"
      ],
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/Deployment/Resource"
      }
    },
    "ContactFormAPIGWDeploymentStageprod37226E19": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "ContactFormAPIGW2E71629F"
        },
        "DeploymentId": {
          "Ref": "ContactFormAPIGWDeployment108377598f188f75d867609f44ede44e7889a3a1"
        },
        "MethodSettings": [
          {
            "HttpMethod": "*",
            "ResourcePath": "/*",
            "ThrottlingBurstLimit": 100,
            "ThrottlingRateLimit": 10
          }
        ],
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/DeploymentStage.prod/Resource"
      }
    },
    "ContactFormAPIGWCloudWatchRole143FBBF6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/CloudWatchRole/Resource"
      }
    },
    "ContactFormAPIGWAccountE3B71CF7": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ContactFormAPIGWCloudWatchRole143FBBF6",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ContactFormAPIGW2E71629F"
      ],
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/Account"
      }
    },
    "ContactFormAPIGWcontactEED5846F": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ContactFormAPIGW2E71629F",
            "RootResourceId"
          ]
        },
        "PathPart": "contact",
        "RestApiId": {
          "Ref": "ContactFormAPIGW2E71629F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/Default/contact/Resource"
      }
    },
    "ContactFormAPIGWcontactPOSTApiPermissionITGT101zincstackContactFormAPIGWFC91BFC1POSTcontactACC70CA0": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ContactFormLambdaBE8DD0D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:535707483867:",
              {
                "Ref": "ContactFormAPIGW2E71629F"
              },
              "/",
              {
                "Ref": "ContactFormAPIGWDeploymentStageprod37226E19"
              },
              "/POST/contact"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/Default/contact/POST/ApiPermission.ITGT101zincstackContactFormAPIGWFC91BFC1.POST..contact"
      }
    },
    "ContactFormAPIGWcontactPOSTApiPermissionTestITGT101zincstackContactFormAPIGWFC91BFC1POSTcontact6CA7C3FE": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ContactFormLambdaBE8DD0D4",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-1:535707483867:",
              {
                "Ref": "ContactFormAPIGW2E71629F"
              },
              "/test-invoke-stage/POST/contact"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/Default/contact/POST/ApiPermission.Test.ITGT101zincstackContactFormAPIGWFC91BFC1.POST..contact"
      }
    },
    "ContactFormAPIGWcontactPOSTB1100F50": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "ContactFormAPIGWcontactEED5846F"
        },
        "RestApiId": {
          "Ref": "ContactFormAPIGW2E71629F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              },
              "StatusCode": "200"
            }
          ],
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ContactFormLambdaBE8DD0D4",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/Default/contact/POST/Resource"
      }
    },
    "ContactFormAPIGWcontactOPTIONS8F129558": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "OPTIONS",
        "ResourceId": {
          "Ref": "ContactFormAPIGWcontactEED5846F"
        },
        "RestApiId": {
          "Ref": "ContactFormAPIGW2E71629F"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationResponses": [
            {
              "ResponseParameters": {
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
                "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'"
              },
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_MATCH",
          "RequestTemplates": {
            "application/json": "{\"statusCode\":200}"
          },
          "Type": "MOCK"
        },
        "MethodResponses": [
          {
            "ResponseParameters": {
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/Default/contact/OPTIONS/Resource"
      }
    },
    "ContactFormAPIGWCustomDomain80DCFB76": {
      "Type": "AWS::ApiGateway::DomainName",
      "Properties": {
        "DomainName": "api.zinccli.com",
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        },
        "RegionalCertificateArn": {
          "Fn::GetAtt": [
            "ApiCertificateCertificateRequestorResource57CB3F69",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/CustomDomain/Resource"
      }
    },
    "ContactFormAPIGWCustomDomainMapITGT101zincstackContactFormAPIGWFC91BFC19B1F9C5B": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "Properties": {
        "DomainName": {
          "Ref": "ContactFormAPIGWCustomDomain80DCFB76"
        },
        "RestApiId": {
          "Ref": "ContactFormAPIGW2E71629F"
        },
        "Stage": {
          "Ref": "ContactFormAPIGWDeploymentStageprod37226E19"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ContactFormAPIGW/CustomDomain/Map:--=>ITGT101zincstackContactFormAPIGWFC91BFC1/Resource"
      }
    },
    "ApiAliasRecordBCE933A3": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "api.zinccli.com.",
        "Type": "A",
        "AliasTarget": {
          "DNSName": {
            "Fn::GetAtt": [
              "ContactFormAPIGWCustomDomain80DCFB76",
              "RegionalDomainName"
            ]
          },
          "HostedZoneId": {
            "Fn::GetAtt": [
              "ContactFormAPIGWCustomDomain80DCFB76",
              "RegionalHostedZoneId"
            ]
          }
        },
        "HostedZoneId": "Z2V1AL5NKD0TDT"
      },
      "Metadata": {
        "aws:cdk:path": "ITGT101-zinc-stack/ApiAliasRecord/Resource"
      }
    }
  },
  "Parameters": {
    "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3Bucket0997A4A0": {
      "Type": "String",
      "Description": "S3 bucket for asset \"0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0\""
    },
    "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0S3VersionKey83D9C166": {
      "Type": "String",
      "Description": "S3 key for asset version \"0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0\""
    },
    "AssetParameters0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0ArtifactHashF8F836D1": {
      "Type": "String",
      "Description": "Artifact hash for asset \"0b9723d54b7db3fbfc1a143398b02392e5fe080a68535480782a949b4372d0f0\""
    },
    "AssetParameters6416c21be320b522db64c705872c0a54d788e3df57b34a5f0d1e8602d7521430S3Bucket13DFEC6A": {
      "Type": "String",
      "Description": "S3 bucket for asset \"6416c21be320b522db64c705872c0a54d788e3df57b34a5f0d1e8602d7521430\""
    },
    "AssetParameters6416c21be320b522db64c705872c0a54d788e3df57b34a5f0d1e8602d7521430S3VersionKeyED938FBC": {
      "Type": "String",
      "Description": "S3 key for asset version \"6416c21be320b522db64c705872c0a54d788e3df57b34a5f0d1e8602d7521430\""
    },
    "AssetParameters6416c21be320b522db64c705872c0a54d788e3df57b34a5f0d1e8602d7521430ArtifactHash55E30580": {
      "Type": "String",
      "Description": "Artifact hash for asset \"6416c21be320b522db64c705872c0a54d788e3df57b34a5f0d1e8602d7521430\""
    },
    "AssetParameters4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1S3Bucket14650576": {
      "Type": "String",
      "Description": "S3 bucket for asset \"4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1\""
    },
    "AssetParameters4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1S3VersionKeyBD8C65EA": {
      "Type": "String",
      "Description": "S3 key for asset version \"4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1\""
    },
    "AssetParameters4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1ArtifactHash9AF43440": {
      "Type": "String",
      "Description": "Artifact hash for asset \"4e8819f876ac70bed06931a3d0f961c7a133295f6abc413a32ae052ee048dde1\""
    },
    "AssetParameters035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dcS3Bucket90967AA8": {
      "Type": "String",
      "Description": "S3 bucket for asset \"035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dc\""
    },
    "AssetParameters035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dcS3VersionKey2608A430": {
      "Type": "String",
      "Description": "S3 key for asset version \"035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dc\""
    },
    "AssetParameters035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dcArtifactHashB1DDD34D": {
      "Type": "String",
      "Description": "Artifact hash for asset \"035acbd2af4e6d1d706110b909a5b4d03a2edbfed1f6da05e97ceaf35c70c1dc\""
    },
    "AssetParameters1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57aS3Bucket440FE184": {
      "Type": "String",
      "Description": "S3 bucket for asset \"1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57a\""
    },
    "AssetParameters1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57aS3VersionKeyE00E112E": {
      "Type": "String",
      "Description": "S3 key for asset version \"1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57a\""
    },
    "AssetParameters1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57aArtifactHash1BC4D777": {
      "Type": "String",
      "Description": "Artifact hash for asset \"1ab5295e57f53e6291178d0f7e5deb4883fcbfbe85515f66d5778d3a9e96a57a\""
    }
  }
}