#!/usr/bin/env python

import sys
sys.path.insert(0, '.')

import click
import m3u_manage


@click.group()
def cli():
    pass

@click.command('analyze', short_help='Analyze directory for keywords.')
@click.option('--config', '-c', help='Config file containing tags.')
@click.argument('directory', required=True)
def do_analyze(directory, config):
    m3u_manage.analyze(directory, config)

@click.command('curate', short_help='Automatically curate videos into playlists.')
@click.option('--config', required=True, help='Curation configuration filename.')
def do_curate(config):
    m3u_manage.curate(config)

@click.command('mesh', short_help='Combine playlists by interleaving items.')
@click.option('--outfile', '-o', required=True, help='New playlist file to create.')
@click.argument('filenames', nargs=-1, required=True)
def do_mesh(filenames, outfile):
    m3u_manage.mesh(filenames, outfile)

# decide PATH DEST1 DEST2
@click.command('decide', short_help='Perform sorting decisions about videos.')
@click.argument('path', required=True)
@click.argument('dest1', required=True)
@click.argument('dest2', required=True)
def do_decide(path, dest1, dest2):
    m3u_manage.decide(path, dest1, dest2)

@click.command('regularize', short_help='Regularize filenames in a directory.')
@click.argument('directory', required=True)
def do_regularize(directory):
    m3u_manage.regularize(directory)

@click.command('gather', short_help='Recursively move from DIRECTORY into DESTINATION, flattening directory hierarchy.')
@click.argument('directory', required=True)
@click.argument('destination', required=True)
def do_gather(directory, destination):
    m3u_manage.gather(directory, destination)

@click.command('tag', short_help='Tag files in directory.')
@click.option('--config', '-c', help='Config file containing tags.')
@click.argument('directory', required=True)
def do_tag(directory, config):
    m3u_manage.tag(directory, config)


cli.add_command(do_curate)
cli.add_command(do_analyze)
cli.add_command(do_mesh)
cli.add_command(do_decide)
cli.add_command(do_regularize)
cli.add_command(do_gather)
cli.add_command(do_tag)

if __name__ == '__main__':
    from m3u_manage.__meta__ import __version__
    print("m3u-manage {}".format(__version__))
    cli()
