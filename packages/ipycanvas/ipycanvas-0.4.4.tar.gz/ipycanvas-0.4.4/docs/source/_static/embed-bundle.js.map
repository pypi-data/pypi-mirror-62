{"version":3,"sources":["webpack://ipycanvas/webpack/bootstrap","webpack://ipycanvas/./src/version.ts","webpack://ipycanvas/./src/index.ts","webpack://ipycanvas/./src/widget.ts","webpack://ipycanvas/external \"@jupyter-widgets/base\"","webpack://ipycanvas/./src/utils.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","data","MODULE_VERSION","version","MODULE_NAME","__export","base_1","version_1","utils_1","getContext","canvas","context","CanvasModel","DOMWidgetModel","[object Object]","assign","super","defaults","_model_name","model_name","_model_module","model_module","_model_module_version","model_module_version","_view_name","view_name","_view_module","view_module","_view_module_version","view_module_version","width","height","sync_image_data","image_data","attributes","options","initialize","this","document","createElement","ctx","resizeCanvas","drawImageData","on_some_change","on","syncImageData","onCommand","send","event","img","fromBytes","drawImage","trigger","command","buffers","processCommand","forEachView","view","updateCanvas","Array","remainingBuffers","subcommand","subbuffers","n_buffers","slice","drawRects","args","fillArc","strokeArc","drawArcs","putImageData","setAttr","attr","clearCanvas","executeCommand","commandName","x","getArg","y","numberRects","Math","min","length","idx","getItem","save","beginPath","closePath","fill","restore","stroke","radius","startAngle","endAngle","anticlockwise","numberArcs","arc","serializedImage","image","unpack_models","widget_manager","_drawImage","url","format","blob","Blob","type","URL","createObjectURL","TextDecoder","decode","buffer","Image","Promise","resolve","onload","src","undefined","bufferMetadata","dx","dy","shape","Uint8ClampedArray","imageData","ImageData","offscreenCanvas","clear","clearRect","callback","view_id","views","then","setAttribute","bytes","toBytes","set","save_changes","serializers","serialize","array","DataView","deserialize","dataview","CanvasView","DOMWidgetView","el","appendChild","model","addEventListener","handleEvent","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","getCoordinates","touches","from","map","rect","getBoundingClientRect","clientX","left","clientY","top","MultiCanvasModel","_canvases","updateListeners","canvasModel","MultiCanvasView","container","style","position","canvas_views","ViewList","createCanvasView","removeCanvasView","updateCanvasViews","update","index","create_child_view","canvasView","zIndex","float","removeChild","__WEBPACK_EXTERNAL_MODULE__4__","Scalar","isScalar","Arg","ScalarArg","Infinity","BufferArg","metadata","dtype","Int32Array","getTypedArray","toBlob","reject","reader","FileReader","onloadend","result","readAsArrayBuffer"],"mappings":"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","file":"embed-bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nconst data = require('../package.json');\n\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexport const MODULE_VERSION = data.version;\n\n/*\n * The current package name.\n */\nexport const MODULE_NAME = data.name;\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './version';\nexport * from './widget';\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  DOMWidgetModel, DOMWidgetView, ISerializers, Dict, ViewList, unpack_models\n} from '@jupyter-widgets/base';\n\nimport {\n  MODULE_NAME, MODULE_VERSION\n} from './version';\n\nimport {\n  getArg, toBytes, fromBytes\n} from './utils';\n\n\nfunction getContext(canvas: HTMLCanvasElement) {\n  const context = canvas.getContext(\"2d\");\n  if (context === null) {\n    throw 'Could not create 2d context.';\n  }\n  return context;\n}\n\nfunction serializeImageData(array: Uint8ClampedArray) {\n  return new DataView(array.buffer.slice(0));\n}\n\nfunction deserializeImageData(dataview: DataView | null) {\n  if (dataview === null) {\n    return null;\n  }\n\n  return new Uint8ClampedArray(dataview.buffer);\n}\n\n\nexport\nclass CanvasModel extends DOMWidgetModel {\n  defaults() {\n    return {...super.defaults(),\n      _model_name: CanvasModel.model_name,\n      _model_module: CanvasModel.model_module,\n      _model_module_version: CanvasModel.model_module_version,\n      _view_name: CanvasModel.view_name,\n      _view_module: CanvasModel.view_module,\n      _view_module_version: CanvasModel.view_module_version,\n      width: 700,\n      height: 500,\n      sync_image_data: false,\n      image_data: null,\n    };\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n    image_data: {\n      serialize: serializeImageData,\n      deserialize: deserializeImageData\n    }\n  }\n\n  initialize(attributes: any, options: any) {\n    super.initialize(attributes, options);\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = getContext(this.canvas);\n\n    this.resizeCanvas();\n    this.drawImageData();\n\n    this.on_some_change(['width', 'height'], this.resizeCanvas, this);\n    this.on('change:sync_image_data', this.syncImageData.bind(this));\n    this.on('msg:custom', this.onCommand.bind(this));\n\n    this.send({ event: 'client_ready' }, {});\n  }\n\n  private async drawImageData() {\n    if (this.get('image_data') !== null) {\n      const img = await fromBytes(this.get('image_data'));\n\n      this.ctx.drawImage(img, 0, 0);\n\n      this.trigger('new-frame');\n    }\n  }\n\n  private async onCommand(command: any, buffers: any) {\n    await this.processCommand(command, buffers);\n\n    this.forEachView((view: CanvasView) => {\n      view.updateCanvas();\n    });\n\n    this.trigger('new-frame');\n    this.syncImageData();\n  }\n\n  private async processCommand(command: any, buffers: any) {\n    if (command instanceof Array) {\n      let remainingBuffers = buffers;\n\n      for (const subcommand of command) {\n        let subbuffers = [];\n        if (subcommand.n_buffers) {\n          subbuffers = remainingBuffers.slice(0, subcommand.n_buffers);\n          remainingBuffers = remainingBuffers.slice(subcommand.n_buffers)\n        }\n        await this.processCommand(subcommand, subbuffers);\n      }\n      return;\n    }\n\n    switch (command.name) {\n      case 'fillRects':\n        this.drawRects(command.args, buffers, 'fillRect');\n        break;\n      case 'strokeRects':\n        this.drawRects(command.args, buffers, 'strokeRect');\n        break;\n      case 'fillArc':\n        this.fillArc(command.args, buffers);\n        break;\n      case 'strokeArc':\n        this.strokeArc(command.args, buffers);\n        break;\n      case 'fillArcs':\n        this.drawArcs(command.args, buffers, 'fill');\n        break;\n      case 'strokeArcs':\n        this.drawArcs(command.args, buffers, 'stroke');\n        break;\n      case 'drawImage':\n        await this.drawImage(command.args, buffers);\n        break;\n      case 'putImageData':\n        this.putImageData(command.args, buffers);\n        break;\n      case 'set':\n        this.setAttr(command.attr, command.value);\n        break;\n      case 'clear':\n        this.clearCanvas();\n        break;\n      default:\n        this.executeCommand(command.name, command.args);\n        break;\n    }\n  }\n\n  private drawRects(args: any[], buffers: any, commandName: string) {\n    const x = getArg(args[0], buffers);\n    const y = getArg(args[1], buffers);\n    const width = getArg(args[2], buffers);\n    const height = getArg(args[3], buffers);\n\n    const numberRects = Math.min(x.length, y.length, width.length, height.length);\n\n    for (let idx = 0; idx < numberRects; ++idx) {\n      this.executeCommand(commandName, [x.getItem(idx), y.getItem(idx), width.getItem(idx), height.getItem(idx)]);\n    }\n  }\n\n  private fillArc(args: any[], buffers: any) {\n    this.ctx.save();\n\n    this.ctx.beginPath();\n    this.executeCommand('arc', args);\n    this.ctx.closePath();\n\n    this.ctx.fill();\n    this.ctx.restore();\n  }\n\n  private strokeArc(args: any[], buffers: any) {\n    this.ctx.save();\n\n    this.ctx.beginPath();\n    this.executeCommand('arc', args);\n    this.ctx.closePath();\n\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n\n  private drawArcs(args: any[], buffers: any, commandName: string) {\n    const x = getArg(args[0], buffers);\n    const y = getArg(args[1], buffers);\n    const radius = getArg(args[2], buffers);\n    const startAngle = getArg(args[3], buffers);\n    const endAngle = getArg(args[4], buffers);\n    const anticlockwise = getArg(args[5], buffers);\n\n    const numberArcs = Math.min(\n      x.length, y.length, radius.length,\n      startAngle.length, endAngle.length\n    );\n\n    this.ctx.save();\n\n    for (let idx = 0; idx < numberArcs; ++idx) {\n      this.ctx.beginPath();\n      this.ctx.arc(\n        x.getItem(idx), y.getItem(idx), radius.getItem(idx),\n        startAngle.getItem(idx), endAngle.getItem(idx),\n        anticlockwise.getItem(idx)\n      );\n      this.ctx.closePath();\n\n      this.executeCommand(commandName);\n    }\n\n    this.ctx.restore();\n  }\n\n  private async drawImage(args: any[], buffers: any) {\n    const [serializedImage, x, y, width, height] = args;\n\n    const image = await unpack_models(serializedImage, this.widget_manager);\n\n    if (image instanceof CanvasModel) {\n      this._drawImage(image.canvas, x, y, width, height);\n      return;\n    }\n\n    if (image.get('_model_name') == 'ImageModel') {\n      // Create the image manually instead of creating an ImageView\n      let url: string;\n      const format = image.get('format');\n      const value = image.get('value');\n      if (format !== 'url') {\n          const blob = new Blob([value], {type: `image/${format}`});\n          url = URL.createObjectURL(blob);\n      } else {\n          url = (new TextDecoder('utf-8')).decode(value.buffer);\n      }\n\n      const img = new Image();\n      return new Promise((resolve) => {\n        img.onload = () => {\n          this._drawImage(img, x, y, width, height);\n          resolve();\n        };\n        img.src = url;\n      });\n    }\n  }\n\n  private _drawImage(image: HTMLCanvasElement | HTMLImageElement,\n                     x: number, y: number,\n                     width: number | undefined, height: number | undefined) {\n    if (width === undefined || height === undefined) {\n      this.ctx.drawImage(image, x, y);\n    } else {\n      this.ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  private putImageData(args: any[], buffers: any) {\n    const [bufferMetadata, dx, dy] = args;\n\n    const width = bufferMetadata.shape[1];\n    const height = bufferMetadata.shape[0];\n\n    const data = new Uint8ClampedArray(buffers[0].buffer);\n    const imageData = new ImageData(data, width, height);\n\n    // Draw on a temporary off-screen canvas. This is a workaround for `putImageData` to support transparency.\n    const offscreenCanvas = document.createElement('canvas');\n    offscreenCanvas.width = width;\n    offscreenCanvas.height = height;\n    getContext(offscreenCanvas).putImageData(imageData, 0, 0);\n\n    this.ctx.drawImage(offscreenCanvas, dx, dy);\n  }\n\n  private setAttr(attr: string, value: any) {\n    (this.ctx as any)[attr] = value;\n  }\n\n  private clearCanvas() {\n    this.forEachView((view: CanvasView) => {\n      view.clear();\n    });\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  private executeCommand(name: string, args: any[] = []) {\n    (this.ctx as any)[name](...args);\n  }\n\n  private forEachView(callback: (view: CanvasView) => void) {\n    for (const view_id in this.views) {\n      this.views[view_id].then((view: CanvasView) => {\n        callback(view);\n      });\n    }\n  }\n\n  private resizeCanvas() {\n    this.canvas.setAttribute('width', this.get('width'));\n    this.canvas.setAttribute('height', this.get('height'));\n  }\n\n  private async syncImageData() {\n    if (!this.get('sync_image_data')) {\n      return;\n    }\n\n    const bytes = await toBytes(this.canvas);\n\n    this.set('image_data', bytes);\n    this.save_changes();\n  }\n\n  static model_name = 'CanvasModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n  static view_name = 'CanvasView';\n  static view_module = MODULE_NAME;\n  static view_module_version = MODULE_VERSION;\n\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  views: Dict<Promise<CanvasView>>;\n}\n\n\nexport\nclass CanvasView extends DOMWidgetView {\n  render() {\n    this.canvas = document.createElement('canvas');\n\n    this.el.appendChild(this.canvas);\n    this.ctx = getContext(this.canvas);\n\n    this.resizeCanvas();\n    this.model.on_some_change(['width', 'height'], this.resizeCanvas, this);\n\n    this.canvas.addEventListener('mousemove', { handleEvent: this.onMouseMove.bind(this) });\n    this.canvas.addEventListener('mousedown', { handleEvent: this.onMouseDown.bind(this) });\n    this.canvas.addEventListener('mouseup', { handleEvent: this.onMouseUp.bind(this) });\n    this.canvas.addEventListener('mouseout', { handleEvent: this.onMouseOut.bind(this) });\n    this.canvas.addEventListener('touchstart', { handleEvent: this.onTouchStart.bind(this) });\n    this.canvas.addEventListener('touchend', { handleEvent: this.onTouchEnd.bind(this) });\n    this.canvas.addEventListener('touchmove', { handleEvent: this.onTouchMove.bind(this) });\n    this.canvas.addEventListener('touchcancel', { handleEvent: this.onTouchCancel.bind(this) });\n\n    this.updateCanvas();\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  updateCanvas() {\n    this.clear();\n    this.ctx.drawImage(this.model.canvas, 0, 0);\n  }\n\n  private resizeCanvas() {\n    this.canvas.setAttribute('width', this.model.get('width'));\n    this.canvas.setAttribute('height', this.model.get('height'));\n  }\n\n  private onMouseMove(event: MouseEvent) {\n    this.model.send({ event: 'mouse_move', ...this.getCoordinates(event) }, {});\n  }\n\n  private onMouseDown(event: MouseEvent) {\n    this.model.send({ event: 'mouse_down', ...this.getCoordinates(event) }, {});\n  }\n\n  private onMouseUp(event: MouseEvent) {\n    this.model.send({ event: 'mouse_up', ...this.getCoordinates(event) }, {});\n  }\n\n  private onMouseOut(event: MouseEvent) {\n    this.model.send({ event: 'mouse_out', ...this.getCoordinates(event) }, {});\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_start', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private onTouchEnd(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_end', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private onTouchMove(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_move', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private onTouchCancel(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_cancel', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private getCoordinates(event: MouseEvent | Touch) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    return { x, y };\n  }\n\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  model: CanvasModel;\n}\n\n\nexport\nclass MultiCanvasModel extends DOMWidgetModel {\n  defaults() {\n    return {...super.defaults(),\n      _model_name: MultiCanvasModel.model_name,\n      _model_module: MultiCanvasModel.model_module,\n      _model_module_version: MultiCanvasModel.model_module_version,\n      _view_name: MultiCanvasModel.view_name,\n      _view_module: MultiCanvasModel.view_module,\n      _view_module_version: MultiCanvasModel.view_module_version,\n      _canvases: [],\n      sync_image_data: false,\n      image_data: null,\n    };\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n    _canvases: { deserialize: (unpack_models as any) },\n    image_data: { serialize: (bytes: Uint8ClampedArray) => {\n      return new DataView(bytes.buffer.slice(0));\n    }}\n  }\n\n  initialize(attributes: any, options: any) {\n    super.initialize(attributes, options);\n\n    this.on('change:_canvases', this.updateListeners.bind(this));\n    this.on('change:sync_image_data', this.syncImageData.bind(this));\n    this.updateListeners();\n  }\n\n  private updateListeners() {\n    // TODO: Remove old listeners\n    for (const canvasModel of this.get('_canvases')) {\n      canvasModel.on('new-frame', this.syncImageData, this);\n    }\n  }\n\n  private async syncImageData() {\n    if (!this.get('sync_image_data')) {\n      return;\n    }\n\n    // Draw on a temporary off-screen canvas.\n    const offscreenCanvas = document.createElement('canvas');\n    offscreenCanvas.width = this.get('width');\n    offscreenCanvas.height = this.get('height');\n    const ctx = getContext(offscreenCanvas);\n\n    for (const canvasModel of this.get('_canvases')) {\n      ctx.drawImage(canvasModel.canvas, 0, 0);\n\n      // Also update the sub-canvas image-data\n      const bytes = await toBytes(canvasModel.canvas);\n\n      canvasModel.set('image_data', bytes);\n      canvasModel.save_changes();\n    }\n\n    const bytes = await toBytes(offscreenCanvas);\n\n    this.set('image_data', bytes);\n    this.save_changes();\n  }\n\n  static model_name = 'MultiCanvasModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n  static view_name = 'MultiCanvasView';\n  static view_module = MODULE_NAME;\n  static view_module_version = MODULE_VERSION;\n}\n\n\nexport\nclass MultiCanvasView extends DOMWidgetView {\n  render() {\n    this.container = document.createElement('div');\n    this.container.style.position = 'relative';\n\n    this.el.appendChild(this.container);\n\n    this.canvas_views = new ViewList<CanvasView>(this.createCanvasView, this.removeCanvasView, this);\n    this.updateCanvasViews();\n\n    this.model.on('change:_canvases', this.updateCanvasViews.bind(this));\n  }\n\n  private updateCanvasViews() {\n    this.canvas_views.update(this.model.get('_canvases'));\n  }\n\n  private createCanvasView(canvasModel: CanvasModel, index: number) {\n    // The following ts-ignore is needed due to ipywidgets's implementation\n    // @ts-ignore\n    return this.create_child_view(canvasModel).then((canvasView: CanvasView) => {\n      canvasView.el.style.zIndex = index;\n\n      if (index == 0) {\n        // This will enforce the container to respect the children size.\n        canvasView.el.style.position = 'relative';\n        canvasView.el.style.float = 'left';\n      } else {\n        canvasView.el.style.position = 'absolute';\n      }\n\n      this.container.appendChild(canvasView.el);\n\n      return canvasView;\n    });\n  }\n\n  private removeCanvasView(canvasView: CanvasView) {\n    this.container.removeChild(canvasView.el);\n  }\n\n  private container: HTMLDivElement;\n  private canvas_views: ViewList<CanvasView>;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","function getTypedArray(dataview: any, metadata: any) {\n  switch (metadata.dtype) {\n    case 'int32':\n      return new Int32Array(dataview.buffer);\n      break;\n    default:\n      throw 'Unknown dtype ' + metadata.dtype;\n      break;\n  }\n}\n\n// Scalar type\ntype Scalar = null | boolean | number | string;\n\nnamespace Scalar {\n  export\n  function isScalar(x: any): x is Scalar {\n      return x === null || typeof x === \"boolean\" || typeof x === \"number\" || typeof x === \"string\";\n  }\n}\n\ntype TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\n\n// Buffered argument\nexport\nabstract class Arg {\n  abstract getItem(idx: number) : any;\n\n  length: number;\n}\n\nclass ScalarArg extends Arg {\n  constructor(value: Scalar) {\n    super();\n\n    this.value = value;\n    this.length = Infinity;\n  }\n\n  getItem(idx: number) : any {\n    return this.value;\n  }\n\n  value: Scalar;\n}\n\nclass BufferArg extends Arg {\n  constructor(bufferMetadata: any, buffer: any[]) {\n    super();\n\n    this.value = getTypedArray(buffer, bufferMetadata);\n    this.length = this.value.length;\n  }\n\n  getItem(idx: number) : any {\n    return this.value[idx];\n  }\n\n  value: TypedArray;\n}\n\nexport\nfunction getArg(metadata: any, buffers: any) : Arg {\n  if (Scalar.isScalar(metadata)) {\n    return new ScalarArg(metadata);\n  }\n\n  if (metadata['idx'] !== undefined) {\n    return new BufferArg(metadata, buffers[metadata['idx']])\n  }\n\n  throw 'Could not process argument ' + metadata;\n}\n\nexport\nasync function toBlob(canvas: HTMLCanvasElement) : Promise<Blob> {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob == null) {\n        return reject('Unable to create blob');\n      }\n\n      resolve(blob);\n    });\n  });\n}\n\nexport\nasync function toBytes(canvas: HTMLCanvasElement) : Promise<Uint8ClampedArray> {\n  const blob = await toBlob(canvas);\n\n  return new Promise<Uint8ClampedArray>((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n        if (typeof reader.result == 'string' || reader.result == null) {\n          return reject('Unable to read blob');\n        }\n\n        const bytes = new Uint8ClampedArray(reader.result);\n        resolve(bytes);\n    };\n    reader.readAsArrayBuffer(blob);\n  });\n}\n\nexport\nasync function fromBytes(array: Uint8ClampedArray) : Promise<HTMLImageElement> {\n  const blob = new Blob([array]);\n\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    const img = new Image();\n\n    img.onload = () => {\n      resolve(img);\n    }\n\n    img.src = URL.createObjectURL(blob);\n  });\n}\n"],"sourceRoot":""}