{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/version.ts","webpack:///./src/extension.ts","webpack:///./src/index.ts","webpack:///./src/widget.ts","webpack:///external \"@jupyter-widgets/base\"","webpack:///./src/utils.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","data","MODULE_VERSION","version","MODULE_NAME","window","__webpack_public_path__","document","querySelector","getAttribute","__export","base_1","version_1","utils_1","getContext","canvas","context","CanvasModel","DOMWidgetModel","[object Object]","assign","super","defaults","_model_name","model_name","_model_module","model_module","_model_module_version","model_module_version","_view_name","view_name","_view_module","view_module","_view_module_version","view_module_version","width","height","sync_image_data","image_data","attributes","options","initialize","this","createElement","ctx","resizeCanvas","drawImageData","on_some_change","on","syncImageData","onCommand","send","event","img","fromBytes","drawImage","trigger","command","buffers","processCommand","forEachView","view","updateCanvas","Array","remainingBuffers","subcommand","subbuffers","n_buffers","slice","drawRects","args","fillArc","strokeArc","drawArcs","putImageData","setAttr","attr","clearCanvas","executeCommand","commandName","x","getArg","y","numberRects","Math","min","length","idx","getItem","save","beginPath","closePath","fill","restore","stroke","radius","startAngle","endAngle","anticlockwise","numberArcs","arc","serializedImage","image","unpack_models","widget_manager","_drawImage","url","format","blob","Blob","type","URL","createObjectURL","TextDecoder","decode","buffer","Image","Promise","resolve","onload","src","undefined","bufferMetadata","dx","dy","shape","Uint8ClampedArray","imageData","ImageData","offscreenCanvas","clear","clearRect","callback","view_id","views","then","setAttribute","bytes","toBytes","set","save_changes","serializers","serialize","array","DataView","deserialize","dataview","CanvasView","DOMWidgetView","el","appendChild","model","addEventListener","handleEvent","onMouseMove","onMouseDown","onMouseUp","onMouseOut","onTouchStart","onTouchEnd","onTouchMove","onTouchCancel","getCoordinates","touches","from","map","rect","getBoundingClientRect","clientX","left","clientY","top","MultiCanvasModel","_canvases","updateListeners","canvasModel","MultiCanvasView","container","style","position","canvas_views","ViewList","createCanvasView","removeCanvasView","updateCanvasViews","update","index","create_child_view","canvasView","zIndex","float","removeChild","__WEBPACK_EXTERNAL_MODULE__5__","Scalar","isScalar","Arg","ScalarArg","Infinity","BufferArg","metadata","dtype","Int32Array","getTypedArray","toBlob","reject","reader","FileReader","onloadend","result","readAsArrayBuffer"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nconst data = require('../package.json');\n\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexport const MODULE_VERSION = data.version;\n\n/*\n * The current package name.\n */\nexport const MODULE_NAME = data.name;\n","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n\n// Entry point for the notebook bundle containing custom model definitions.\n//\n// Setup notebook base URL\n//\n// Some static assets may be required by the custom widget javascript. The base\n// url for the notebook is not known at build time and is therefore computed\n// dynamically.\n(window as any).__webpack_public_path__ = document.querySelector('body')!.getAttribute('data-base-url') + 'nbextensions/ipycanvas';\n\nexport * from './index';\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nexport * from './version';\nexport * from './widget';\n","// Copyright (c) Martin Renou\n// Distributed under the terms of the Modified BSD License.\n\nimport {\n  DOMWidgetModel, DOMWidgetView, ISerializers, Dict, ViewList, unpack_models\n} from '@jupyter-widgets/base';\n\nimport {\n  MODULE_NAME, MODULE_VERSION\n} from './version';\n\nimport {\n  getArg, toBytes, fromBytes\n} from './utils';\n\n\nfunction getContext(canvas: HTMLCanvasElement) {\n  const context = canvas.getContext(\"2d\");\n  if (context === null) {\n    throw 'Could not create 2d context.';\n  }\n  return context;\n}\n\nfunction serializeImageData(array: Uint8ClampedArray) {\n  return new DataView(array.buffer.slice(0));\n}\n\nfunction deserializeImageData(dataview: DataView | null) {\n  if (dataview === null) {\n    return null;\n  }\n\n  return new Uint8ClampedArray(dataview.buffer);\n}\n\n\nexport\nclass CanvasModel extends DOMWidgetModel {\n  defaults() {\n    return {...super.defaults(),\n      _model_name: CanvasModel.model_name,\n      _model_module: CanvasModel.model_module,\n      _model_module_version: CanvasModel.model_module_version,\n      _view_name: CanvasModel.view_name,\n      _view_module: CanvasModel.view_module,\n      _view_module_version: CanvasModel.view_module_version,\n      width: 700,\n      height: 500,\n      sync_image_data: false,\n      image_data: null,\n    };\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n    image_data: {\n      serialize: serializeImageData,\n      deserialize: deserializeImageData\n    }\n  }\n\n  initialize(attributes: any, options: any) {\n    super.initialize(attributes, options);\n\n    this.canvas = document.createElement('canvas');\n    this.ctx = getContext(this.canvas);\n\n    this.resizeCanvas();\n    this.drawImageData();\n\n    this.on_some_change(['width', 'height'], this.resizeCanvas, this);\n    this.on('change:sync_image_data', this.syncImageData.bind(this));\n    this.on('msg:custom', this.onCommand.bind(this));\n\n    this.send({ event: 'client_ready' }, {});\n  }\n\n  private async drawImageData() {\n    if (this.get('image_data') !== null) {\n      const img = await fromBytes(this.get('image_data'));\n\n      this.ctx.drawImage(img, 0, 0);\n\n      this.trigger('new-frame');\n    }\n  }\n\n  private async onCommand(command: any, buffers: any) {\n    await this.processCommand(command, buffers);\n\n    this.forEachView((view: CanvasView) => {\n      view.updateCanvas();\n    });\n\n    this.trigger('new-frame');\n    this.syncImageData();\n  }\n\n  private async processCommand(command: any, buffers: any) {\n    if (command instanceof Array) {\n      let remainingBuffers = buffers;\n\n      for (const subcommand of command) {\n        let subbuffers = [];\n        if (subcommand.n_buffers) {\n          subbuffers = remainingBuffers.slice(0, subcommand.n_buffers);\n          remainingBuffers = remainingBuffers.slice(subcommand.n_buffers)\n        }\n        await this.processCommand(subcommand, subbuffers);\n      }\n      return;\n    }\n\n    switch (command.name) {\n      case 'fillRects':\n        this.drawRects(command.args, buffers, 'fillRect');\n        break;\n      case 'strokeRects':\n        this.drawRects(command.args, buffers, 'strokeRect');\n        break;\n      case 'fillArc':\n        this.fillArc(command.args, buffers);\n        break;\n      case 'strokeArc':\n        this.strokeArc(command.args, buffers);\n        break;\n      case 'fillArcs':\n        this.drawArcs(command.args, buffers, 'fill');\n        break;\n      case 'strokeArcs':\n        this.drawArcs(command.args, buffers, 'stroke');\n        break;\n      case 'drawImage':\n        await this.drawImage(command.args, buffers);\n        break;\n      case 'putImageData':\n        this.putImageData(command.args, buffers);\n        break;\n      case 'set':\n        this.setAttr(command.attr, command.value);\n        break;\n      case 'clear':\n        this.clearCanvas();\n        break;\n      default:\n        this.executeCommand(command.name, command.args);\n        break;\n    }\n  }\n\n  private drawRects(args: any[], buffers: any, commandName: string) {\n    const x = getArg(args[0], buffers);\n    const y = getArg(args[1], buffers);\n    const width = getArg(args[2], buffers);\n    const height = getArg(args[3], buffers);\n\n    const numberRects = Math.min(x.length, y.length, width.length, height.length);\n\n    for (let idx = 0; idx < numberRects; ++idx) {\n      this.executeCommand(commandName, [x.getItem(idx), y.getItem(idx), width.getItem(idx), height.getItem(idx)]);\n    }\n  }\n\n  private fillArc(args: any[], buffers: any) {\n    this.ctx.save();\n\n    this.ctx.beginPath();\n    this.executeCommand('arc', args);\n    this.ctx.closePath();\n\n    this.ctx.fill();\n    this.ctx.restore();\n  }\n\n  private strokeArc(args: any[], buffers: any) {\n    this.ctx.save();\n\n    this.ctx.beginPath();\n    this.executeCommand('arc', args);\n    this.ctx.closePath();\n\n    this.ctx.stroke();\n    this.ctx.restore();\n  }\n\n  private drawArcs(args: any[], buffers: any, commandName: string) {\n    const x = getArg(args[0], buffers);\n    const y = getArg(args[1], buffers);\n    const radius = getArg(args[2], buffers);\n    const startAngle = getArg(args[3], buffers);\n    const endAngle = getArg(args[4], buffers);\n    const anticlockwise = getArg(args[5], buffers);\n\n    const numberArcs = Math.min(\n      x.length, y.length, radius.length,\n      startAngle.length, endAngle.length\n    );\n\n    this.ctx.save();\n\n    for (let idx = 0; idx < numberArcs; ++idx) {\n      this.ctx.beginPath();\n      this.ctx.arc(\n        x.getItem(idx), y.getItem(idx), radius.getItem(idx),\n        startAngle.getItem(idx), endAngle.getItem(idx),\n        anticlockwise.getItem(idx)\n      );\n      this.ctx.closePath();\n\n      this.executeCommand(commandName);\n    }\n\n    this.ctx.restore();\n  }\n\n  private async drawImage(args: any[], buffers: any) {\n    const [serializedImage, x, y, width, height] = args;\n\n    const image = await unpack_models(serializedImage, this.widget_manager);\n\n    if (image instanceof CanvasModel) {\n      this._drawImage(image.canvas, x, y, width, height);\n      return;\n    }\n\n    if (image.get('_model_name') == 'ImageModel') {\n      // Create the image manually instead of creating an ImageView\n      let url: string;\n      const format = image.get('format');\n      const value = image.get('value');\n      if (format !== 'url') {\n          const blob = new Blob([value], {type: `image/${format}`});\n          url = URL.createObjectURL(blob);\n      } else {\n          url = (new TextDecoder('utf-8')).decode(value.buffer);\n      }\n\n      const img = new Image();\n      return new Promise((resolve) => {\n        img.onload = () => {\n          this._drawImage(img, x, y, width, height);\n          resolve();\n        };\n        img.src = url;\n      });\n    }\n  }\n\n  private _drawImage(image: HTMLCanvasElement | HTMLImageElement,\n                     x: number, y: number,\n                     width: number | undefined, height: number | undefined) {\n    if (width === undefined || height === undefined) {\n      this.ctx.drawImage(image, x, y);\n    } else {\n      this.ctx.drawImage(image, x, y, width, height);\n    }\n  }\n\n  private putImageData(args: any[], buffers: any) {\n    const [bufferMetadata, dx, dy] = args;\n\n    const width = bufferMetadata.shape[1];\n    const height = bufferMetadata.shape[0];\n\n    const data = new Uint8ClampedArray(buffers[0].buffer);\n    const imageData = new ImageData(data, width, height);\n\n    // Draw on a temporary off-screen canvas. This is a workaround for `putImageData` to support transparency.\n    const offscreenCanvas = document.createElement('canvas');\n    offscreenCanvas.width = width;\n    offscreenCanvas.height = height;\n    getContext(offscreenCanvas).putImageData(imageData, 0, 0);\n\n    this.ctx.drawImage(offscreenCanvas, dx, dy);\n  }\n\n  private setAttr(attr: string, value: any) {\n    (this.ctx as any)[attr] = value;\n  }\n\n  private clearCanvas() {\n    this.forEachView((view: CanvasView) => {\n      view.clear();\n    });\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  private executeCommand(name: string, args: any[] = []) {\n    (this.ctx as any)[name](...args);\n  }\n\n  private forEachView(callback: (view: CanvasView) => void) {\n    for (const view_id in this.views) {\n      this.views[view_id].then((view: CanvasView) => {\n        callback(view);\n      });\n    }\n  }\n\n  private resizeCanvas() {\n    this.canvas.setAttribute('width', this.get('width'));\n    this.canvas.setAttribute('height', this.get('height'));\n  }\n\n  private async syncImageData() {\n    if (!this.get('sync_image_data')) {\n      return;\n    }\n\n    const bytes = await toBytes(this.canvas);\n\n    this.set('image_data', bytes);\n    this.save_changes();\n  }\n\n  static model_name = 'CanvasModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n  static view_name = 'CanvasView';\n  static view_module = MODULE_NAME;\n  static view_module_version = MODULE_VERSION;\n\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  views: Dict<Promise<CanvasView>>;\n}\n\n\nexport\nclass CanvasView extends DOMWidgetView {\n  render() {\n    this.canvas = document.createElement('canvas');\n\n    this.el.appendChild(this.canvas);\n    this.ctx = getContext(this.canvas);\n\n    this.resizeCanvas();\n    this.model.on_some_change(['width', 'height'], this.resizeCanvas, this);\n\n    this.canvas.addEventListener('mousemove', { handleEvent: this.onMouseMove.bind(this) });\n    this.canvas.addEventListener('mousedown', { handleEvent: this.onMouseDown.bind(this) });\n    this.canvas.addEventListener('mouseup', { handleEvent: this.onMouseUp.bind(this) });\n    this.canvas.addEventListener('mouseout', { handleEvent: this.onMouseOut.bind(this) });\n    this.canvas.addEventListener('touchstart', { handleEvent: this.onTouchStart.bind(this) });\n    this.canvas.addEventListener('touchend', { handleEvent: this.onTouchEnd.bind(this) });\n    this.canvas.addEventListener('touchmove', { handleEvent: this.onTouchMove.bind(this) });\n    this.canvas.addEventListener('touchcancel', { handleEvent: this.onTouchCancel.bind(this) });\n\n    this.updateCanvas();\n  }\n\n  clear() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  updateCanvas() {\n    this.clear();\n    this.ctx.drawImage(this.model.canvas, 0, 0);\n  }\n\n  private resizeCanvas() {\n    this.canvas.setAttribute('width', this.model.get('width'));\n    this.canvas.setAttribute('height', this.model.get('height'));\n  }\n\n  private onMouseMove(event: MouseEvent) {\n    this.model.send({ event: 'mouse_move', ...this.getCoordinates(event) }, {});\n  }\n\n  private onMouseDown(event: MouseEvent) {\n    this.model.send({ event: 'mouse_down', ...this.getCoordinates(event) }, {});\n  }\n\n  private onMouseUp(event: MouseEvent) {\n    this.model.send({ event: 'mouse_up', ...this.getCoordinates(event) }, {});\n  }\n\n  private onMouseOut(event: MouseEvent) {\n    this.model.send({ event: 'mouse_out', ...this.getCoordinates(event) }, {});\n  }\n\n  private onTouchStart(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_start', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private onTouchEnd(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_end', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private onTouchMove(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_move', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private onTouchCancel(event: TouchEvent) {\n    const touches: Touch[] = Array.from(event.touches);\n    this.model.send({ event: 'touch_cancel', touches: touches.map(this.getCoordinates.bind(this)) }, {});\n  }\n\n  private getCoordinates(event: MouseEvent | Touch) {\n    const rect = this.canvas.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const y = event.clientY - rect.top;\n\n    return { x, y };\n  }\n\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n\n  model: CanvasModel;\n}\n\n\nexport\nclass MultiCanvasModel extends DOMWidgetModel {\n  defaults() {\n    return {...super.defaults(),\n      _model_name: MultiCanvasModel.model_name,\n      _model_module: MultiCanvasModel.model_module,\n      _model_module_version: MultiCanvasModel.model_module_version,\n      _view_name: MultiCanvasModel.view_name,\n      _view_module: MultiCanvasModel.view_module,\n      _view_module_version: MultiCanvasModel.view_module_version,\n      _canvases: [],\n      sync_image_data: false,\n      image_data: null,\n    };\n  }\n\n  static serializers: ISerializers = {\n    ...DOMWidgetModel.serializers,\n    _canvases: { deserialize: (unpack_models as any) },\n    image_data: { serialize: (bytes: Uint8ClampedArray) => {\n      return new DataView(bytes.buffer.slice(0));\n    }}\n  }\n\n  initialize(attributes: any, options: any) {\n    super.initialize(attributes, options);\n\n    this.on('change:_canvases', this.updateListeners.bind(this));\n    this.on('change:sync_image_data', this.syncImageData.bind(this));\n    this.updateListeners();\n  }\n\n  private updateListeners() {\n    // TODO: Remove old listeners\n    for (const canvasModel of this.get('_canvases')) {\n      canvasModel.on('new-frame', this.syncImageData, this);\n    }\n  }\n\n  private async syncImageData() {\n    if (!this.get('sync_image_data')) {\n      return;\n    }\n\n    // Draw on a temporary off-screen canvas.\n    const offscreenCanvas = document.createElement('canvas');\n    offscreenCanvas.width = this.get('width');\n    offscreenCanvas.height = this.get('height');\n    const ctx = getContext(offscreenCanvas);\n\n    for (const canvasModel of this.get('_canvases')) {\n      ctx.drawImage(canvasModel.canvas, 0, 0);\n\n      // Also update the sub-canvas image-data\n      const bytes = await toBytes(canvasModel.canvas);\n\n      canvasModel.set('image_data', bytes);\n      canvasModel.save_changes();\n    }\n\n    const bytes = await toBytes(offscreenCanvas);\n\n    this.set('image_data', bytes);\n    this.save_changes();\n  }\n\n  static model_name = 'MultiCanvasModel';\n  static model_module = MODULE_NAME;\n  static model_module_version = MODULE_VERSION;\n  static view_name = 'MultiCanvasView';\n  static view_module = MODULE_NAME;\n  static view_module_version = MODULE_VERSION;\n}\n\n\nexport\nclass MultiCanvasView extends DOMWidgetView {\n  render() {\n    this.container = document.createElement('div');\n    this.container.style.position = 'relative';\n\n    this.el.appendChild(this.container);\n\n    this.canvas_views = new ViewList<CanvasView>(this.createCanvasView, this.removeCanvasView, this);\n    this.updateCanvasViews();\n\n    this.model.on('change:_canvases', this.updateCanvasViews.bind(this));\n  }\n\n  private updateCanvasViews() {\n    this.canvas_views.update(this.model.get('_canvases'));\n  }\n\n  private createCanvasView(canvasModel: CanvasModel, index: number) {\n    // The following ts-ignore is needed due to ipywidgets's implementation\n    // @ts-ignore\n    return this.create_child_view(canvasModel).then((canvasView: CanvasView) => {\n      canvasView.el.style.zIndex = index;\n\n      if (index == 0) {\n        // This will enforce the container to respect the children size.\n        canvasView.el.style.position = 'relative';\n        canvasView.el.style.float = 'left';\n      } else {\n        canvasView.el.style.position = 'absolute';\n      }\n\n      this.container.appendChild(canvasView.el);\n\n      return canvasView;\n    });\n  }\n\n  private removeCanvasView(canvasView: CanvasView) {\n    this.container.removeChild(canvasView.el);\n  }\n\n  private container: HTMLDivElement;\n  private canvas_views: ViewList<CanvasView>;\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","function getTypedArray(dataview: any, metadata: any) {\n  switch (metadata.dtype) {\n    case 'int32':\n      return new Int32Array(dataview.buffer);\n      break;\n    default:\n      throw 'Unknown dtype ' + metadata.dtype;\n      break;\n  }\n}\n\n// Scalar type\ntype Scalar = null | boolean | number | string;\n\nnamespace Scalar {\n  export\n  function isScalar(x: any): x is Scalar {\n      return x === null || typeof x === \"boolean\" || typeof x === \"number\" || typeof x === \"string\";\n  }\n}\n\ntype TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Uint8ClampedArray | Float32Array | Float64Array;\n\n// Buffered argument\nexport\nabstract class Arg {\n  abstract getItem(idx: number) : any;\n\n  length: number;\n}\n\nclass ScalarArg extends Arg {\n  constructor(value: Scalar) {\n    super();\n\n    this.value = value;\n    this.length = Infinity;\n  }\n\n  getItem(idx: number) : any {\n    return this.value;\n  }\n\n  value: Scalar;\n}\n\nclass BufferArg extends Arg {\n  constructor(bufferMetadata: any, buffer: any[]) {\n    super();\n\n    this.value = getTypedArray(buffer, bufferMetadata);\n    this.length = this.value.length;\n  }\n\n  getItem(idx: number) : any {\n    return this.value[idx];\n  }\n\n  value: TypedArray;\n}\n\nexport\nfunction getArg(metadata: any, buffers: any) : Arg {\n  if (Scalar.isScalar(metadata)) {\n    return new ScalarArg(metadata);\n  }\n\n  if (metadata['idx'] !== undefined) {\n    return new BufferArg(metadata, buffers[metadata['idx']])\n  }\n\n  throw 'Could not process argument ' + metadata;\n}\n\nexport\nasync function toBlob(canvas: HTMLCanvasElement) : Promise<Blob> {\n  return new Promise<Blob>((resolve, reject) => {\n    canvas.toBlob((blob) => {\n      if (blob == null) {\n        return reject('Unable to create blob');\n      }\n\n      resolve(blob);\n    });\n  });\n}\n\nexport\nasync function toBytes(canvas: HTMLCanvasElement) : Promise<Uint8ClampedArray> {\n  const blob = await toBlob(canvas);\n\n  return new Promise<Uint8ClampedArray>((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onloadend = () => {\n        if (typeof reader.result == 'string' || reader.result == null) {\n          return reject('Unable to read blob');\n        }\n\n        const bytes = new Uint8ClampedArray(reader.result);\n        resolve(bytes);\n    };\n    reader.readAsArrayBuffer(blob);\n  });\n}\n\nexport\nasync function fromBytes(array: Uint8ClampedArray) : Promise<HTMLImageElement> {\n  const blob = new Blob([array]);\n\n  return new Promise<HTMLImageElement>((resolve, reject) => {\n    const img = new Image();\n\n    img.onload = () => {\n      resolve(img);\n    }\n\n    img.src = URL.createObjectURL(blob);\n  });\n}\n"],"sourceRoot":""}